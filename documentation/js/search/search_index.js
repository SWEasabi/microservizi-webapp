var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.303,1,1.753]],["body/injectables/ApiService.html",[0,1.565,1,2.105,2,1.639,3,0.329,4,0.288,5,0.288,6,2.147,7,0.754,8,1.898,9,0.846,10,3.943,11,4.753,12,2.354,13,2.105,14,2.675,15,2.425,16,0.742,17,2.675,18,0.288,19,1.303,20,2.666,21,2.666,22,2.666,23,4.753,24,3.409,25,4.753,26,2.354,27,2.147,28,2.589,29,5.523,30,1.34,31,2.589,32,3.717,33,3.717,34,0.991,35,3.717,36,1.768,37,3.717,38,2.851,39,0.036,40,1.005,41,0.949,42,2.33,43,3.188,44,3.083,45,1.565,46,2.666,47,2.319,48,2.589,49,3.758,50,1.531,51,3.128,52,0.949,53,5.24,54,2.159,55,3.758,56,1.9,57,0.864,58,1.734,59,0.68,60,4.257,61,1.764,62,1.9,63,2.08,64,1.72,65,5.24,66,3.01,67,2.666,68,2.589,69,2.241,70,1.764,71,1.046,72,2.666,73,2.33,74,2.33,75,2.589,76,3.615,77,2,78,0.846,79,1.72,80,1.565,81,0.994,82,2.105,83,3.083,84,1.764,85,3.717,86,2.589,87,2.675,88,4.753,89,1.267,90,3.758,91,5.24,92,2.427,93,2.589,94,2.589,95,3.717,96,1.427,97,3.717,98,4.753,99,2.589,100,2.666,101,0.669,102,0.767,103,3.717,104,3.717,105,3.083,106,2.427,107,2.666,108,3.717,109,3.717,110,3.717,111,3.717,112,0.783,113,1.856,114,1.466,115,0.418,116,0.994,117,1.639,118,1.322,119,0.329,120,0.466,121,2.82,122,2.589,123,3.419,124,2.589,125,2.589,126,2.589,127,2.589,128,2.589,129,2.589,130,1.639,131,2.589,132,2.589,133,2.589,134,0.021,135,0.021]],["title/components/AppComponent.html",[136,0.128,137,0.618]],["body/components/AppComponent.html",[3,0.512,4,0.448,5,0.448,7,0.58,16,0.805,39,0.036,40,0.998,52,0.805,57,0.58,59,0.448,78,0.651,81,0.9,112,0.725,115,0.651,118,2.554,119,0.512,120,0.725,134,0.028,135,0.028,136,0.225,137,1.135,138,1.334,139,1.178,140,1.178,141,1.178,142,1.178,143,3.344,144,1.334,145,1.45,146,5.003,147,2.833,148,1.178,149,1.843,150,1.843,151,1.462,152,5.44,153,1.462,154,5.003,155,2.891,156,4.032,157,4.032,158,4.032,159,3.588,160,4.032,161,1.548,162,2.553,163,4.032,164,2.891,165,1.866,166,2.891,167,2.553,168,2.553,169,3.344,170,1.548,171,3.344,172,2.283,173,0.978,174,1.462,175,1.462,176,1.178,177,1.662,178,1.178,179,1.178,180,0.978,181,1.59,182,0.978,183,1.462,184,0.978,185,0.889,186,1.462,187,0.978,188,1.178,189,0.978,190,1.075,191,0.978,192,1.178,193,0.978,194,0.889,195,0.978,196,0.805,197,0.978,198,1.075,199,0.978,200,1.178,201,0.978,202,0.889,203,1.178,204,1.178,205,1.178]],["title/modules/AppModule.html",[206,2.221,207,1.961]],["body/modules/AppModule.html",[3,0.474,4,0.415,5,0.415,39,0.037,52,0.95,112,1.069,114,2.111,115,0.602,119,0.474,120,0.671,134,0.027,135,0.027,137,1.236,173,0.905,196,0.95,206,2.674,207,3.761,208,2.674,209,2.361,210,4.353,211,3.763,212,3.95,213,3.95,214,3.092,215,3.092,216,3.092,217,3.95,218,3.092,219,2.361,220,3.728,221,3.95,222,4.762,223,4.762,224,3.95,225,2.674,226,4.762,227,3.728,228,2.361,229,3.965,230,1.725,231,3.728,232,3.415,233,3.728,234,1.903,235,6.121,236,6.013,237,3.728,238,2.674,239,3.728,240,6.013,241,3.728,242,3.728,243,3.728,244,4.762,245,3.728,246,2.674,247,5.248,248,3.728,249,3.728,250,3.728,251,3.728,252,3.728,253,3.728,254,2.674,255,3.728,256,3.728,257,3.728,258,3.728,259,3.728,260,3.728,261,2.674,262,3.728,263,3.728,264,3.728,265,3.728,266,4.762,267,4.762,268,4.762,269,2.361,270,3.728,271,3.728,272,1.09,273,3.728]],["title/injectables/AppService.html",[0,1.303,274,0.991]],["body/injectables/AppService.html",[0,0.887,1,1.543,2,0.794,3,0.159,4,0.139,5,0.139,7,0.459,8,1.391,9,0.919,12,2.022,13,1.193,14,2.621,15,2.251,16,1.13,17,2.36,18,0.139,19,0.738,20,1.511,21,1.511,22,1.511,24,0.899,26,1.334,30,1.319,34,1.517,36,1.377,38,2.321,39,0.036,40,0.818,41,0.818,42,1.896,43,1.725,46,1.511,47,1.998,49,2.765,50,1.54,51,2.436,52,0.637,54,1.48,55,3.489,56,1.643,57,0.833,58,1.127,59,0.68,61,0.738,62,1.822,63,0.738,64,0.975,67,1.511,69,1.998,70,1.507,71,1.052,72,1.511,73,1.647,74,1.647,76,2.927,77,1.824,78,0.801,79,1.477,80,1.344,81,0.875,84,1.247,89,1.028,90,3.209,92,2.657,96,1.94,100,3.56,101,1.043,102,0.968,107,2.289,112,0.64,113,0.899,114,0.71,115,0.202,116,0.481,117,0.794,118,0.64,119,0.159,120,0.226,121,1.817,123,1.725,130,0.794,134,0.012,135,0.012,144,0.726,147,2.436,155,1.511,161,1.774,165,1.261,172,1.193,185,0.903,190,0.561,194,1.019,196,0.971,198,0.334,202,0.903,234,0.64,274,0.674,275,0.794,276,2.022,277,2.289,278,1.665,279,3.941,280,1.747,281,2.648,282,3.198,283,1.747,284,1.747,285,2.255,286,1.511,287,3.941,288,1.747,289,0.303,290,2.534,291,3.018,292,2.621,293,3.209,294,1.99,295,4.643,296,2.289,297,2.289,298,2.648,299,2.26,300,2.106,301,2.648,302,2.648,303,1.511,304,1.253,305,2.648,306,3.711,307,4.671,308,2.71,309,2.535,310,3.834,311,2.183,312,3.834,313,4.192,314,3.834,315,3.085,316,2.321,317,1.811,318,2.765,319,1.968,320,2.441,321,1.075,322,3.198,323,3.711,324,2.321,325,1.253,326,1.253,327,2.648,328,1.747,329,1.253,330,2.765,331,3.56,332,2.765,333,2.183,334,2.939,335,1.717,336,1.253,337,1.253,338,2.26,339,1.253,340,1.725,341,2.289,342,2.092,343,2.26,344,1.334,345,1.075,346,2.26,347,1.747,348,1.808,349,1.817,350,1.253,351,1.63,352,1.747,353,1.127,354,0.674,355,1.511,356,1.747,357,1.747,358,1.253,359,1.253,360,1.511,361,1.253,362,2.648,363,2.648,364,2.289,365,1.511,366,1.253,367,1.044,368,1.044,369,1.075,370,1.747,371,1.253,372,2.289,373,2.26,374,2.553,375,2.648,376,1.747,377,1.261,378,0.809,379,1.511,380,1.511,381,1.193,382,2.648,383,1.747,384,1.747,385,1.747,386,1.747,387,1.193,388,1.511,389,1.511,390,1.747,391,1.954,392,1.747,393,1.253,394,1.511,395,4.035,396,1.747,397,1.253,398,1.747,399,1.253,400,1.747,401,1.253,402,1.747,403,1.253,404,1.747,405,1.747,406,1.747,407,1.747,408,1.747,409,1.747,410,1.253,411,1.747,412,1.253,413,0.439,414,2.648,415,0.899,416,2.648,417,2.648,418,3.399,419,1.04,420,1.04,421,1.075,422,2.553,423,1.04,424,1.04,425,1.04,426,1.954,427,2.289,428,0.439,429,2.26,430,1.954,431,2.26,432,1.747,433,1.747,434,1.04,435,1.04,436,1.075,437,0.899,438,1.511,439,2.595,440,0.899,441,0.794,442,0.948,443,3.198,444,1.225,445,1.04,446,1.04,447,1.04,448,2.26,449,3.198,450,1.193,451,1.04,452,1.04,453,0.899,454,3.711,455,1.747,456,1.747,457,1.747,458,1.747,459,1.747,460,3.834,461,1.04,462,1.954,463,1.04,464,1.747,465,1.193,466,1.04,467,1.04,468,1.04,469,1.04,470,1.04,471,1.04,472,1.04,473,1.04,474,3.568,475,1.747,476,2.26,477,2.648,478,1.04,479,1.04,480,1.04,481,1.04,482,1.04,483,2.648,484,1.04,485,0.71,486,1.04,487,1.04,488,1.04,489,0.899,490,1.747,491,1.04,492,1.04,493,1.04,494,2.648,495,1.04,496,1.04,497,1.04,498,1.04,499,1.04,500,1.04,501,1.954,502,2.26,503,1.04,504,2.26,505,1.04,506,1.04,507,1.04]],["title/components/AreaButtonComponent.html",[136,0.128,180,0.751]],["body/components/AreaButtonComponent.html",[3,0.365,4,0.32,5,0.32,7,0.413,16,1.132,18,0.32,30,0.972,36,1.282,39,0.036,40,0.919,41,0.574,50,1.456,52,1.165,57,0.78,58,1.17,59,0.649,61,1.746,62,1.594,63,1.403,71,0.799,78,0.646,96,1.912,101,0.72,102,0.804,106,2.674,112,1.001,115,0.464,116,1.104,119,0.365,120,0.517,134,0.022,135,0.022,136,0.191,137,0.574,138,1.067,139,0.84,140,0.84,141,0.84,142,0.84,144,1.328,145,1.556,148,0.84,149,1.763,150,1.763,151,1.17,153,1.17,162,2.536,170,1.537,173,0.698,174,1.17,175,1.17,176,0.84,177,1.456,178,0.84,179,0.84,180,1.209,181,1.346,182,0.698,183,1.17,184,0.698,185,0.634,186,1.17,187,0.698,188,0.84,189,0.698,190,0.766,191,0.698,192,0.84,193,0.698,194,0.634,195,0.698,196,0.574,197,0.698,198,0.766,199,0.698,200,0.84,201,0.698,202,0.634,203,0.84,204,0.84,205,0.84,272,1.17,285,1.912,289,0.576,291,2.609,316,3.071,317,1.686,321,2.044,345,2.044,351,2.543,354,1.282,367,0.698,368,0.698,377,2.305,378,1.537,381,2.267,387,2.267,442,0.883,450,2.267,508,3.821,509,3.304,510,1.821,511,2.872,512,2.872,513,3.573,514,2.872,515,2.821,516,3.304,517,2.536,518,2.872,519,3.321,520,4.004,521,2.872,522,2.872,523,3.321,524,2.044,525,2.267,526,2.267,527,2.536,528,2.267,529,2.044,530,2.044,531,3.756,532,1.282,533,1.474,534,3.304,535,2.872,536,3.304,537,3.889,538,2.872,539,3.304,540,2.876,541,3.321,542,3.321,543,2.872,544,3.321,545,2.876,546,2.872,547,2.872,548,3.321,549,2.872,550,2.872,551,2.872,552,2.872,553,0.84,554,2.385,555,0.92,556,1.008,557,1.468,558,2.062,559,1.628,560,3.573,561,2.609,562,1.821,563,2.062,564,2.609,565,2.062,566,2.062,567,2.062,568,2.543,569,2.917,570,1.821,571,1.821,572,1.628,573,2.062,574,2.062,575,1.628,576,1.821,577,1.821,578,1.821,579,2.062,580,2.062,581,1.628,582,1.628,583,2.062,584,1.628,585,2.872,586,1.628,587,2.385,588,2.062,589,2.062,590,3.821,591,3.321,592,2.385,593,1.821,594,2.385,595,3.573,596,2.385,597,2.385,598,2.385,599,2.385,600,2.062,601,2.385,602,2.062,603,2.385]],["title/components/AreaComponent.html",[136,0.128,182,0.751]],["body/components/AreaComponent.html",[3,0.345,4,0.302,5,0.302,7,0.39,9,1.001,16,1.063,17,2.718,18,0.302,19,1.348,20,3.818,30,1.292,34,1.295,39,0.036,40,0.768,45,2.354,50,1.42,51,2.751,52,1.093,54,1.968,56,0.869,57,0.766,58,1.124,59,0.66,66,3.076,78,0.941,81,1.024,87,1.964,89,1.295,101,0.692,102,0.784,112,1.024,115,0.438,118,2.48,119,0.345,120,0.489,134,0.022,135,0.022,136,0.185,137,0.542,138,1.025,139,0.794,140,0.794,141,0.794,142,0.794,144,1.025,145,1.419,148,0.794,149,1.748,150,1.748,151,1.124,153,1.124,164,3.484,173,0.659,174,1.124,175,1.124,176,0.794,177,1.42,178,0.794,179,0.794,180,0.659,181,1.305,182,1.179,183,1.124,184,0.659,185,0.599,186,1.124,187,0.659,188,0.794,189,0.659,190,0.724,191,0.659,192,0.794,193,0.659,194,0.599,195,0.659,196,0.542,197,0.659,198,0.724,199,0.659,200,0.794,201,0.659,202,0.599,203,0.794,204,0.794,205,0.794,228,2.828,230,1.257,234,1.386,272,1.124,274,1.79,278,1.348,289,0.553,292,2.28,309,1.964,311,3.167,317,1.619,335,1.042,342,2.48,353,1.685,354,1.231,367,1.244,368,1.244,413,0.952,421,1.964,436,2.48,442,0.848,444,1.476,532,1.231,533,1.429,553,0.794,555,0.869,556,0.952,604,2.252,605,3.602,606,1.476,607,2.067,608,3.846,609,3.076,610,3.076,611,4.858,612,2.828,613,2.828,614,3.705,615,3.19,616,3.372,617,2.828,618,3.1,619,2.715,620,1.78,621,3.19,622,1.714,623,3.19,624,1.78,625,2.715,626,2.588,627,1.964,628,1.78,629,2.758,630,2.715,631,2.045,632,2.436,633,2.715,634,3.076,635,2.436,636,2.436,637,2.436,638,2.436,639,2.715,640,2.436,641,2.828,642,2.436,643,2.715,644,2.436,645,2.436,646,3.19,647,1.143,648,1.72,649,1.538,650,1.257,651,2.252,652,2.715,653,2.715,654,1.947,655,1.947,656,1.947,657,1.964,658,2.758,659,2.758]],["title/interfaces/AreaStatus.html",[61,1.085,428,1.085]],["body/interfaces/AreaStatus.html",[3,0.409,4,0.358,5,0.358,7,0.463,9,0.905,18,0.358,36,1.672,39,0.037,41,0.975,47,2.327,54,2.341,57,0.838,59,0.624,61,1.515,62,1.03,63,1.83,64,2.417,69,2.005,70,1.128,71,0.863,73,2.001,74,2.001,77,2.124,78,0.925,79,2.001,80,1.821,81,1.129,82,2.449,84,1.128,101,1.031,102,0.963,119,0.621,134,0.024,135,0.024,161,1.875,165,2.761,170,2.2,289,0.622,319,2.666,321,2.864,348,2.766,349,2.208,378,2.2,428,1.712,485,2.766,657,3.114,660,1.822,661,2.038,662,2.739,663,4.234,664,3.307,665,3.745,666,3.738,667,3.093,668,3.63,669,3.093,670,3.503,671,3.745,672,3.745,673,2.308,674,2.308,675,3.503,676,3.503,677,3.503,678,3.101,679,3.101,680,3.101,681,3.101,682,3.101]],["title/components/AreasListComponent.html",[136,0.128,184,0.751]],["body/components/AreasListComponent.html",[3,0.348,4,0.305,5,0.305,7,0.394,8,1.975,9,0.982,16,0.895,17,2.95,18,0.43,19,1.356,30,1.248,34,1.3,36,1.238,39,0.036,40,0.772,41,0.546,45,1.629,52,0.772,56,0.876,57,0.701,58,1.425,59,0.666,61,1.572,71,0.772,78,0.862,81,0.987,89,1.3,92,2.861,96,1.485,101,0.696,102,0.787,112,1.025,115,0.442,116,1.051,119,0.348,120,0.493,134,0.022,135,0.022,136,0.186,137,0.546,138,1.031,139,0.8,140,0.8,141,0.8,142,0.8,144,1.463,145,1.558,148,0.8,149,1.75,150,1.75,151,1.131,153,1.131,167,2.45,168,2.45,169,2.271,170,1.051,171,2.271,172,2.541,173,0.665,174,1.131,175,1.131,176,0.8,177,1.425,178,0.8,179,0.8,180,1.183,181,1.311,182,0.665,183,1.131,184,1.183,185,1.288,186,1.131,187,0.665,188,0.8,189,0.665,190,0.73,191,0.665,192,0.8,193,0.665,194,0.604,195,0.665,196,0.546,197,0.665,198,0.73,199,0.665,200,0.8,201,0.665,202,0.604,203,1.311,204,0.8,205,0.8,261,3.829,272,1.131,274,1.436,278,1.356,285,1.872,289,0.556,294,2.076,297,2.775,308,2.256,332,1.964,335,1.051,340,2.45,345,2.29,353,1.638,354,1.561,367,1.183,368,1.183,374,2.775,413,0.96,426,1.964,442,0.853,444,1.485,465,1.551,509,1.964,511,2.775,515,2.761,524,1.975,525,2.191,526,2.191,527,2.45,528,2.191,529,1.975,530,1.975,532,1.238,533,1.436,553,0.8,555,1.436,556,0.96,557,1.398,559,1.551,606,1.485,607,2.076,620,1.79,622,1.051,624,1.79,626,1.79,627,1.975,628,1.79,631,2.053,647,1.153,650,1.267,666,2.45,683,4.428,684,1.734,685,4.044,686,3.869,687,3.869,688,3.209,689,2.191,690,3.257,691,3.218,692,2.775,693,3.218,694,4.487,695,3.088,696,2.271,697,3.209,698,3.869,699,3.209,700,3.869,701,2.271,702,3.209,703,3.209,704,3.209,705,3.209,706,3.209,707,2.775,708,2.271,709,2.271,710,3.218,711,2.271,712,3.209,713,3.209,714,3.209,715,3.209,716,2.775,717,3.209,718,2.738,719,2.738,720,1.964,721,2.738,722,1.964,723,2.738,724,2.738,725,2.738,726,3.869,727,2.738,728,2.738]],["title/injectables/AuthService.html",[0,1.303,729,1.961]],["body/injectables/AuthService.html",[0,1.767,2,1.95,3,0.391,4,0.342,5,0.342,7,0.687,8,2.143,13,2.377,16,0.838,18,0.342,19,1.471,27,3.961,30,1.375,38,1.743,39,0.036,40,0.614,41,0.614,42,1.425,47,2.214,56,1.872,57,0.851,59,0.616,62,1.772,71,1.151,81,1.064,87,2.143,89,1.119,112,0.755,115,0.497,117,1.95,118,1.572,119,0.391,120,0.755,121,2.143,123,3.248,134,0.024,135,0.024,145,1.119,159,3.01,161,2.271,165,2.373,170,1.611,196,0.953,269,3.248,289,0.603,315,3.849,317,2.159,318,3.678,319,2.827,335,1.611,349,2.618,367,0.747,368,0.747,377,1.425,378,1.611,439,2.658,442,0.925,453,3.01,501,2.208,609,2.658,622,1.968,729,3.589,730,2.554,731,5.128,732,3.481,733,4.197,734,4.197,735,4.775,736,5.128,737,5.128,738,5.128,739,4.593,740,4.197,741,3.079,742,4.593,743,4.593,744,4.197,745,3.079,746,5.128,747,4.37,748,4.254,749,3.079,750,5.128,751,4.197,752,4.593,753,3.079,754,4.197,755,3.481,756,4.197,757,3.481,758,4.197,759,4.254,760,4.197,761,4.197,762,4.197,763,3.079,764,4.197,765,4.197,766,3.481,767,3.481,768,4.197,769,4.593,770,4.197,771,4.197,772,3.481,773,4.197,774,4.197,775,4.197,776,3.079,777,3.079,778,4.775,779,4.197,780,2.554,781,3.079,782,3.079,783,3.079]],["title/components/AuthenticationComponent.html",[136,0.128,187,0.751]],["body/components/AuthenticationComponent.html",[3,0.288,4,0.252,5,0.252,7,0.326,9,0.985,10,2.799,12,1.436,16,0.998,18,0.375,19,1.182,30,1.257,34,1.333,39,0.037,40,0.673,41,0.452,45,2.33,47,1.295,50,0.986,52,0.673,56,1.08,57,0.796,59,0.677,62,1.08,71,0.673,78,0.906,81,1.034,87,1.722,89,1.074,112,1.011,114,1.284,115,0.366,119,0.288,120,0.408,134,0.019,135,0.019,136,0.167,137,0.452,138,0.899,139,0.663,140,0.663,141,0.663,142,0.663,144,1.19,145,1.333,148,0.663,149,1.695,150,1.695,151,0.986,153,0.986,159,2.42,161,1.295,166,2.42,167,2.137,168,2.137,173,0.55,174,0.986,175,0.986,176,0.663,177,1.304,178,0.663,179,0.663,180,0.55,181,1.178,182,0.55,183,0.986,184,0.55,185,0.5,186,0.986,187,1.083,188,0.663,189,0.55,190,0.604,191,0.55,192,0.663,193,0.55,194,0.5,195,0.55,196,0.452,197,0.55,198,0.604,199,0.55,200,0.663,201,0.55,202,0.5,203,0.663,204,0.663,205,0.663,221,3.342,230,1.049,234,1.157,269,3.841,272,0.986,285,1.295,289,0.485,309,1.722,324,2.527,333,1.911,335,1.295,341,3.201,342,2.553,353,1.721,355,2.42,367,1.083,368,1.083,389,2.42,413,0.795,436,2.278,442,0.744,444,1.295,465,1.284,532,1.08,533,1.29,553,0.663,555,1.29,556,0.795,561,1.284,562,1.436,564,2.527,568,2.278,569,1.436,572,2.527,575,1.284,577,3.021,581,1.284,582,1.911,584,1.284,586,1.284,605,3.673,606,1.295,610,2.137,612,2.552,613,2.552,616,3.167,617,2.552,618,2.933,620,1.561,622,1.831,626,2.463,631,1.42,632,2.137,634,2.826,635,2.137,636,2.137,637,2.826,638,2.826,640,2.137,641,2.552,642,2.137,644,2.826,645,2.137,647,0.954,648,1.436,649,1.284,689,1.911,690,2.552,695,2.826,729,3.167,732,2.799,742,2.799,752,4.148,755,1.881,757,4.148,766,2.799,767,2.799,780,1.881,784,1.881,785,3.374,786,4.029,787,4.463,788,4.148,789,4.463,790,3.702,791,4.463,792,2.799,793,4.029,794,3.374,795,4.771,796,2.267,797,3.374,798,2.799,799,3.374,800,3.374,801,2.267,802,3.374,803,2.42,804,3.374,805,2.267,806,2.267,807,3.374,808,3.374,809,3.374,810,3.374,811,2.267,812,2.267,813,2.267,814,2.267,815,2.267,816,2.267,817,2.267,818,2.267,819,2.267,820,2.267,821,2.267,822,2.267,823,2.267,824,2.267,825,2.267,826,3.374,827,4.463,828,2.267,829,3.374,830,2.267,831,1.881,832,1.626,833,1.626,834,1.626,835,4.029,836,3.342,837,3.374,838,2.267,839,2.267,840,2.267,841,4.463,842,2.267,843,2.267,844,2.267,845,2.267,846,2.267,847,1.881,848,2.267,849,2.267,850,3.374,851,3.374,852,2.267,853,2.267]],["title/components/LampButtonComponent.html",[136,0.128,189,0.751]],["body/components/LampButtonComponent.html",[3,0.339,4,0.296,5,0.296,7,0.383,9,0.612,16,1.111,18,0.296,26,2.799,30,1.073,34,1.012,36,1.542,39,0.036,40,0.882,41,0.757,50,1.546,52,0.532,57,0.826,58,1.109,59,0.663,60,2.722,62,1.694,63,1.33,69,2.136,70,1.854,71,0.961,78,0.612,92,1.937,96,1.457,101,0.867,102,0.854,106,2.78,112,0.916,115,0.43,116,1.023,119,0.339,120,0.479,134,0.021,135,0.021,136,0.183,137,0.532,138,1.012,139,0.779,140,0.779,141,0.779,142,0.779,144,1.41,145,1.531,148,0.779,149,1.743,150,1.743,151,1.109,153,1.109,162,2.403,170,1.457,173,0.647,174,1.109,175,1.109,176,0.779,177,1.408,178,0.779,179,0.779,180,0.647,181,1.292,182,0.647,183,1.109,184,0.647,185,0.587,186,1.109,187,0.647,188,0.779,189,1.169,190,1.531,191,0.647,192,0.779,193,0.647,194,0.587,195,0.647,196,0.532,197,0.647,198,0.71,199,0.647,200,0.779,201,0.647,202,0.587,203,0.779,204,0.779,205,0.779,272,1.109,278,1.33,285,1.457,289,0.546,291,2.503,316,3.152,317,1.598,333,2.149,351,2.459,353,1.109,354,1.215,364,2.722,367,0.647,368,0.647,369,1.36,377,2.229,378,1.457,379,2.722,381,2.149,387,2.149,442,0.837,450,2.727,510,1.687,512,2.722,513,3.795,514,3.454,515,2.727,516,3.795,517,2.403,518,2.722,521,2.722,522,2.722,524,1.937,525,2.149,526,2.149,528,2.149,529,1.937,530,1.937,531,3.905,532,1.215,533,1.415,534,3.17,535,2.722,536,3.17,537,3.905,538,2.722,539,3.651,542,3.148,543,2.722,544,3.148,546,2.722,547,2.722,548,3.148,549,2.722,550,2.722,551,2.722,552,2.722,553,0.779,554,2.21,555,0.853,556,0.934,557,1.36,558,3.651,559,1.509,560,2.722,561,2.503,562,1.687,563,1.911,564,2.503,565,1.911,566,1.911,567,1.911,568,2.459,569,2.799,570,1.687,571,1.687,572,1.509,573,1.911,574,1.911,575,1.509,576,1.687,577,1.687,578,1.687,579,1.911,580,1.911,581,1.509,582,1.509,583,1.911,584,1.509,585,2.722,586,1.509,587,2.21,588,1.911,589,1.911,590,3.666,591,3.148,592,2.21,593,1.687,594,2.21,595,3.454,596,2.21,597,2.21,598,2.21,599,2.21,600,1.911,601,2.21,602,1.911,603,2.21,606,1.457,664,2.403,788,3.148,803,2.722,854,3.995,855,3.454,856,3.148,857,3.795,858,3.148,859,3.795,860,3.148,861,2.665,862,2.665,863,3.148,864,2.665,865,3.795,866,3.795]],["title/components/LampComponent.html",[136,0.128,191,0.751]],["body/components/LampComponent.html",[3,0.344,4,0.301,5,0.301,7,0.389,9,1.006,14,2.475,16,1.061,18,0.301,19,1.344,21,3.813,30,1.29,34,1.489,39,0.036,40,0.765,45,2.352,50,1.417,51,2.746,52,0.54,54,1.861,56,0.866,57,0.765,58,1.121,59,0.648,66,3.07,69,2.041,71,0.765,78,0.941,81,1.023,87,1.958,89,1.022,101,0.69,102,0.782,112,1.023,115,0.436,119,0.344,120,0.487,134,0.022,135,0.022,136,0.185,137,0.54,138,1.022,139,0.79,140,0.79,141,0.79,142,0.79,144,1.022,145,1.417,148,0.79,149,1.747,150,1.747,151,1.121,153,1.121,164,3.477,173,0.656,174,1.121,175,1.121,176,0.79,177,1.417,178,0.79,179,0.79,180,0.656,181,1.302,182,0.656,183,1.121,184,0.656,185,0.596,186,1.121,187,0.656,188,0.79,189,0.656,190,1.188,191,1.177,192,0.79,193,0.656,194,0.596,195,0.656,196,0.54,197,0.656,198,0.721,199,0.656,200,0.79,201,0.656,202,0.596,203,0.79,204,0.79,205,0.79,228,2.822,230,1.251,272,1.121,274,1.702,276,3.07,278,1.344,289,0.551,292,2.275,309,1.958,311,3.164,317,1.614,324,2.746,335,1.038,342,2.475,353,1.72,354,1.227,367,1.242,368,1.242,413,0.948,421,1.958,436,2.475,442,0.845,444,1.472,532,1.227,533,1.426,553,0.79,555,0.866,556,0.948,605,3.599,606,1.472,607,2.062,609,3.07,610,3.367,612,2.822,613,2.822,616,3.367,617,2.822,618,3.096,620,1.775,621,3.181,622,1.71,624,1.775,626,2.585,627,1.958,628,1.775,629,2.75,631,2.041,632,2.429,634,3.07,635,2.429,636,2.429,637,2.429,638,2.429,640,2.429,641,2.822,642,2.429,644,3.07,645,2.429,647,1.138,648,1.713,649,1.531,650,1.251,654,1.939,655,1.939,656,1.939,657,1.958,658,2.75,659,2.75,798,3.181,867,2.243,868,4.022,869,4.456,870,3.835,871,2.704,872,2.75,873,2.704,874,2.704,875,2.704,876,2.704,877,2.704,878,2.704]],["title/interfaces/LampStatus.html",[70,1.085,428,1.085]],["body/interfaces/LampStatus.html",[3,0.391,4,0.342,5,0.342,7,0.442,9,0.893,18,0.342,36,1.871,39,0.036,41,1.023,42,1.94,47,2.309,50,0.898,54,2.325,57,0.841,59,0.641,61,1.077,62,1.342,63,1.796,64,1.94,69,2.309,70,1.469,71,1.023,73,1.94,74,1.94,77,2.108,78,0.914,79,1.94,80,1.764,81,1.132,82,2.374,84,1.077,101,1.019,102,0.971,119,0.606,134,0.024,135,0.024,161,2.058,165,2.784,170,2.174,289,0.603,319,2.826,321,2.435,348,3.208,349,2.616,378,2.174,428,1.672,485,3.037,657,3.126,660,1.74,661,1.946,662,1.946,663,4.193,664,2.654,665,3.006,666,3.703,667,3.021,668,3.587,669,3.021,670,3.421,671,3.675,672,3.675,673,3.421,674,3.421,675,3.846,676,3.846,677,3.846,678,3.006,679,3.006,680,3.006,681,3.006,682,3.006]],["title/components/LampsListComponent.html",[136,0.128,193,0.751]],["body/components/LampsListComponent.html",[3,0.327,4,0.286,5,0.286,7,0.532,8,1.889,9,0.99,14,2.91,16,0.946,18,0.412,19,1.297,26,2.343,30,1.269,34,1.263,36,1.674,38,1.457,39,0.036,40,0.865,41,0.738,42,1.19,44,3.069,45,1.558,50,1.081,52,0.513,56,1.184,57,0.752,58,1.385,59,0.682,69,1.819,70,1.932,71,0.738,78,0.92,81,0.992,89,1.263,92,2.42,96,1.819,101,0.992,102,0.92,106,1.889,112,1.01,115,0.415,116,0.987,119,0.327,120,0.463,121,1.313,134,0.021,135,0.021,136,0.179,137,0.513,138,0.986,139,0.752,140,0.752,141,0.752,142,0.752,144,1.47,145,1.538,148,0.752,149,1.733,150,1.733,151,1.081,153,1.081,166,2.654,167,2.343,168,2.343,172,2.095,173,0.624,174,1.081,175,1.081,176,0.752,177,1.385,178,0.752,179,0.752,180,0.624,181,1.267,182,0.624,183,1.081,184,0.624,185,0.567,186,1.081,187,0.624,188,0.752,189,1.219,190,1.263,191,0.624,192,0.752,193,1.15,194,1.272,195,0.624,196,0.513,197,0.624,198,0.686,199,0.624,200,0.752,201,0.624,202,0.567,203,1.267,204,0.752,205,0.752,246,3.864,272,1.081,274,1.387,277,2.654,278,1.297,285,1.819,286,2.654,289,0.532,294,2.006,296,2.654,308,2.193,335,1.42,344,2.343,345,1.889,353,1.611,354,1.517,360,2.654,367,1.15,368,1.15,413,0.901,442,0.816,444,2.007,489,1.845,511,2.654,515,2.095,517,2.343,524,2.42,525,2.095,526,2.095,527,2.343,528,2.095,529,1.889,530,1.889,532,1.184,533,1.387,553,0.752,555,1.387,556,0.901,557,1.313,559,1.457,606,1.42,607,2.324,620,1.712,622,0.987,624,1.712,626,1.712,627,1.889,628,1.712,631,1.558,647,1.083,650,1.19,684,1.629,685,3.931,688,3.069,689,2.095,690,3.18,691,3.108,692,2.654,693,3.108,695,3.001,696,2.134,697,3.069,699,3.069,701,2.134,702,3.069,703,3.069,704,3.069,705,3.069,706,3.069,707,2.654,708,2.134,709,2.134,710,3.108,711,2.134,712,3.069,713,3.069,714,3.069,715,3.069,716,2.654,717,3.069,720,1.845,722,1.845,855,1.845,879,4.469,880,3.7,881,5.514,882,4.334,883,2.572,884,3.7,885,3.7,886,2.572,887,2.572,888,2.572]],["title/components/PrivateAreaComponent.html",[136,0.128,195,0.751]],["body/components/PrivateAreaComponent.html",[3,0.361,4,0.316,5,0.316,7,0.408,9,0.939,13,1.607,15,1.836,18,0.441,30,0.963,34,1.32,39,0.036,40,0.792,45,1.67,52,1.106,57,0.571,58,1.159,59,0.639,63,1.39,64,1.836,77,1.39,78,0.738,81,0.714,89,0.756,101,0.891,102,0.871,112,0.997,115,0.458,119,0.361,120,0.511,134,0.022,135,0.022,136,0.189,137,0.566,138,1.058,139,0.829,140,0.829,141,0.829,142,0.829,144,1.058,145,1.439,147,2.805,148,0.829,149,1.76,150,1.76,151,1.159,153,1.159,173,0.689,174,1.159,175,1.159,176,0.829,177,1.448,178,0.829,179,0.829,180,0.689,181,1.337,182,0.689,183,1.159,184,0.689,185,0.626,186,1.159,187,0.689,188,0.829,189,0.689,190,0.756,191,0.689,192,0.829,193,0.689,194,0.626,195,1.202,196,1.129,197,0.689,198,0.756,199,0.689,200,0.829,201,0.689,202,0.626,203,0.829,204,0.829,205,0.829,219,1.797,230,1.313,238,3.281,272,1.159,274,1.729,278,1.39,289,0.571,294,2.412,308,2.499,353,1.448,354,1.27,367,0.963,368,0.963,413,0.995,415,2.035,442,0.875,532,1.27,533,1.464,553,0.829,555,0.908,556,0.995,561,1.607,564,2.247,568,3.092,570,1.797,571,1.797,572,1.607,575,2.247,576,1.797,578,1.797,581,1.607,582,2.952,584,3.058,586,3.058,589,2.035,593,2.897,595,2.845,600,2.035,606,1.523,607,2.117,614,3.794,615,3.291,618,1.607,622,1.089,624,1.836,626,1.836,627,2.026,628,1.836,631,2.085,647,1.195,650,1.313,662,2.513,739,3.291,790,4.109,832,2.035,833,2.035,834,2.845,836,4.323,847,2.354,889,3.794,890,2.354,891,3.968,892,3.968,893,3.968,894,3.968,895,4.574,896,4.574,897,4.574,898,2.838,899,3.968,900,2.838,901,2.838,902,5.4,903,3.968,904,5.4,905,3.968,906,2.838,907,4.574,908,2.838,909,2.838,910,3.968,911,2.838,912,5.656,913,2.838,914,2.838,915,2.838,916,2.838,917,2.838,918,2.354,919,2.354,920,2.838,921,4.109,922,2.838,923,5.212,924,5.212,925,2.838,926,3.968,927,2.838,928,2.838,929,2.838,930,2.838,931,2.838,932,2.838,933,2.838,934,2.838,935,2.838,936,2.838,937,2.838,938,2.838,939,5.4,940,2.838,941,2.838,942,3.968,943,3.968]],["title/components/SensorButtonComponent.html",[136,0.128,197,0.751]],["body/components/SensorButtonComponent.html",[3,0.336,4,0.294,5,0.294,7,0.38,9,0.819,16,1.053,18,0.294,30,1.068,34,1.006,36,1.208,39,0.036,40,0.753,41,0.753,47,1.015,50,1.103,52,0.878,57,0.843,58,1.103,59,0.67,60,2.707,62,1.689,71,0.753,77,1.947,78,0.877,80,1.589,81,0.679,84,1.85,96,1.843,101,0.864,102,0.852,106,2.247,112,0.978,115,0.427,116,1.015,119,0.336,120,0.476,134,0.021,135,0.021,136,0.182,137,0.528,138,1.006,139,0.773,140,0.773,141,0.773,142,0.773,144,1.407,145,1.576,148,0.773,149,1.741,150,1.741,151,1.103,153,1.103,162,3.04,170,1.843,173,0.642,174,1.103,175,1.103,176,0.773,177,1.403,178,0.773,179,0.773,180,0.642,181,1.286,182,0.642,183,1.103,184,0.642,185,0.583,186,1.103,187,0.642,188,0.773,189,0.642,190,0.705,191,0.642,192,0.773,193,0.642,194,0.583,195,0.642,196,0.528,197,1.165,198,1.481,199,0.642,200,0.773,201,0.642,202,0.583,203,0.773,204,0.773,205,0.773,272,1.103,278,1.323,285,2.026,289,0.543,291,2.493,303,3.157,316,3.146,317,1.589,320,1.675,333,2.138,334,2.707,345,1.35,351,2.451,353,1.103,354,1.208,367,0.642,368,0.642,369,1.35,377,2.221,378,1.449,381,2.138,387,2.138,388,2.707,430,2.707,442,0.832,450,2.718,462,2.707,510,1.675,512,2.707,513,3.443,514,3.443,515,2.718,516,3.785,517,2.391,518,2.707,519,3.131,521,2.707,522,2.707,523,3.131,524,1.927,525,2.138,526,2.138,527,2.391,528,2.138,529,1.927,530,1.927,531,3.443,532,1.208,533,1.409,534,3.157,535,2.707,536,3.157,537,3.785,538,2.707,539,3.157,541,3.131,543,2.707,546,2.707,547,2.707,549,2.707,550,2.707,551,2.707,552,2.707,553,0.773,555,0.847,556,0.927,557,1.35,558,3.641,559,1.498,560,3.443,561,2.138,562,1.675,563,1.897,564,2.493,565,1.897,566,1.897,567,1.897,568,2.247,569,2.788,570,1.675,571,1.675,572,1.498,573,1.897,574,1.897,575,2.138,576,1.675,577,1.675,578,1.675,579,1.897,580,1.897,581,2.138,582,1.498,583,1.897,584,1.498,585,2.707,586,1.498,588,1.897,606,1.449,622,1.015,647,1.589,669,2.391,747,2.707,803,2.707,831,2.194,832,1.897,833,1.897,834,2.707,856,3.131,858,3.131,860,3.131,863,3.131,918,2.194,919,2.194,944,3.443,945,3.443,946,3.775,947,2.645,948,3.775,949,3.775,950,3.775,951,2.645,952,3.775,953,2.645,954,2.645,955,2.645,956,2.645,957,3.775,958,3.775,959,3.775,960,2.645]],["title/components/SensorComponent.html",[136,0.128,199,0.751]],["body/components/SensorComponent.html",[3,0.327,4,0.286,5,0.286,7,0.37,9,0.996,15,2.192,16,1.1,18,0.286,19,1.296,22,3.749,30,1.269,34,1.469,39,0.036,40,0.738,45,2.321,52,0.513,54,2.068,56,0.823,57,0.82,58,1.081,59,0.682,66,3,71,0.946,73,2.419,74,2.419,76,3,77,1.997,78,0.765,79,1.711,80,1.557,81,1.058,82,2.094,83,3.068,87,1.888,89,0.986,101,0.665,102,0.765,112,1.01,115,0.415,119,0.327,120,0.462,134,0.021,135,0.021,136,0.179,137,0.513,138,0.986,139,0.751,140,0.751,141,0.751,142,0.751,144,0.986,145,1.393,148,0.751,149,1.732,150,1.732,151,1.081,153,1.081,173,0.624,174,1.081,175,1.081,176,0.751,177,1.385,178,0.751,179,0.751,180,0.624,181,1.266,182,0.624,183,1.081,184,0.624,185,0.567,186,1.081,187,0.624,188,0.751,189,0.624,190,0.685,191,0.624,192,0.751,193,0.624,194,0.567,195,0.624,196,0.513,197,0.624,198,1.155,199,1.15,200,0.751,201,0.624,202,0.567,203,0.751,204,0.751,205,0.751,228,2.743,230,1.189,234,2.212,272,1.081,274,1.673,276,3,278,1.296,289,0.532,292,2.212,309,1.888,311,2.96,320,2.342,324,2.683,331,3.398,335,0.987,342,2.419,353,1.666,354,1.184,367,1.218,368,1.218,380,2.652,413,0.901,421,1.888,436,2.419,442,0.815,444,1.42,532,1.184,533,1.387,553,0.751,555,0.823,556,0.901,605,3.556,606,1.42,607,2.005,610,3.311,612,2.743,613,2.743,616,3.311,617,2.743,618,3.051,620,1.711,622,1.663,623,3.068,624,1.711,626,2.551,627,1.888,628,1.711,629,2.652,631,1.995,632,2.342,634,3,635,2.342,636,2.342,637,3.311,638,3.311,640,2.342,641,2.342,642,2.342,644,3,645,2.342,647,1.082,648,1.628,649,1.456,650,1.189,651,2.132,654,1.843,655,1.843,656,1.843,657,2.669,658,3.749,659,2.652,868,3.93,872,2.652,961,2.132,962,4.738,963,4.332,964,3.698,965,2.57,966,2.57,967,2.57,968,2.57,969,2.57,970,2.57,971,2.57,972,2.57,973,2.57,974,2.57,975,3.698]],["title/interfaces/SensorStatus.html",[84,1.085,428,1.085]],["body/interfaces/SensorStatus.html",[3,0.374,4,0.328,5,0.328,7,0.424,9,0.882,18,0.328,36,1.611,39,0.036,41,1.09,42,1.884,47,2.348,54,2.31,57,0.843,59,0.635,61,1.032,62,1.303,63,1.851,64,1.884,69,1.932,70,1.032,71,1.004,73,2.528,74,2.528,77,2.196,78,0.977,79,2.329,80,2.119,81,1.142,82,2.85,84,1.427,101,1.008,102,0.964,119,0.593,134,0.023,135,0.023,161,2.028,165,2.765,170,2.15,289,0.585,319,2.859,321,2.382,348,3.171,349,2.57,378,2.15,428,1.635,485,2.992,657,3.136,660,1.668,661,1.865,662,1.865,663,4.155,664,2.578,665,2.92,666,3.669,667,2.955,668,3.547,669,2.955,670,3.346,671,3.61,672,3.61,673,2.112,674,2.112,675,3.789,676,3.789,677,3.789,678,3.61,679,3.61,680,3.61,681,3.61,682,3.61]],["title/components/SensorsListComponent.html",[136,0.128,201,0.751]],["body/components/SensorsListComponent.html",[3,0.365,4,0.319,5,0.319,7,0.412,9,0.874,15,2.507,16,0.993,18,0.444,19,1.401,30,1.315,34,1.065,38,1.624,39,0.036,40,0.918,41,1.044,42,1.327,50,1.168,52,0.572,56,1.279,57,0.779,59,0.661,63,1.744,71,0.798,77,1.899,78,0.803,81,0.975,84,1.899,89,1.065,96,2.08,101,0.895,102,0.803,105,3.315,106,2.04,112,0.941,115,0.463,116,1.101,119,0.365,120,0.516,121,1.464,134,0.022,135,0.022,136,0.19,137,0.572,138,1.065,139,0.838,140,0.838,141,0.838,142,0.838,145,1.065,148,0.838,149,1.763,150,1.763,151,1.168,153,1.168,173,0.696,174,1.168,175,1.168,176,0.838,177,1.454,178,0.838,179,0.838,180,0.696,181,1.344,182,0.696,183,1.168,184,0.696,185,0.632,186,1.168,187,0.696,188,0.838,189,0.696,190,0.764,191,0.696,192,0.838,193,0.696,194,0.632,195,0.696,196,0.572,197,1.208,198,1.326,199,0.696,200,0.838,201,1.416,202,1.299,203,1.344,204,0.838,205,0.838,254,3.987,272,1.168,274,1.279,285,2.08,289,0.575,294,2.129,303,3.569,308,1.849,330,2.866,335,1.534,351,2.766,365,2.866,367,1.208,368,1.208,372,2.866,394,2.866,413,1.005,442,0.881,444,1.534,524,2.04,529,2.04,530,2.04,532,1.279,533,1.472,553,0.838,557,1.464,607,1.327,620,1.849,624,1.849,628,1.849,631,1.683,650,1.327,667,2.531,668,2.531,684,1.816,689,2.263,690,2.913,691,3.299,692,2.866,693,3.299,695,3.151,707,2.866,710,3.299,716,2.866,720,2.057,722,2.057,872,2.057,944,2.057,945,2.057,976,4.612,977,4.6,978,2.868,979,3.997,980,2.868,981,3.997,982,3.997,983,3.997,984,3.997,985,2.868,986,4.976,987,4.976,988,3.997,989,2.868,990,2.868,991,3.997,992,2.868,993,3.997,994,3.997,995,3.997,996,3.997,997,3.997,998,3.997,999,5.418,1000,2.868,1001,2.868,1002,2.868,1003,2.868,1004,2.868]],["title/interfaces/Store.html",[290,1.753,428,1.085]],["body/interfaces/Store.html",[0,1.073,1,1.443,3,0.201,4,0.176,5,0.176,7,0.227,8,1.301,9,0.896,12,1.614,13,0.894,14,2.743,15,2.367,16,1.108,17,2.554,18,0.176,24,1.133,34,1.466,36,1.176,39,0.037,41,0.86,43,1.614,46,1.133,47,1.811,49,2.297,50,1.462,51,2.081,52,0.508,54,1.229,55,3.092,56,1.025,57,0.848,58,0.936,59,0.683,61,1.288,62,1.88,63,1.288,64,0.731,67,1.133,69,1.811,70,1.511,71,0.998,72,1.133,73,1.482,74,1.482,76,2.73,77,1.654,78,0.807,79,1.179,80,1.073,81,0.9,84,1.413,89,0.854,90,3.092,92,2.777,96,2.033,100,3.384,101,1.047,102,0.968,107,1.827,112,0.725,113,1.133,114,0.894,115,0.255,116,0.606,117,1,118,0.806,119,0.201,120,0.284,121,2.058,123,2.028,130,1,134,0.014,135,0.014,144,0.679,147,2.568,155,2.636,161,1.963,165,1.866,172,0.894,185,1.04,194,1.128,196,0.733,202,1.04,234,0.806,274,0.505,275,1,276,1.614,277,1.827,278,1.654,279,3.576,280,1.31,281,2.114,282,2.657,283,1.31,284,1.31,285,2.255,286,1.133,287,3.762,288,1.31,289,0.366,290,2.672,291,2.441,292,2.777,293,3.588,294,2.255,295,3.914,296,1.133,297,1.133,298,1.31,299,1.31,301,1.31,302,1.31,305,2.114,306,3.344,307,4.457,308,2.729,309,2.409,310,3.344,311,1.814,312,3.344,313,3.762,314,3.344,315,2.892,316,2.081,317,1.547,318,2.297,319,1.635,320,2.028,321,0.806,322,2.657,323,3.576,324,2.081,327,2.114,328,1.31,330,2.297,331,3.384,332,2.297,333,1.814,334,2.636,338,2.114,340,1.614,341,2.636,342,2.315,343,2.114,344,1,345,0.806,346,2.114,347,1.31,348,1.443,349,2.315,351,1.301,352,1.31,353,1.074,354,0.505,355,1.133,356,1.31,357,1.31,360,1.133,362,2.114,363,2.114,364,1.827,365,1.133,369,0.806,370,1.31,372,1.827,373,2.114,374,3.252,375,3.344,376,1.31,377,1.179,378,0.606,379,1.133,380,1.133,381,0.894,382,2.114,383,1.31,384,1.31,385,1.31,386,1.31,387,0.894,388,1.133,389,1.133,390,1.31,391,1.827,392,1.31,394,1.133,395,3.576,396,1.31,398,1.31,400,1.31,402,1.31,404,1.31,405,1.31,406,1.31,407,1.31,408,1.31,409,1.31,411,1.31,413,0.553,414,3.048,415,1.133,416,3.048,417,3.048,418,3.762,419,1.31,420,2.114,421,1.635,422,3.495,423,2.114,424,2.114,425,2.114,426,2.892,427,3.092,428,0.553,429,3.576,430,3.092,431,3.576,432,3.048,433,3.048,434,2.114,435,2.114,436,1.635,437,1.133,438,1.827,439,2.872,440,1.133,441,1,442,1.04,443,3.576,444,1.411,445,1.31,446,1.31,447,1.31,448,2.657,449,3.576,450,1.443,451,1.31,452,1.31,453,1.133,454,4.042,455,2.114,456,2.114,457,2.114,458,2.114,459,2.114,460,4.15,461,1.31,462,2.297,463,1.31,464,2.114,465,1.443,466,1.31,467,1.31,468,1.31,469,1.31,470,1.31,471,1.31,472,1.31,473,1.31,474,3.914,475,2.114,476,2.657,477,3.048,478,1.31,479,1.31,480,1.31,481,1.31,482,1.31,483,3.048,484,1.31,485,0.894,486,1.31,487,1.31,488,1.31,489,1.133,490,2.114,491,1.31,492,1.31,493,1.31,494,3.048,495,1.31,496,1.31,497,1.31,498,1.31,499,1.31,500,1.31,501,2.297,502,2.657,503,1.31,504,2.657,505,1.31,506,1.31,507,1.31,660,0.894]],["title/coverage.html",[1005,3.495]],["body/coverage.html",[0,2.304,1,2.315,5,0.455,6,3.39,39,0.036,41,0.816,61,1.432,70,1.432,84,1.432,134,0.028,135,0.028,136,0.26,137,0.816,143,3.39,180,0.992,182,0.992,184,0.992,187,0.992,189,0.992,191,0.992,193,0.992,195,0.992,197,0.992,199,0.992,201,0.992,232,2.931,238,2.931,246,2.931,254,2.931,261,2.931,274,1.308,275,3.466,290,2.315,369,2.087,428,2.003,441,2.588,508,3.39,509,2.931,510,3.466,593,4.036,602,2.931,604,3.39,661,3.466,683,3.39,684,3.466,729,2.588,730,3.39,784,3.39,854,3.39,855,2.931,867,3.39,879,3.39,889,3.39,890,3.39,944,2.931,945,2.931,961,3.39,976,3.39,1005,3.39,1006,4.087,1007,4.087,1008,4.087,1009,5.473,1010,5.045,1011,5.473,1012,5.98,1013,4.087,1014,4.087,1015,4.087,1016,4.087,1017,3.39,1018,4.087,1019,4.087,1020,4.087,1021,4.087,1022,4.087,1023,4.087,1024,4.087,1025,4.087,1026,4.087]],["title/dependencies.html",[209,2.356,1027,1.859]],["body/dependencies.html",[39,0.036,115,0.76,134,0.031,135,0.031,209,2.984,211,3.379,224,4.558,225,3.941,230,2.18,377,2.18,553,1.377,649,2.668,1028,4.712,1029,6.278,1030,4.712,1031,4.712,1032,4.712,1033,4.712,1034,4.712,1035,4.712,1036,4.712,1037,4.712,1038,4.712,1039,4.712]],["title/miscellaneous/functions.html",[1040,1.641,1041,3.086]],["body/miscellaneous/functions.html",[9,0.773,18,0.532,39,0.033,59,0.617,89,1.276,102,0.773,134,0.031,135,0.031,161,1.838,232,4.199,269,3.032,344,3.032,353,1.399,465,2.711,609,3.032,646,3.971,743,3.971,747,3.433,748,3.971,759,3.971,769,3.971,772,3.971,792,3.971,1017,3.971,1040,3.032,1041,3.971,1042,4.788,1043,4.788,1044,4.788,1045,4.788,1046,4.788]],["title/index.html",[18,0.288,1047,2.592,1048,2.592]],["body/index.html",[4,0.483,39,0.029,40,0.867,43,2.75,134,0.029,135,0.029,136,0.233,219,2.75,369,2.217,555,1.799,689,2.459,1027,3.114,1049,5.235,1050,4.342,1051,5.621,1052,3.602,1053,4.342,1054,4.342,1055,5.235,1056,5.972,1057,6.137,1058,4.342,1059,4.342,1060,4.342,1061,4.342,1062,4.342,1063,4.342,1064,4.342,1065,4.342,1066,4.342,1067,4.342,1068,4.342,1069,5.621,1070,5.621,1071,4.342,1072,5.835,1073,4.342,1074,4.342,1075,4.342,1076,4.342,1077,5.235,1078,5.235,1079,5.835,1080,4.342,1081,5.235,1082,5.235,1083,4.342,1084,6.067,1085,4.342,1086,4.342,1087,4.342,1088,5.235,1089,4.342,1090,4.342,1091,4.342,1092,4.342,1093,4.342,1094,4.342,1095,5.621,1096,4.342,1097,4.342,1098,4.342,1099,3.114,1100,4.342,1101,4.342]],["title/modules.html",[208,3.022]],["body/modules.html",[39,0.032,134,0.032,135,0.032,207,3.152,208,3.569,225,3.569,1102,4.977,1103,4.977,1104,4.977]],["title/overview.html",[1099,3.022]],["body/overview.html",[2,3.005,39,0.034,134,0.031,135,0.031,137,1.246,138,1.265,173,1.152,206,3.957,207,3.873,209,3.005,210,3.937,211,3.404,212,3.937,213,3.937,214,3.937,215,3.937,216,3.937,217,4.577,218,3.937,219,3.005,568,2.423,660,2.688,921,3.937,1099,3.404,1105,4.746,1106,4.746,1107,4.746]],["title/properties.html",[289,0.535,1027,1.859]],["body/properties.html",[39,0.033,134,0.032,135,0.032,289,0.718,1052,4.141,1108,4.992]],["title/routes.html",[229,3.022]],["body/routes.html",[39,0.032,134,0.032,135,0.032,229,3.597]],["title/miscellaneous/variables.html",[1040,1.641,1109,3.086]],["body/miscellaneous/variables.html",[9,0.881,14,2.378,15,2.155,16,1.155,17,2.378,18,0.518,39,0.035,41,0.93,59,0.518,101,0.838,102,0.752,130,2.95,134,0.031,135,0.031,147,2.638,185,1.027,194,1.027,202,1.027,275,2.95,290,3.091,292,2.378,293,3.34,294,2.155,308,2.526,340,2.95,367,1.13,368,1.13,391,3.34,421,2.378,422,3.34,427,3.34,437,3.34,438,3.34,439,3.457,440,3.34,441,3.457,442,1.027,1040,2.95,1109,3.864,1110,4.658]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":568,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"overview.html":{}}}],["0.0.0",{"_index":1108,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":571,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["0.3s",{"_index":914,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0.5",{"_index":917,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0.5s",{"_index":938,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0.8",{"_index":935,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0px",{"_index":942,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["1",{"_index":921,"title":{},"body":{"components/PrivateAreaComponent.html":{},"overview.html":{}}}],["1/1",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":593,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":840,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["10px",{"_index":853,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["12",{"_index":1105,"title":{},"body":{"overview.html":{}}}],["15.0.4",{"_index":1053,"title":{},"body":{"index.html":{}}}],["150px",{"_index":585,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["15px",{"_index":844,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["16.0.3",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["16/21",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":569,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["1s",{"_index":932,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["2",{"_index":848,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["2.11.8",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":829,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["2s",{"_index":597,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["3",{"_index":1106,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":843,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["36px",{"_index":939,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["4",{"_index":1107,"title":{},"body":{"overview.html":{}}}],["4.9",{"_index":940,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["4/4",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":837,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["4px",{"_index":929,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["5",{"_index":941,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["5.2.3",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":931,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["5px",{"_index":573,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["6/6",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["72px",{"_index":943,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["75",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":926,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["85",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":909,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["absolute",{"_index":928,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["acceso",{"_index":673,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["accessibile",{"_index":891,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["actionrange",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["actual_component",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["ad",{"_index":714,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["add",{"_index":1091,"title":{},"body":{"index.html":{}}}],["addarea",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{}}}],["addarea$(alias",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["addlamp",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/LampComponent.html":{}}}],["addlamp$(alias",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["addsensor",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/SensorComponent.html":{}}}],["addsensor$(alias",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["aggiorna",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["aggiornamento",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{}}}],["aggiornare",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["aggiunge",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["aggiungere",{"_index":311,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["aggiungi",{"_index":904,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["aggiunta",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["aggiunte",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["aggiunto",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{}}}],["agli",{"_index":892,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["ai",{"_index":282,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["aiuta",{"_index":713,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["al",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["alias",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["align",{"_index":581,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["all'api",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["all'autenticazione",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["all'id",{"_index":885,"title":{},"body":{"components/LampsListComponent.html":{}}}],["all'interno",{"_index":551,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["all'utente",{"_index":810,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["alla",{"_index":609,"title":{},"body":{"components/AreaComponent.html":{},"injectables/AuthService.html":{},"components/LampComponent.html":{},"miscellaneous/functions.html":{}}}],["alle",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["allo",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["altra",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["amichevole",{"_index":670,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["anche",{"_index":463,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["andato",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular",{"_index":555,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":553,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["angular/compiler",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":649,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":595,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["api",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["api.service",{"_index":419,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["app",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["app.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":137,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appena",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{}}}],["application",{"_index":1062,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":207,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriato",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["appservice",{"_index":274,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["area",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["area'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["area.component.css",{"_index":614,"title":{},"body":{"components/AreaComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["area.component.html",{"_index":615,"title":{},"body":{"components/AreaComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["area.component.ts",{"_index":890,"title":{},"body":{"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:27",{"_index":898,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["area.component.ts:33",{"_index":900,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["area.component\\\").then",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["area.id",{"_index":723,"title":{},"body":{"components/AreasListComponent.html":{}}}],["area/private",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["areabuttoncomponent",{"_index":180,"title":{"components/AreaButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["areacomponent",{"_index":182,"title":{"components/AreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["areas",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["areas/all",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["areas/new",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["areaslistcomponent",{"_index":184,"title":{"components/AreasListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["areastatus",{"_index":61,"title":{"interfaces/AreaStatus.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["aree",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":422,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1073,"title":{},"body":{"index.html":{}}}],["attesa",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["attivare/disattivare",{"_index":984,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["attivata",{"_index":664,"title":{},"body":{"interfaces/AreaStatus.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["attivato",{"_index":678,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["attualmente",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["autenticare",{"_index":787,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["autenticati",{"_index":894,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["autenticato",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["autenticazione",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["authentication",{"_index":792,"title":{},"body":{"components/AuthenticationComponent.html":{},"miscellaneous/functions.html":{}}}],["authentication'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["authentication.component.css",{"_index":793,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authentication.component.html",{"_index":794,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authenticationcomponent",{"_index":187,"title":{"components/AuthenticationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservice",{"_index":729,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":1063,"title":{},"body":{"index.html":{}}}],["avvenuta",{"_index":868,"title":{},"body":{"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["avvenuto",{"_index":791,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["avvia",{"_index":306,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["azione",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"components/SensorComponent.html":{}}}],["azioni",{"_index":521,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["backdrop",{"_index":906,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["backdrop.loading",{"_index":916,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["backend",{"_index":628,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["background",{"_index":561,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["basato",{"_index":470,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["base",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["behaviorsubject",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["behaviorsubject(initialstate",{"_index":370,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["bezier(0",{"_index":934,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["blablabla",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["block",{"_index":576,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["body",{"_index":830,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["boolean",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["booleano",{"_index":318,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["bootstrap",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":564,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["bottom",{"_index":577,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["box",{"_index":566,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["browse",{"_index":1104,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1072,"title":{},"body":{"index.html":{}}}],["buon",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["button",{"_index":531,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["button'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["button.component",{"_index":720,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["button.component.css",{"_index":534,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["button.component.html",{"_index":535,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["button.component.ts",{"_index":510,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:29",{"_index":540,"title":{},"body":{"components/AreaButtonComponent.html":{}}}],["button.component.ts:30",{"_index":861,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["button.component.ts:34",{"_index":947,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["button.component.ts:35",{"_index":545,"title":{},"body":{"components/AreaButtonComponent.html":{}}}],["button.component.ts:36",{"_index":862,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["button.component.ts:40",{"_index":951,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["button.component.ts:42",{"_index":864,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["button.component.ts:46",{"_index":953,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["button/area",{"_index":509,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"coverage.html":{}}}],["button/lamp",{"_index":855,"title":{},"body":{"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"coverage.html":{}}}],["button/sensor",{"_index":945,"title":{},"body":{"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["c",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["c.areacomponent",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["c.areaslistcomponent",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["c.authenticationcomponent",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["c.lampcomponent",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["c.lampslistcomponent",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["c.privateareacomponent",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["c.sensorcomponent",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["c.sensorslistcomponent",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["callback",{"_index":448,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["cambia",{"_index":981,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["cambiamenti",{"_index":527,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["cambiando",{"_index":357,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["cambiare",{"_index":881,"title":{},"body":{"components/LampsListComponent.html":{}}}],["cambio",{"_index":676,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["campo",{"_index":657,"title":{},"body":{"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{}}}],["canactivatechild",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["capabilities",{"_index":1093,"title":{},"body":{"index.html":{}}}],["caratteristica",{"_index":384,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["carica",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["caricamento",{"_index":308,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["caricare",{"_index":688,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["caso",{"_index":436,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["catcherror",{"_index":414,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["center",{"_index":834,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["change",{"_index":1065,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":529,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["changedetectionstrategy",{"_index":557,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":530,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["che",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["check",{"_index":1098,"title":{},"body":{"index.html":{}}}],["chiama",{"_index":309,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["chiamando",{"_index":469,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["chiamate",{"_index":815,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["chiamato",{"_index":699,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["child(2",{"_index":937,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["children",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["choice",{"_index":1087,"title":{},"body":{"index.html":{}}}],["ci",{"_index":725,"title":{},"body":{"components/AreasListComponent.html":{}}}],["ciclo",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{}}}],["class",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["classe",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1051,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1067,"title":{},"body":{"index.html":{}}}],["codice",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["color",{"_index":562,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["come",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["command",{"_index":1088,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":533,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["completato",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["complete",{"_index":477,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["completed",{"_index":655,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["completo",{"_index":548,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["component",{"_index":136,"title":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["componente",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["components",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"overview.html":{}}}],["components/area",{"_index":719,"title":{},"body":{"components/AreasListComponent.html":{}}}],["components/lamp",{"_index":886,"title":{},"body":{"components/LampsListComponent.html":{}}}],["compresa",{"_index":283,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["comunicare",{"_index":991,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["con",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["conferma",{"_index":659,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["consentire",{"_index":954,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["console.log(alias",{"_index":652,"title":{},"body":{"components/AreaComponent.html":{}}}],["const",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["constructor(http",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(private",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{}}}],["container",{"_index":831,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/SensorButtonComponent.html":{}}}],["content",{"_index":919,"title":{},"body":{"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["contiene",{"_index":421,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["controlla",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["controlli",{"_index":641,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["controls",{"_index":971,"title":{},"body":{"components/SensorComponent.html":{}}}],["copy",{"_index":828,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["core",{"_index":556,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["corrente",{"_index":672,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["corso",{"_index":485,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["costruisce",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{}}}],["count",{"_index":599,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["coverage",{"_index":1005,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creare",{"_index":634,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["creato",{"_index":455,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["credentials",{"_index":817,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["credentials.password",{"_index":820,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["credenziali",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["cubic",{"_index":933,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["cui",{"_index":681,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["custom",{"_index":1043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d",{"_index":975,"title":{},"body":{"components/SensorComponent.html":{}}}],["da",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["dal",{"_index":622,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["dall'api",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["dall'observable",{"_index":452,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["dashboard",{"_index":902,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["data",{"_index":539,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["data.actionrange",{"_index":959,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["data.alias",{"_index":560,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["data.geopos",{"_index":957,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["data.status",{"_index":866,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["dati",{"_index":285,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["declarations",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":367,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["definisce",{"_index":372,"title":{},"body":{"injectables/AppService.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["degli",{"_index":286,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["dei",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["del",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["delay",{"_index":415,"title":{},"body":{"injectables/AppService.html":{},"components/PrivateAreaComponent.html":{},"interfaces/Store.html":{}}}],["delay(0",{"_index":409,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["dell'`appservice",{"_index":1003,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["dell'alias",{"_index":621,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{}}}],["dell'applicazione",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/PrivateAreaComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["dell'appservice",{"_index":872,"title":{},"body":{"components/LampComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["dell'area",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["dell'array",{"_index":702,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["dell'authservice",{"_index":797,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["dell'errore",{"_index":472,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["dell'hook",{"_index":698,"title":{},"body":{"components/AreasListComponent.html":{}}}],["dell'operazione",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{}}}],["dell'utente",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["della",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["delle",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["dello",{"_index":278,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["dependencies",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["desiderata",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev",{"_index":1059,"title":{},"body":{"index.html":{}}}],["development",{"_index":1054,"title":{},"body":{"index.html":{}}}],["di",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dinamiche",{"_index":955,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["dipendenza",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["directive",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["directives",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1071,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1076,"title":{},"body":{"index.html":{}}}],["direttiva",{"_index":995,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["direttive",{"_index":901,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["disattivata",{"_index":665,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["disattivato",{"_index":679,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["discendenti",{"_index":552,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["disconnette",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["display",{"_index":575,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["dist",{"_index":1075,"title":{},"body":{"index.html":{}}}],["div",{"_index":927,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["div:nth",{"_index":936,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["diverse",{"_index":405,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["documentati",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/AreasListComponent.html":{}}}],["documentation",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["dopo",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["dovrebbero",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/AreasListComponent.html":{}}}],["durante",{"_index":466,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["duration",{"_index":596,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["dynamic",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1085,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":579,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["ease",{"_index":915,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["ed",{"_index":514,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["effettuare",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AuthenticationComponent.html":{}}}],["element",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["emessi",{"_index":451,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["emesso",{"_index":388,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["emette",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["emettere",{"_index":379,"title":{},"body":{"injectables/AppService.html":{},"components/LampButtonComponent.html":{},"interfaces/Store.html":{}}}],["end",{"_index":1084,"title":{},"body":{"index.html":{}}}],["entro",{"_index":680,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["error",{"_index":292,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["error.status",{"_index":498,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["errore",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["errori",{"_index":287,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["errormessage",{"_index":795,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["eseguita",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["eseguite",{"_index":520,"title":{},"body":{"components/AreaButtonComponent.html":{}}}],["esistente",{"_index":459,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["essa",{"_index":859,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["essere",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{}}}],["esso",{"_index":523,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["eventemitter",{"_index":558,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["eventi",{"_index":515,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["evento",{"_index":863,"title":{},"body":{"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["eventuali",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{}}}],["execute",{"_index":1081,"title":{},"body":{"index.html":{}}}],["export",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["exports",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["f5f5f5",{"_index":838,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["fallisce",{"_index":799,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["false",{"_index":439,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["ffebc6",{"_index":587,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["fff",{"_index":930,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["files",{"_index":1066,"title":{},"body":{"index.html":{}}}],["fine",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["first",{"_index":1090,"title":{},"body":{"index.html":{}}}],["firstload",{"_index":293,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["fixed",{"_index":908,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["flex",{"_index":832,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["floating:focus",{"_index":845,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["flusso",{"_index":986,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["form",{"_index":605,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formbuilder",{"_index":616,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formdata",{"_index":617,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formgroup",{"_index":640,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formsmodule",{"_index":612,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["fornisce",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["fornite",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["forniti",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["fornito",{"_index":305,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["full",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":602,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1041,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funzionalit",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["funzione",{"_index":620,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["further",{"_index":1094,"title":{},"body":{"index.html":{}}}],["futuri",{"_index":727,"title":{},"body":{"components/AreasListComponent.html":{}}}],["generate",{"_index":1069,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1050,"title":{},"body":{"index.html":{}}}],["genitore",{"_index":543,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["geografica",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["geopos",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["gestione",{"_index":277,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["gestire",{"_index":631,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["gestisce",{"_index":279,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["gestori",{"_index":726,"title":{},"body":{"components/AreasListComponent.html":{}}}],["getallareas",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{}}}],["getalllamps",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["getallsensors",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["getting",{"_index":1047,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["gli",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":1097,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guards/auth.guard",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["ha",{"_index":383,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["header",{"_index":574,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["height",{"_index":586,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["help",{"_index":1095,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":911,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["hook",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{}}}],["html",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["http",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1061,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationComponent.html":{}}}],["httpstatuscode",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["httpstatuscode.notfound",{"_index":499,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["id",{"_index":666,"title":{},"body":{"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["identificatore",{"_index":667,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["identifier",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["image",{"_index":960,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["img",{"_index":583,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["implementazione",{"_index":697,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["implements",{"_index":689,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"index.html":{}}}],["import",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["import(\\\"./feature/area/area.component\\\").then",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/areas",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/authentication/authentication.component\\\").then",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/lamp/lamp.component\\\").then",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/lamps",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/private",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/sensor/sensor.component\\\").then",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/sensors",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["importa",{"_index":865,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["imports",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["imposta",{"_index":438,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["impostando",{"_index":486,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["impostare",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["impostato",{"_index":800,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["indicando",{"_index":479,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["indicare",{"_index":464,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["indicatore",{"_index":432,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["indicatori",{"_index":440,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":600,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["ingresso",{"_index":541,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["inietta",{"_index":394,"title":{},"body":{"injectables/AppService.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["iniettata",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialstate",{"_index":441,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iniziale",{"_index":391,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["inizializza",{"_index":979,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["inizializzato",{"_index":389,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["inject",{"_index":413,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["inject(apiservice",{"_index":392,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["inject(appservice",{"_index":624,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["inject(authservice",{"_index":804,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["inject(formbuilder",{"_index":632,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["inject(router",{"_index":642,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["inline",{"_index":925,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["inoltre",{"_index":423,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["input",{"_index":513,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["input[type=\"email",{"_index":849,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["input[type=\"password",{"_index":852,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["inputs",{"_index":538,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["interagire",{"_index":627,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["interagisce",{"_index":606,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["interessa",{"_index":424,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["interfaccia",{"_index":420,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["interface",{"_index":428,"title":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["interfaces",{"_index":660,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"overview.html":{}}}],["interrompe",{"_index":313,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["interrompere",{"_index":475,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["intraprese",{"_index":858,"title":{},"body":{"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["inverte",{"_index":362,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["invocando",{"_index":982,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["isauthenticated",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["istanza",{"_index":626,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["items",{"_index":833,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["iteration",{"_index":598,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["justify",{"_index":918,"title":{},"body":{"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["karma",{"_index":1083,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":589,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["l",{"_index":490,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'`appservice",{"_index":1001,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["l'aggiornamento",{"_index":288,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'aggiunta",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["l'alias",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'animazione",{"_index":307,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'api",{"_index":310,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'apiservice",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["l'appcomponent",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["l'appservice",{"_index":607,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["l'area",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/PrivateAreaComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["l'areabuttoncomponent",{"_index":718,"title":{},"body":{"components/AreasListComponent.html":{}}}],["l'autenticazione",{"_index":785,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["l'authservice",{"_index":786,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["l'azione",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'elenco",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{}}}],["l'errore",{"_index":468,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'id",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/SensorsListComponent.html":{}}}],["l'identificatore",{"_index":671,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["l'iniezione",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{}}}],["l'istanza",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/LampsListComponent.html":{}}}],["l'observable",{"_index":478,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l'oggetto",{"_index":983,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["l'ultimo",{"_index":387,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["l'username",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["l'utente",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"components/SensorButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["l.id",{"_index":488,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["la",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["lamp",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["lamp'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["lamp.component.css",{"_index":869,"title":{},"body":{"components/LampComponent.html":{}}}],["lamp.component.html",{"_index":870,"title":{},"body":{"components/LampComponent.html":{}}}],["lamp.id",{"_index":489,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["lamp.status",{"_index":493,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["lampada",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["lampade",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["lampbuttoncomponent",{"_index":189,"title":{"components/LampButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lampcomponent",{"_index":191,"title":{"components/LampComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lampid",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["lampione",{"_index":905,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["lampioni",{"_index":903,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["lamps",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["lamps/all",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["lamps/new",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["lampslistcomponent",{"_index":193,"title":{"components/LampsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lampstatus",{"_index":70,"title":{"interfaces/LampStatus.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["lampstatus['id",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{}}}],["lampstatus['status",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{}}}],["last",{"_index":537,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["lds",{"_index":923,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["le",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["left",{"_index":582,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["legend",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"overview.html":{}}}],["lettura",{"_index":284,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["linear",{"_index":603,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["list",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["list'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["list.component.css",{"_index":691,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["list.component.html",{"_index":692,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["list.component.ts",{"_index":684,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:31",{"_index":696,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:39",{"_index":709,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:43",{"_index":978,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:45",{"_index":701,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:51",{"_index":708,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:53",{"_index":990,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:57",{"_index":711,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:61",{"_index":989,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:64",{"_index":883,"title":{},"body":{"components/LampsListComponent.html":{}}}],["list.component.ts:69",{"_index":985,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:77",{"_index":992,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:85",{"_index":980,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component\\\").then",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["list/areas",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/AreasListComponent.html":{},"coverage.html":{}}}],["list/lamps",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/LampsListComponent.html":{},"coverage.html":{}}}],["list/sensors",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":685,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["liste",{"_index":717,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["lo",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["loadcomponent",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["loaddata",{"_index":296,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["loaddataareas",{"_index":297,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{}}}],["loaddatasensors",{"_index":298,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["loading",{"_index":294,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["localstorage",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(\"token",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(\"token",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["localstorage.setitem(\"token",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["logga",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggato",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":822,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["loggedin",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"miscellaneous/functions.html":{}}}],["login(username",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{},"components/PrivateAreaComponent.html":{}}}],["manageerror",{"_index":299,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["manageerror(error",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["map",{"_index":416,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["margin",{"_index":850,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["matching",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":842,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["memberof",{"_index":999,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["memorizzare",{"_index":808,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["meno",{"_index":677,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["messaggi",{"_index":809,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["messaggio",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["metadata",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["methods",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["metodo",{"_index":444,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["migliorare",{"_index":997,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["min",{"_index":839,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["miscellaneous",{"_index":1040,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["modello",{"_index":559,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["modificato",{"_index":952,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["modifiche",{"_index":364,"title":{},"body":{"injectables/AppService.html":{},"components/LampButtonComponent.html":{},"interfaces/Store.html":{}}}],["module",{"_index":206,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":208,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["momento",{"_index":724,"title":{},"body":{"components/AreasListComponent.html":{}}}],["more",{"_index":1096,"title":{},"body":{"index.html":{}}}],["mostrare",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["name",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"index.html":{}}}],["naviga",{"_index":623,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{}}}],["navigare",{"_index":644,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["navigate",{"_index":1060,"title":{},"body":{"index.html":{}}}],["navigato",{"_index":798,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LampComponent.html":{}}}],["necessari",{"_index":647,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["necessario",{"_index":814,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["necessary",{"_index":554,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["need",{"_index":1089,"title":{},"body":{"index.html":{}}}],["nell'api",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["nell'applicazione",{"_index":431,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["nell'area",{"_index":789,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["new",{"_index":369,"title":{},"body":{"injectables/AppService.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"index.html":{}}}],["newstatus",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["next",{"_index":449,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ng",{"_index":1057,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":996,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["ngmodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":695,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["nome",{"_index":669,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{}}}],["non",{"_index":465,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":565,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["null",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":722,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["nuova",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"interfaces/Store.html":{}}}],["nuove",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{}}}],["nuovi",{"_index":331,"title":{},"body":{"injectables/AppService.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["nuovo",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["o",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["obbligatorio",{"_index":658,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["observable",{"_index":315,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["occupa",{"_index":686,"title":{},"body":{"components/AreasListComponent.html":{}}}],["of(false",{"_index":504,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["of(true",{"_index":501,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["oggetto",{"_index":456,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ogni",{"_index":803,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["oninit",{"_index":690,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["onpush",{"_index":528,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["opacity",{"_index":912,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["opera",{"_index":682,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["operatore",{"_index":546,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["operazioni",{"_index":280,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["optional",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["opzionale",{"_index":675,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["osservabile",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["osservabili",{"_index":987,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["ottenere",{"_index":445,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ottenuti",{"_index":434,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ottimizzare",{"_index":715,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["out",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/PrivateAreaComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":516,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["outputs",{"_index":860,"title":{},"body":{"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["overview",{"_index":1099,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1027,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":835,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["page",{"_index":1101,"title":{},"body":{"index.html":{}}}],["pagina",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["param",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["parti",{"_index":406,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["particolare",{"_index":544,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["particolari",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["passaggio",{"_index":880,"title":{},"body":{"components/LampsListComponent.html":{}}}],["passare",{"_index":687,"title":{},"body":{"components/AreasListComponent.html":{}}}],["passati",{"_index":949,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["passato",{"_index":542,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["password",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["path",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["pending",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["per",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":502,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["platform",{"_index":1086,"title":{},"body":{"index.html":{}}}],["please",{"_index":826,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["popperjs/core",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["portata",{"_index":958,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["position",{"_index":907,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["posizione",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["presentazionale",{"_index":511,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["presentazione",{"_index":856,"title":{},"body":{"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["prestazioni",{"_index":998,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["primo",{"_index":427,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["principale",{"_index":276,"title":{},"body":{"injectables/AppService.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["privata",{"_index":790,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["private",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["privateareacomponent",{"_index":195,"title":{"components/PrivateAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["processo",{"_index":480,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["project",{"_index":1049,"title":{},"body":{"index.html":{}}}],["properties",{"_index":289,"title":{"properties.html":{}},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"properties.html":{}}}],["propriet",{"_index":462,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["protected",{"_index":536,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["proteggere",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protetto",{"_index":550,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["providedin",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["providers",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pu",{"_index":378,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["public",{"_index":295,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["pulsante",{"_index":946,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["qualsiasi",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["quando",{"_index":450,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["questi",{"_index":948,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["questo",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["qui",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["quindi",{"_index":312,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["radice",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":572,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["raggio",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{}}}],["rappresenta",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/PrivateAreaComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["rappresentano",{"_index":430,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["reactiveformsmodule",{"_index":613,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["readonly",{"_index":291,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["reale",{"_index":706,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["reattivo",{"_index":635,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["recupera",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"components/AreaComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["recupero",{"_index":467,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["redirectto",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":1100,"title":{},"body":{"index.html":{}}}],["reindirizzato",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["relative",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"components/PrivateAreaComponent.html":{},"interfaces/Store.html":{}}}],["relativi",{"_index":728,"title":{},"body":{"components/AreasListComponent.html":{}}}],["reload",{"_index":1064,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":716,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["reset",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsabile",{"_index":517,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["restituire",{"_index":385,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["restituisce",{"_index":446,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["results",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["returns",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["rgba(0",{"_index":570,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["ricarica",{"_index":314,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ricaricando",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["riceve",{"_index":512,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["richieste",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["riflettere",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["right",{"_index":851,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["rilevamento",{"_index":526,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["rimuove",{"_index":802,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["rimuovendo",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["ripple",{"_index":924,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["risultato",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{}}}],["riuscita",{"_index":611,"title":{},"body":{"components/AreaComponent.html":{}}}],["root",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["root'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["rotatey(0deg",{"_index":592,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["rotatey(360deg",{"_index":594,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["rotte",{"_index":646,"title":{},"body":{"components/AreaComponent.html":{},"miscellaneous/functions.html":{}}}],["route",{"_index":610,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["router",{"_index":618,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["routerlink",{"_index":896,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["routerlinkactive",{"_index":897,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["routermodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["routermodule.forroot",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["routeroutlet",{"_index":895,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["routes",{"_index":229,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["run",{"_index":1056,"title":{},"body":{"index.html":{}}}],["running",{"_index":1077,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":377,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"injectables/AuthService.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1068,"title":{},"body":{"index.html":{}}}],["se",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["segnala",{"_index":433,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["segnalare",{"_index":425,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["selector",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["selettori",{"_index":404,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["semplice",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["sempre",{"_index":386,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sensor",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["sensor'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["sensor.component.css",{"_index":963,"title":{},"body":{"components/SensorComponent.html":{}}}],["sensor.component.html",{"_index":964,"title":{},"body":{"components/SensorComponent.html":{}}}],["sensor.id",{"_index":1002,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["sensor.status",{"_index":497,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sensorbuttoncomponent",{"_index":197,"title":{"components/SensorButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["sensorcomponent",{"_index":199,"title":{"components/SensorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["sensore",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["sensori",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["sensors",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["sensors/all",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["sensors/new",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["sensorslistcomponent",{"_index":201,"title":{"components/SensorsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["sensorstatus",{"_index":84,"title":{"interfaces/SensorStatus.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["senza",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["sequenza",{"_index":549,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["serve",{"_index":1058,"title":{},"body":{"index.html":{}}}],["server",{"_index":1055,"title":{},"body":{"index.html":{}}}],["service",{"_index":693,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["services/app.service",{"_index":650,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["services/auth.service",{"_index":816,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["servizio",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["setlamppending",{"_index":300,"title":{},"body":{"injectables/AppService.html":{}}}],["setlamppending(lamp",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["shadow",{"_index":567,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["si",{"_index":374,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{}}}],["sign",{"_index":827,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["signin",{"_index":841,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["singola",{"_index":857,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["singolo",{"_index":519,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["solid",{"_index":578,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["solo",{"_index":547,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["sono",{"_index":426,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{}}}],["sostituendo",{"_index":461,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sottoscrittori",{"_index":382,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"index.html":{}}}],["specifico",{"_index":950,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["spento",{"_index":674,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["spin",{"_index":590,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["spinner",{"_index":922,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["spreading",{"_index":458,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["src/.../app.service.ts",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/area",{"_index":508,"title":{},"body":{"components/AreaButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/lamp",{"_index":854,"title":{},"body":{"components/LampButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/sensor",{"_index":944,"title":{},"body":{"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["src/app/feature/area/area.component.ts",{"_index":604,"title":{},"body":{"components/AreaComponent.html":{},"coverage.html":{}}}],["src/app/feature/area/area.component.ts:29",{"_index":625,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:35",{"_index":643,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:41",{"_index":633,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:47",{"_index":639,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:55",{"_index":630,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:62",{"_index":619,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/areas",{"_index":683,"title":{},"body":{"components/AreasListComponent.html":{},"coverage.html":{}}}],["src/app/feature/authentication/authentication.component.ts",{"_index":784,"title":{},"body":{"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["src/app/feature/authentication/authentication.component.ts:32",{"_index":805,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:38",{"_index":813,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:44",{"_index":811,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:50",{"_index":812,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:59",{"_index":806,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:65",{"_index":801,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:75",{"_index":796,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts",{"_index":867,"title":{},"body":{"components/LampComponent.html":{},"coverage.html":{}}}],["src/app/feature/lamp/lamp.component.ts:29",{"_index":873,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:35",{"_index":877,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:41",{"_index":875,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:47",{"_index":876,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:55",{"_index":874,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:62",{"_index":871,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamps",{"_index":879,"title":{},"body":{"components/LampsListComponent.html":{},"coverage.html":{}}}],["src/app/feature/private",{"_index":889,"title":{},"body":{"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["src/app/feature/sensor/sensor.component.ts",{"_index":961,"title":{},"body":{"components/SensorComponent.html":{},"coverage.html":{}}}],["src/app/feature/sensor/sensor.component.ts:29",{"_index":966,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:35",{"_index":970,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:41",{"_index":968,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:47",{"_index":969,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:57",{"_index":967,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:64",{"_index":965,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensors",{"_index":976,"title":{},"body":{"components/SensorsListComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/model.ts",{"_index":661,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:11",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:22",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:30",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:38",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:48",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:57",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:68",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:77",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app.service.ts",{"_index":275,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/app.service.ts:141",{"_index":337,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:166",{"_index":336,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:191",{"_index":358,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:204",{"_index":359,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:214",{"_index":350,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:225",{"_index":361,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:237",{"_index":366,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:250",{"_index":339,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:270",{"_index":325,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:290",{"_index":326,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:307",{"_index":304,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:74",{"_index":393,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:83",{"_index":371,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:87",{"_index":403,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:88",{"_index":412,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:89",{"_index":397,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:90",{"_index":399,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:91",{"_index":410,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:92",{"_index":401,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:99",{"_index":329,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/auth.service.ts",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:101",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:50",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:72",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:81",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:89",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["sta",{"_index":356,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["standalone",{"_index":532,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["started",{"_index":1048,"title":{"index.html":{}},"body":{}}],["startloading",{"_index":301,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["stata",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state",{"_index":407,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.areas",{"_index":396,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.error",{"_index":398,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.firstload",{"_index":400,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.lamps",{"_index":402,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.loading",{"_index":408,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.sensors",{"_index":411,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["statements",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["stati",{"_index":429,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["stato",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":663,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["stoploading",{"_index":302,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["storage",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["store",{"_index":290,"title":{"interfaces/Store.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":1074,"title":{},"body":{"index.html":{}}}],["strategia",{"_index":525,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["string",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["stringa",{"_index":435,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["styles",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["styleurls",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["su",{"_index":522,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["subject",{"_index":376,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["subscribe",{"_index":483,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["subscribe((completed",{"_index":654,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["subscribe((logged",{"_index":821,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["successivamente",{"_index":473,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["successo",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["sul",{"_index":471,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["suoi",{"_index":381,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["support",{"_index":1102,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1103,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":417,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["table",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":418,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["template",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["templateurl",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["tempo",{"_index":705,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["tenere",{"_index":703,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["terminato",{"_index":481,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["test",{"_index":1080,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1092,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1079,"title":{},"body":{"index.html":{}}}],["text",{"_index":580,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["this.$store.next",{"_index":454,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.$store.pipe(map(state",{"_index":395,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.$store.value",{"_index":460,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.$store.value.lamps.map(l",{"_index":487,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.addarea$(alias",{"_index":506,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.addlamp$(alias",{"_index":503,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.addsensor$(alias",{"_index":505,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.getallareas",{"_index":484,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.getalllamps$().subscribe",{"_index":447,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.getallsensors",{"_index":482,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.togglelamp$(lamp.id",{"_index":492,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.togglelamp$(sensor.id",{"_index":496,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.appservice.addarea$(alias",{"_index":653,"title":{},"body":{"components/AreaComponent.html":{}}}],["this.appservice.addlamp$(this.formdata.get(\"alias\").value",{"_index":878,"title":{},"body":{"components/LampComponent.html":{}}}],["this.appservice.addsensor$(alias",{"_index":974,"title":{},"body":{"components/SensorComponent.html":{}}}],["this.appservice.error",{"_index":629,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.appservice.loading",{"_index":899,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["this.authservice.login(credentials.username",{"_index":819,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.errormessage",{"_index":824,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.formbuilder.control",{"_index":637,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.formbuilder.group",{"_index":636,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.formdata.get(\"actionrange\").value",{"_index":973,"title":{},"body":{"components/SensorComponent.html":{}}}],["this.formdata.get(\"alias\").value",{"_index":651,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{}}}],["this.formdata.get(\"geopos\").value",{"_index":972,"title":{},"body":{"components/SensorComponent.html":{}}}],["this.formdata.value",{"_index":818,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.http.get(`/areas",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`/lamps",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`/sensors",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post('/areas",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post('/lamps",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post('/sensors",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(`/lamps/${lampid}/switch/${newstatus",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.isauthenticated",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loaddata",{"_index":494,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.loaddataareas",{"_index":507,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.loggedin",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.manageerror(error",{"_index":476,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.router.navigate",{"_index":656,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.router.navigate([\"/private",{"_index":823,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.service.areas",{"_index":700,"title":{},"body":{"components/AreasListComponent.html":{}}}],["this.service.lamps",{"_index":884,"title":{},"body":{"components/LampsListComponent.html":{}}}],["this.service.loaddata",{"_index":887,"title":{},"body":{"components/LampsListComponent.html":{}}}],["this.service.loaddataareas",{"_index":721,"title":{},"body":{"components/AreasListComponent.html":{}}}],["this.service.loaddatasensors",{"_index":1000,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["this.service.loading",{"_index":707,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["this.service.sensors",{"_index":988,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["this.service.togglelamp(lamp",{"_index":888,"title":{},"body":{"components/LampsListComponent.html":{}}}],["this.service.togglesensor(sensor",{"_index":1004,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["this.setlamppending(lamp",{"_index":491,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.setlamppending(sensor",{"_index":495,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.startloading",{"_index":443,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.stoploading",{"_index":474,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["timing",{"_index":601,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["tipo",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["togglelamp",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{}}}],["togglelamp$(lampid",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{}}}],["togglelamp(lamp",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["togglesensor",{"_index":303,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["togglesensor(sensor",{"_index":365,"title":{},"body":{"injectables/AppService.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["token",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["top",{"_index":836,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["tornare",{"_index":608,"title":{},"body":{"components/AreaComponent.html":{}}}],["tra",{"_index":645,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["traccia",{"_index":704,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["tracciamento",{"_index":993,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["tracciare",{"_index":712,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["track",{"_index":994,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["trackbyareaid",{"_index":694,"title":{},"body":{"components/AreasListComponent.html":{}}}],["trackbyfunction",{"_index":710,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["trackbylampid",{"_index":882,"title":{},"body":{"components/LampsListComponent.html":{}}}],["trackbysensorid",{"_index":977,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["tramite",{"_index":457,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["transform",{"_index":591,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["transition",{"_index":913,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["transparent",{"_index":563,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["tratta",{"_index":375,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["tree",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["trovato",{"_index":500,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["true",{"_index":442,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["tutte",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["tutti",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{}}}],["type",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["un'area",{"_index":662,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/PrivateAreaComponent.html":{},"interfaces/SensorStatus.html":{}}}],["una",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["unit",{"_index":1078,"title":{},"body":{"index.html":{}}}],["univoco",{"_index":668,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["uno",{"_index":390,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["usagenotes",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["use",{"_index":1070,"title":{},"body":{"index.html":{}}}],["username",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["utente",{"_index":788,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{}}}],["utenti",{"_index":893,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["utilizza",{"_index":524,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["utilizzando",{"_index":453,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["utilizzata",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["utilizzato",{"_index":354,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["validators",{"_index":648,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["validators.required",{"_index":638,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["valide",{"_index":825,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["valore",{"_index":317,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"injectables/AuthService.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["valori",{"_index":380,"title":{},"body":{"injectables/AppService.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["value",{"_index":368,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["variabile",{"_index":807,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["variable",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1109,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vengono",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["verr",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1052,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verso",{"_index":962,"title":{},"body":{"components/SensorComponent.html":{}}}],["via",{"_index":1082,"title":{},"body":{"index.html":{}}}],["viene",{"_index":353,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["visibility",{"_index":910,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["visible",{"_index":920,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["visualizzazione",{"_index":518,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["vita",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{}}}],["void",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["volta",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["vuoti",{"_index":437,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["whitesmoke",{"_index":588,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["width",{"_index":584,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["window.location.reload",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["within",{"_index":846,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["x",{"_index":956,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["z",{"_index":847,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["zone.js",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizio per effettuare richieste API relative a lampade, sensori e aree.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addArea$\n                            \n                            \n                                addLamp$\n                            \n                            \n                                addSensor$\n                            \n                            \n                                getAllAreas$\n                            \n                            \n                                getAllLamps$\n                            \n                            \n                                getAllSensors$\n                            \n                            \n                                toggleLamp$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:11\n                            \n                        \n\n                \n                    \n                            Costruisce l'ApiService con l'iniezione della dipendenza HttpClient.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                L'istanza HttpClient utilizzata per effettuare richieste HTTP.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addArea$\n                        \n                    \n                \n            \n            \n                \naddArea$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:77\n                \n            \n\n\n            \n                \n                    Aggiunge una nuova area all'API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'alias della nuova area.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo AreaStatus che rappresenta l'area appena aggiunta.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLamp$\n                        \n                    \n                \n            \n            \n                \naddLamp$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:57\n                \n            \n\n\n            \n                \n                    Aggiunge una nuova lampada all'API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'alias della nuova lampada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo LampStatus che rappresenta la lampada appena aggiunta.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSensor$\n                        \n                    \n                \n            \n            \n                \naddSensor$(alias: string, geoPos: string, actionRange: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:68\n                \n            \n\n\n            \n                \n                    Aggiunge un nuovo sensore all'API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'alias del nuovo sensore.\n\n                                    \n                                \n                                \n                                    geoPos\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La posizione geografica del nuovo sensore.\n\n                                    \n                                \n                                \n                                    actionRange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Il raggio di azione del nuovo sensore.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo SensorStatus che rappresenta il sensore appena aggiunto.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAreas$\n                        \n                    \n                \n            \n            \n                \ngetAllAreas$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:38\n                \n            \n\n\n            \n                \n                    Recupera tutte le aree dall'API.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo AreaStatus[] che rappresenta l'elenco delle aree.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllLamps$\n                        \n                    \n                \n            \n            \n                \ngetAllLamps$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:22\n                \n            \n\n\n            \n                \n                    Recupera tutte le lampade dall'API.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo LampStatus[] che rappresenta l'elenco delle lampade.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSensors$\n                        \n                    \n                \n            \n            \n                \ngetAllSensors$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:30\n                \n            \n\n\n            \n                \n                    Recupera tutti i sensori dall'API.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo SensorStatus[] che rappresenta l'elenco dei sensori.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLamp$\n                        \n                    \n                \n            \n            \n                \ntoggleLamp$(lampId, newStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:48\n                \n            \n\n\n            \n                \n                    Aggiorna lo stato di una lampada nell'API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lampId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'ID della lampada da aggiornare.\n\n                                    \n                                \n                                \n                                    newStatus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Il nuovo stato da impostare per la lampada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un osservabile di tipo string che rappresenta il risultato dell'operazione di aggiornamento.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpStatusCode } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LampStatus, SensorStatus, AreaStatus } from '../model';\n\n/**\n * Servizio per effettuare richieste API relative a lampade, sensori e aree.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  /**\n   * Costruisce l'ApiService con l'iniezione della dipendenza HttpClient.\n   * @param http L'istanza HttpClient utilizzata per effettuare richieste HTTP.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Recupera tutte le lampade dall'API.\n   * @returns Un osservabile di tipo LampStatus[] che rappresenta l'elenco delle lampade.\n   */\n  getAllLamps$() {\n    return this.http.get(`/lamps`);\n  }\n\n  /**\n   * Recupera tutti i sensori dall'API.\n   * @returns Un osservabile di tipo SensorStatus[] che rappresenta l'elenco dei sensori.\n   */\n  getAllSensors$() {\n    return this.http.get(`/sensors`);\n  }\n\n  /**\n   * Recupera tutte le aree dall'API.\n   * @returns Un osservabile di tipo AreaStatus[] che rappresenta l'elenco delle aree.\n   */\n  getAllAreas$() {\n    return this.http.get(`/areas`);\n  }\n\n  /**\n   * Aggiorna lo stato di una lampada nell'API.\n   * @param lampId L'ID della lampada da aggiornare.\n   * @param newStatus Il nuovo stato da impostare per la lampada.\n   * @returns Un osservabile di tipo string che rappresenta il risultato dell'operazione di aggiornamento.\n   */\n  toggleLamp$(lampId: LampStatus['id'], newStatus: LampStatus['status']) {\n    return this.http.put(`/lamps/${lampId}/switch/${newStatus}`, null);\n  }\n\n  /**\n   * Aggiunge una nuova lampada all'API.\n   * @param alias L'alias della nuova lampada.\n   * @returns Un osservabile di tipo LampStatus che rappresenta la lampada appena aggiunta.\n   */\n  addLamp$(alias: string) {\n    return this.http.post('/lamps', { alias });\n  }\n\n  /**\n   * Aggiunge un nuovo sensore all'API.\n   * @param alias L'alias del nuovo sensore.\n   * @param geoPos La posizione geografica del nuovo sensore.\n   * @param actionRange Il raggio di azione del nuovo sensore.\n   * @returns Un osservabile di tipo SensorStatus che rappresenta il sensore appena aggiunto.\n   */\n  addSensor$(alias: string, geoPos: string, actionRange: string) {\n    return this.http.post('/sensors', { alias, geoPos, actionRange });\n  }\n\n  /**\n   * Aggiunge una nuova area all'API.\n   * @param alias L'alias della nuova area.\n   * @returns Un osservabile di tipo AreaStatus che rappresenta l'area appena aggiunta.\n   */\n  addArea$(alias: string) {\n    return this.http.post('/areas', { alias });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Questo è il componente radice dell'applicazione.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n/**\n * Questo è il componente radice dell'applicazione.\n */\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  // Attualmente, l'AppComponent è un componente semplice e senza funzionalità particolari.\n  // Se vengono aggiunte nuove funzionalità o hook del ciclo di vita, dovrebbero essere documentati qui.\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AppComponent } from \"./app.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"private-area\", loadComponent: () => \"import(\\\"./feature/private-area/private-area.component\\\").then (c => c.PrivateAreaComponent)\",\n    canActivateChild: [AuthGuard],\n    children: [\n      { path: \"lamps/all\", loadComponent: () => \"import(\\\"./feature/lamps-list/lamps-list.component\\\").then (c => c.LampsListComponent)\" },\n      { path: \"lamps/new\", loadComponent: () => \"import(\\\"./feature/lamp/lamp.component\\\").then (c => c.LampComponent)\" },\n      { path: \"sensors/all\", loadComponent: () => \"import(\\\"./feature/sensors-list/sensors-list.component\\\").then (c => c.SensorsListComponent)\" },\n      { path: \"sensors/new\", loadComponent: () => \"import(\\\"./feature/sensor/sensor.component\\\").then (c => c.SensorComponent)\" },\n      { path: \"areas/all\", loadComponent: () => \"import(\\\"./feature/areas-list/areas-list.component\\\").then (c => c.AreasListComponent)\" },\n      { path: \"areas/new\", loadComponent: () => \"import(\\\"./feature/area/area.component\\\").then (c => c.AreaComponent)\" },\n      { path: \"**\", redirectTo: \"lamps/all\", pathMatch: \"full\" }\n    ]\n  },\n  { path: \"login\", loadComponent: () => \"import(\\\"./feature/authentication/authentication.component\\\").then (c => c.AuthenticationComponent)\" },\n  { path: \"**\", redirectTo: \"private-area\", pathMatch: \"full\" }\n];\n\n@NgModule ({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot (routes),\n    HttpClientModule\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Il servizio principale per la gestione dello stato dell'applicazione.\nGestisce le operazioni relative alle lampade, ai sensori e alle aree,\ncompresa la lettura dei dati dall'API, la gestione degli errori e l'aggiornamento dello stato.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $store\n                            \n                            \n                                api\n                            \n                            \n                                    Readonly\n                                areas$\n                            \n                            \n                                    Readonly\n                                error$\n                            \n                            \n                                    Readonly\n                                firstLoad$\n                            \n                            \n                                    Readonly\n                                lamps$\n                            \n                            \n                                    Readonly\n                                loading$\n                            \n                            \n                                    Readonly\n                                sensors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addArea$\n                            \n                            \n                                    Public\n                                addLamp$\n                            \n                            \n                                    Public\n                                addSensor$\n                            \n                            \n                                    Public\n                                loadData\n                            \n                            \n                                    Public\n                                loadDataAreas\n                            \n                            \n                                    Public\n                                loadDataSensors\n                            \n                            \n                                    Private\n                                manageError\n                            \n                            \n                                    Private\n                                setLampPending\n                            \n                            \n                                    Private\n                                startLoading\n                            \n                            \n                                    Private\n                                stopLoading\n                            \n                            \n                                    Public\n                                toggleLamp\n                            \n                            \n                                    Public\n                                toggleSensor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addArea$\n                        \n                    \n                \n            \n            \n                \n                    \n                    addArea$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:307\n                \n            \n\n\n            \n                \n                    Aggiunge una nuova area con l'alias fornito.\nAvvia l'animazione di caricamento, chiama l'API per aggiungere l'area,\nquindi interrompe l'animazione di caricamento e ricarica i dati delle aree.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'alias della nuova area.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Un osservabile che emette un valore booleano che indica se l'aggiunta dell'area è stata eseguita con successo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addLamp$\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLamp$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:270\n                \n            \n\n\n            \n                \n                    Aggiunge una nuova lampada con l'alias fornito.\nAvvia l'animazione di caricamento, chiama l'API per aggiungere la lampada,\nquindi interrompe l'animazione di caricamento e ricarica i dati delle lampade.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'alias della nuova lampada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Un osservabile che emette un valore booleano che indica se l'aggiunta della lampada è stata eseguita con successo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSensor$\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSensor$(alias: string, geoPos: string, actionRange: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:290\n                \n            \n\n\n            \n                \n                    Aggiunge un nuovo sensore con l'alias, la posizione geografica e l'azione forniti.\nAvvia l'animazione di caricamento, chiama l'API per aggiungere il sensore,\nquindi interrompe l'animazione di caricamento e ricarica i dati dei sensori.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'alias del nuovo sensore.\n\n                                    \n                                \n                                \n                                    geoPos\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La posizione geografica del nuovo sensore.\n\n                                    \n                                \n                                \n                                    actionRange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'azione del nuovo sensore.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Un osservabile che emette un valore booleano che indica se l'aggiunta del sensore è stata eseguita con successo.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:99\n                \n            \n\n\n            \n                \n                    Carica i dati delle lampade dall'API.\nAggiorna lo stato con i nuovi dati, gestisce eventuali errori,\ne interrompe l'animazione di caricamento una volta completato.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadDataAreas\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadDataAreas()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:166\n                \n            \n\n\n            \n                \n                    Carica i dati delle aree dall'API.\nAggiorna lo stato con i nuovi dati, gestisce eventuali errori,\ne interrompe l'animazione di caricamento una volta completato.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadDataSensors\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadDataSensors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:141\n                \n            \n\n\n            \n                \n                    Carica i dati dei sensori dall'API.\nAggiorna lo stato con i nuovi dati, gestisce eventuali errori,\ne interrompe l'animazione di caricamento una volta completato.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageError\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:250\n                \n            \n\n\n            \n                \n                    Gestisce gli errori.\nAggiorna lo stato con un messaggio di errore appropriato in base al codice di stato HTTP.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setLampPending\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLampPending(lamp: LampStatus, pending: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:214\n                \n            \n\n\n            \n                \n                    Aggiorna lo stato di una lampada come in attesa.\nQuesto viene utilizzato per mostrare che lo stato di una lampada sta cambiando.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lamp\n                                    \n                                                LampStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pending\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:191\n                \n            \n\n\n            \n                \n                    Avvia l'animazione di caricamento.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stopLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    stopLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:204\n                \n            \n\n\n            \n                \n                    Interrompe l'animazione di caricamento.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleLamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleLamp(lamp: LampStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:225\n                \n            \n\n\n            \n                \n                    Inverte lo stato di una lampada.\nChiama l'API per aggiornare lo stato della lampada,\nquindi ricarica i dati delle lampade per riflettere le modifiche.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lamp\n                                    \n                                                LampStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleSensor\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSensor(sensor: SensorStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:237\n                \n            \n\n\n            \n                \n                    Inverte lo stato di un sensore.\nChiama l'API per aggiornare lo stato del sensore,\nquindi ricarica i dati dei sensori per riflettere le modifiche.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sensor\n                                    \n                                                SensorStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(initialState)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:83\n                        \n                    \n\n            \n                \n                    Definisce lo store principale dello stato dell'applicazione come BehaviorSubject.\nSi tratta di un Subject RxJS che può emettere nuovi valori ai suoi sottoscrittori\ne ha la caratteristica di restituire sempre l'ultimo valore emesso ai nuovi sottoscrittori.\nViene inizializzato qui con uno stato iniziale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ApiService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:74\n                        \n                    \n\n            \n                \n                    Inietta ApiService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        areas$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.areas))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.error))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstLoad$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.firstLoad))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lamps$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.lamps))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:87\n                        \n                    \n\n            \n                \n                    Definisce selettori per diverse parti dello state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.loading), delay(0))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sensors$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.sensors))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:88\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatusCode } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, delay, map, Observable, of, switchMap, tap } from \"rxjs\";\nimport { LampStatus, SensorStatus, AreaStatus } from \"../model\";\nimport { ApiService } from \"./api.service\";\n\n/**\n * Interfaccia che rappresenta lo store dello stato dell'applicazione.\n * Contiene array di lampade, sensori e aree,\n * inoltre si interessa di segnalare se i dati sono attualmente in caricamento o se si tratta del primo caricamento.\n */\ninterface Store {\n  /**\n   * Un array di stati delle lampade che rappresentano lo stato delle lampade nell'applicazione.\n   */\n  lamps: LampStatus[];\n  /**\n   * Un array di stati dei sensori che rappresentano lo stato dei sensori nell'applicazione.\n   */\n  sensors: SensorStatus[];\n  /**\n   * Un array di stati delle aree che rappresentano lo stato delle aree nell'applicazione.\n   */\n  areas: AreaStatus[];\n  /**\n   * Un indicatore che segnala se i dati sono attualmente in caricamento o ottenuti dall'API.\n   */\n  loading: boolean;\n  /**\n   * Un indicatore che segnala se si tratta del primo caricamento dei dati.\n   */\n  firstLoad: boolean;\n  /**\n   * Una stringa che rappresenta un messaggio di errore in caso di errori.\n   */\n  error: string;\n}\n\n\n/**\n * Stato iniziale per lo store dell'applicazione.\n * Contiene array vuoti per lampade, sensori e aree,\n * e imposta a false gli indicatori di caricamento e primo caricamento.\n */\nconst initialState: Store = {\n  lamps: [],\n  sensors: [],\n  areas: [],\n  loading: false,\n  firstLoad: true,\n  error: null\n};\n\n/**\n * Il servizio principale per la gestione dello stato dell'applicazione.\n * Gestisce le operazioni relative alle lampade, ai sensori e alle aree,\n * compresa la lettura dei dati dall'API, la gestione degli errori e l'aggiornamento dello stato.\n */\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AppService {\n\n  /**\n   * Inietta ApiService.\n   */\n  api = inject(ApiService);\n\n  /**\n   * Definisce lo store principale dello stato dell'applicazione come BehaviorSubject.\n   * Si tratta di un Subject RxJS che può emettere nuovi valori ai suoi sottoscrittori\n   * e ha la caratteristica di restituire sempre l'ultimo valore emesso ai nuovi sottoscrittori.\n   * Viene inizializzato qui con uno stato iniziale.\n   */\n\n  $store = new BehaviorSubject(initialState);\n  /**\n     * Definisce selettori per diverse parti dello state.\n     */\n  readonly lamps$ = this.$store.pipe(map(state => state.lamps));\n  readonly sensors$ = this.$store.pipe(map(state => state.sensors));\n  readonly areas$ = this.$store.pipe(map(state => state.areas));\n  readonly error$ = this.$store.pipe(map(state => state.error));\n  readonly loading$ = this.$store.pipe(map(state => state.loading), delay(0));\n  readonly firstLoad$ = this.$store.pipe(map(state => state.firstLoad));\n\n  /**\n * Carica i dati delle lampade dall'API.\n * Aggiorna lo stato con i nuovi dati, gestisce eventuali errori,\n * e interrompe l'animazione di caricamento una volta completato.\n */\npublic loadData() {\n  // Avvia l'animazione di caricamento.\n  this.startLoading();\n\n  // Chiama il metodo getAllLamps$() del servizio api per ottenere i dati delle lampade.\n  // Questo metodo restituisce un Observable che emette i dati delle lampade.\n  this.api.getAllLamps$().subscribe({\n    // Callback \"next\": Eseguita quando nuovi dati (lampade) sono emessi dall'Observable.\n    next: (lamps) => {\n      // Aggiorna lo stato dell'applicazione con i nuovi dati utilizzando this.$store.next(...).\n      // Viene creato un nuovo oggetto di stato tramite il spreading dello stato esistente (this.$store.value)\n      // e sostituendo la proprietà \"lamps\" con i nuovi dati (\"lamps\").\n      // Imposta anche la proprietà \"firstLoad\" a \"false\" per indicare che non è il primo caricamento.\n      this.$store.next({\n        ...this.$store.value,\n        lamps,\n        firstLoad: false\n      });\n    },\n    // Callback \"error\": Eseguita in caso di errore durante il recupero dei dati.\n    error: (error) => {\n      // Gestisce l'errore chiamando il metodo \"manageError(error)\".\n      // Il metodo \"manageError\" aggiorna lo stato con un messaggio di errore appropriato\n      // basato sul codice di stato HTTP dell'errore.\n      // Successivamente, chiama \"this.stopLoading()\" per interrompere l'animazione di caricamento.\n      this.manageError(error);\n      this.stopLoading();\n    },\n    // Callback \"complete\": Eseguita quando l'Observable è completato,\n    // indicando che il processo di caricamento dei dati è terminato (con successo o con un errore).\n    complete: () => {\n      // Chiama \"this.stopLoading()\" per interrompere l'animazione di caricamento.\n      this.stopLoading();\n    }\n  });\n}\n\n  /**\n     * Carica i dati dei sensori dall'API.\n     * Aggiorna lo stato con i nuovi dati, gestisce eventuali errori,\n     * e interrompe l'animazione di caricamento una volta completato.\n     */\n  public loadDataSensors() {\n    this.startLoading();\n    this.api.getAllSensors$()\n      .subscribe({\n        next: (sensors) => {\n          this.$store.next({\n            ...this.$store.value,\n            sensors,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n  /**\n     * Carica i dati delle aree dall'API.\n     * Aggiorna lo stato con i nuovi dati, gestisce eventuali errori,\n     * e interrompe l'animazione di caricamento una volta completato.\n     */\n  public loadDataAreas() {\n    this.startLoading();\n    this.api.getAllAreas$()\n      .subscribe({\n        next: (areas) => {\n          this.$store.next({\n            ...this.$store.value,\n            areas,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n\n\n  /**\n * Avvia l'animazione di caricamento.\n */\nprivate startLoading() {\n  // Aggiorna lo stato dell'applicazione per indicare che il caricamento dei dati è in corso.\n  // Viene creato un nuovo oggetto di stato tramite lo spreading dello stato esistente (this.$store.value)\n  // e impostando la proprietà \"loading\" a \"true\".\n  this.$store.next({\n    ...this.$store.value,\n    loading: true\n  });\n}\n\n  /**\n     * Interrompe l'animazione di caricamento.\n     */\n  private stopLoading() {\n    this.$store.next({\n      ...this.$store.value,\n      loading: false\n    });\n  }\n  /**\n     * Aggiorna lo stato di una lampada come in attesa.\n     * Questo viene utilizzato per mostrare che lo stato di una lampada sta cambiando.\n     */\n  private setLampPending(lamp: LampStatus, pending: boolean) {\n    this.$store.next({\n      ...this.$store.value,\n      lamps: this.$store.value.lamps.map(l => l.id === lamp.id ? { ...l, pending } : l)\n    });\n  }\n  /**\n     * Inverte lo stato di una lampada.\n     * Chiama l'API per aggiornare lo stato della lampada,\n     * quindi ricarica i dati delle lampade per riflettere le modifiche.\n     */\n  public toggleLamp(lamp: LampStatus) {\n    this.setLampPending(lamp, true);\n    this.api.toggleLamp$(lamp.id, lamp.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n  /**\n     * Inverte lo stato di un sensore.\n     * Chiama l'API per aggiornare lo stato del sensore,\n     * quindi ricarica i dati dei sensori per riflettere le modifiche.\n     */\n  public toggleSensor(sensor: SensorStatus) {\n    this.setLampPending(sensor, true);\n    this.api.toggleLamp$(sensor.id, sensor.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n\n  /**\n     * Gestisce gli errori.\n     * Aggiorna lo stato con un messaggio di errore appropriato in base al codice di stato HTTP.\n     */\n\n  private manageError(error: any) {\n    if (error.status === HttpStatusCode.NotFound) {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Non trovato\"\n      });\n    } else {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Errore\"\n      });\n    }\n  }\n  /**\n  * Aggiunge una nuova lampada con l'alias fornito.\n  * Avvia l'animazione di caricamento, chiama l'API per aggiungere la lampada,\n  * quindi interrompe l'animazione di caricamento e ricarica i dati delle lampade.\n  * @param alias L'alias della nuova lampada.\n  * @returns Un osservabile che emette un valore booleano che indica se l'aggiunta della lampada è stata eseguita con successo.\n  */\n  public addLamp$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addLamp$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n   * Aggiunge un nuovo sensore con l'alias, la posizione geografica e l'azione forniti.\n   * Avvia l'animazione di caricamento, chiama l'API per aggiungere il sensore,\n   * quindi interrompe l'animazione di caricamento e ricarica i dati dei sensori.\n   * @param alias L'alias del nuovo sensore.\n   * @param geoPos La posizione geografica del nuovo sensore.\n   * @param actionRange L'azione del nuovo sensore.\n   * @returns Un osservabile che emette un valore booleano che indica se l'aggiunta del sensore è stata eseguita con successo.\n   */\n\n  public addSensor$(alias: string, geoPos: string, actionRange: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addSensor$(alias, geoPos, actionRange)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n * Aggiunge una nuova area con l'alias fornito.\n * Avvia l'animazione di caricamento, chiama l'API per aggiungere l'area,\n * quindi interrompe l'animazione di caricamento e ricarica i dati delle aree.\n * @param alias L'alias della nuova area.\n * @returns Un osservabile che emette un valore booleano che indica se l'aggiunta dell'area è stata eseguita con successo.\n */\n  public addArea$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => {\n          this.startLoading()\n        }),\n        switchMap(() => this.api.addArea$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadDataAreas())\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AreaButtonComponent.html":{"url":"components/AreaButtonComponent.html","title":"component - AreaButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AreaButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/area-button/area-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente presentazionale che riceve dati come Input ed emette eventi come Output.\nÈ responsabile della visualizzazione di un singolo stato dell'area e emette eventi quando vengono eseguite azioni su di esso.\nQuesto componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-area-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./area-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./area-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                last\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         AreaStatus\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/area-button/area-button.component.ts:29\n                            \n                        \n                \n                    \n                        Dati in ingresso al componente.\nQuesto è passato da un componente genitore e rappresenta lo stato di una particolare area.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Default value : last\n                    \n                \n                    \n                        \n                                Defined in src/app/components/area-button/area-button.component.ts:35\n                        \n                    \n\n            \n                \n                    un operatore RxJS che emette solo l'ultimo valore (completo) di una sequenza osservabile.\nÈ protetto e può essere utilizzato all'interno del componente e dei suoi discendenti.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessary da Angular core\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\n// Import da RxJS\nimport { last } from \"rxjs\";\n// Import da modello AreaStatus\nimport { AreaStatus } from \"../../model\";\n\n/**\n * Componente presentazionale che riceve dati come Input ed emette eventi come Output.\n * È responsabile della visualizzazione di un singolo stato dell'area e emette eventi quando vengono eseguite azioni su di esso.\n * Questo componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n */\n@Component ({\n  selector: \"app-area-button\",\n  templateUrl: \"./area-button.component.html\",\n  styleUrls: [\"./area-button.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule],\n  standalone: true\n})\n\nexport class AreaButtonComponent {\n  /**\n   * Dati in ingresso al componente.\n   * Questo è passato da un componente genitore e rappresenta lo stato di una particolare area.\n   */\n  @Input () data: AreaStatus;\n\n  /**\n   * un operatore RxJS che emette solo l'ultimo valore (completo) di una sequenza osservabile.\n   * È protetto e può essere utilizzato all'interno del componente e dei suoi discendenti.\n   */\n  protected readonly last = last;\n}\n\n    \n\n    \n         \n  \n    {{ data.alias }}\n  \n  \n    \n      \n    \n    {{data.alias}}\n  \n\n\n    \n\n    \n                \n                    ./area-button.component.css\n                \n                button {\n    background-color: transparent;\n    border: none;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.button-header {\n    display: block;\n    border-bottom: 1px solid #e5e5e5;\n    text-align: left;\n}\n\nimg {\n    width: 150px;\n    height: 150px;\n}\n\n.On {\n    background: #ffebc6;\n}\n\n.Off {\n    background: whitesmoke;\n}\n\n\n@keyframes spin {\n    0% {\n        transform: rotateY(0deg);\n    }\n    100% {\n        transform: rotateY(360deg);\n    }\n}\n\n.button-spin {\n    animation-name: spin;\n    animation-duration: .2s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ data.alias }}                      {{data.alias}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AreaButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AreaComponent.html":{"url":"components/AreaComponent.html","title":"component - AreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/area/area.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per le Aree.\nQuesto componente contiene un form per aggiungere una nuova area.\nInteragisce con l'AppService per aggiungere nuove aree e tornare alla root route in caso di aggiunta riuscita.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-area\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./area.component.css\n            \n\n\n\n            \n                templateUrl\n                ./area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                error$\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addArea\n                        \n                    \n                \n            \n            \n                \naddArea()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/area/area.component.ts:62\n                \n            \n\n\n            \n                \n                    Funzione per aggiungere una nuova area.\nRecupera il valore dell'alias dal form e chiama il metodo addArea$ di AppService.\nIn caso di aggiunta riuscita, naviga alla root route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:29\n                        \n                    \n\n            \n                \n                    Istanza di AppService.\nViene utilizzata per interagire con il backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.error$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:55\n                        \n                    \n\n            \n                \n                    Un osservabile dello stato di errore.\nViene utilizzato per gestire lo stato di errore del componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:41\n                        \n                    \n\n            \n                \n                    Istanza del FormBuilder.\nViene utilizzata per creare un form reattivo per aggiungere nuove aree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:47\n                        \n                    \n\n            \n                \n                    Istanza del FormGroup.\nViene utilizzata per creare e gestire i controlli del form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:35\n                        \n                    \n\n            \n                \n                    Istanza del Router.\nViene utilizzata per navigare tra le rotte.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { Component, inject } from \"@angular/core\";\n// Import per i controlli del form\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import per il Router\nimport { Router, RouterModule } from \"@angular/router\";\n// Import per l'AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Componente per le Aree.\n * Questo componente contiene un form per aggiungere una nuova area.\n * Interagisce con l'AppService per aggiungere nuove aree e tornare alla root route in caso di aggiunta riuscita.\n */\n@Component({\n  selector: \"app-area\",\n  templateUrl: \"./area.component.html\",\n  styleUrls: [\"./area.component.css\"],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule]\n})\nexport class AreaComponent {\n  /**\n   * Istanza di AppService.\n   * Viene utilizzata per interagire con il backend.\n   */\n  appService = inject(AppService);\n\n  /**\n   * Istanza del Router.\n   * Viene utilizzata per navigare tra le rotte.\n   */\n  router = inject(Router);\n\n  /**\n   * Istanza del FormBuilder.\n   * Viene utilizzata per creare un form reattivo per aggiungere nuove aree.\n   */\n  formBuilder = inject(FormBuilder);\n\n  /**\n   * Istanza del FormGroup.\n   * Viene utilizzata per creare e gestire i controlli del form.\n   */\n  formData = this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required])\n  });\n\n  /**\n   * Un osservabile dello stato di errore.\n   * Viene utilizzato per gestire lo stato di errore del componente.\n   */\n  error$ = this.appService.error$;\n\n  /**\n   * Funzione per aggiungere una nuova area.\n   * Recupera il valore dell'alias dal form e chiama il metodo addArea$ di AppService.\n   * In caso di aggiunta riuscita, naviga alla root route.\n   */\n  addArea() {\n    const alias = this.formData.get(\"alias\").value;\n\n    console.log(alias);\n\n    this.appService.addArea$(alias)\n      .subscribe((completed) => {\n        if (completed) {\n          this.router.navigate([\"/\"]);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Alias\n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n    \n    \n      Conferma\n    \n  \n\n\n    \n\n    \n                \n                    ./area.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Alias                              Il campo è obbligatorio                                    Conferma      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaStatus.html":{"url":"interfaces/AreaStatus.html","title":"interface - AreaStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model.ts\n        \n\n\n            \n                Description\n            \n            \n                Rappresenta lo stato di un'area.\nIl campo status può essere 'On' (attivata) o 'Off' (disattivata).\nIl campo id è un identificatore univoco per l'area.\nIl campo alias è un nome amichevole per l'area.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Alias dell'area.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    L'identificatore univoco dell'area.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"On\" | \"Off\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"On\" | \"Off\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lo stato corrente dell'area.\nPuò essere 'On' (attivata) o 'Off' (disattivata).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LampStatus {\n  /**\n   * Lo stato corrente della lampada.\n   * Può essere 'On' (acceso) o 'Off' (spento).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco della lampada.\n   */\n  id: string;\n  /**\n   * Alias della lampada.\n   */\n  alias: string;\n  /**\n   * (Opzionale) Indica se il cambio di stato della lampada è in corso o meno.\n   */\n  pending?: boolean;\n}\n\n/**\n * Rappresenta lo stato di un sensore.\n * Il campo `status` può essere 'On' (attivato) o 'Off' (disattivato).\n * Il campo `id` è un identificatore univoco per il sensore.\n * Il campo `alias` è un nome amichevole per il sensore.\n * Il campo `pending` è un campo opzionale che indica se il cambio di stato del sensore è in corso o meno.\n * Il campo `geoPos` rappresenta la posizione geografica del sensore.\n * Il campo `actionRange` indica il raggio entro cui il sensore opera.\n */\nexport interface SensorStatus {\n  /**\n   * Lo stato corrente del sensore.\n   * Può essere 'On' (attivato) o 'Off' (disattivato).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco del sensore.\n   */\n  id: string;\n  /**\n   * Alias del sensore.\n   */\n  alias: string;\n  /**\n   * (Opzionale) Indica se il cambio di stato del sensore è in corso o meno.\n   */\n  pending?: boolean;\n  /**\n   * La posizione geografica del sensore.\n   */\n  geoPos: string;\n  /**\n   * Il raggio entro cui il sensore opera.\n   */\n  actionRange: string;\n}\n\n/**\n * Rappresenta lo stato di un'area.\n * Il campo `status` può essere 'On' (attivata) o 'Off' (disattivata).\n * Il campo `id` è un identificatore univoco per l'area.\n * Il campo `alias` è un nome amichevole per l'area.\n */\nexport interface AreaStatus {\n  /**\n   * Lo stato corrente dell'area.\n   * Può essere 'On' (attivata) o 'Off' (disattivata).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco dell'area.\n   */\n  id: string;\n  /**\n   * Alias dell'area.\n   */\n  alias: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AreasListComponent.html":{"url":"components/AreasListComponent.html","title":"component - AreasListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AreasListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/areas-list/areas-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente lista per le Aree.\nQuesto componente si occupa di gestire gli eventi e passare i dati al componente presentazionale.\nInteragisce con l'AppService per caricare i dati delle aree.\nQuesto componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-areas-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AreaButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./areas-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./areas-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areas$\n                            \n                            \n                                loading$\n                            \n                            \n                                service\n                            \n                            \n                                trackByAreaId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/areas-list/areas-list.component.ts:31\n                \n            \n\n\n            \n                \n                    Implementazione dell'hook del ciclo di vita OnInit.\nQui viene chiamato il metodo loadDataAreas del servizio.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        areas$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.areas$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:45\n                        \n                    \n\n            \n                \n                    Un osservabile dell'array delle aree.\nViene utilizzato per tenere traccia della lista delle aree in tempo reale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:51\n                        \n                    \n\n            \n                \n                    Un osservabile dello stato di caricamento.\nViene utilizzato per gestire lo stato di caricamento del componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:39\n                        \n                    \n\n            \n                \n                    Istanza di AppService.\nViene utilizzata per interagire con il backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAreaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackByFunction\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:57\n                        \n                    \n\n            \n                \n                    Funzione per tracciare le aree per id.\nQuesto aiuta Angular ad ottimizzare il rendering delle liste.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { ChangeDetectionStrategy, Component, inject, OnInit, TrackByFunction } from \"@angular/core\";\n// Import per l'AreaButtonComponent\nimport { AreaButtonComponent } from \"../../components/area-button/area-button.component\";\n// Import per il modello AreaStatus\nimport { AreaStatus } from \"../../model\";\n// Import per l'AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Componente lista per le Aree.\n * Questo componente si occupa di gestire gli eventi e passare i dati al componente presentazionale.\n * Interagisce con l'AppService per caricare i dati delle aree.\n * Questo componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n */\n@Component({\n  selector: \"app-areas-list\",\n  standalone: true,\n  imports: [CommonModule, AreaButtonComponent],\n  templateUrl: \"./areas-list.component.html\",\n  styleUrls: [\"./areas-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreasListComponent implements OnInit {\n  /**\n   * Implementazione dell'hook del ciclo di vita OnInit.\n   * Qui viene chiamato il metodo loadDataAreas del servizio.\n   */\n  ngOnInit() {\n    this.service.loadDataAreas();\n  }\n\n  /**\n   * Istanza di AppService.\n   * Viene utilizzata per interagire con il backend.\n   */\n  service = inject(AppService);\n\n  /**\n   * Un osservabile dell'array delle aree.\n   * Viene utilizzato per tenere traccia della lista delle aree in tempo reale.\n   */\n  areas$ = this.service.areas$;\n\n  /**\n   * Un osservabile dello stato di caricamento.\n   * Viene utilizzato per gestire lo stato di caricamento del componente.\n   */\n  loading$ = this.service.loading$;\n\n  /**\n   * Funzione per tracciare le aree per id.\n   * Questo aiuta Angular ad ottimizzare il rendering delle liste.\n   */\n  trackByAreaId: TrackByFunction = (index: number, area: AreaStatus) => area.id;\n\n  // Al momento, in questo componente non ci sono gestori di eventi.\n  // Eventuali futuri eventi e i relativi gestori dovrebbero essere documentati qui.\n}\n\n    \n\n    \n        \n    \n  \n  \n    \n\n    \n                \n                    ./areas-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AreasListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                La classe AuthService fornisce funzionalità relative all'autenticazione.\nla classe AuthService può essere iniettata in un componente o in un servizio.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:81\n                \n            \n\n\n            \n                \n                    Recupera il token di autenticazione.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        il token di autenticazione dal localstorage.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    Controlla se l'utente è autenticato.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        un valore booleano che indica se l'utente è autenticato.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n                    Controlla se l'utente è loggato.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Un valore booleano che indica se l'utente è loggato.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:101\n                \n            \n\n\n            \n                \n                    Logga l'utente utilizzando le credenziali fornite.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'username dell'utente.\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nla password dell'utente.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Un Observable che indica se il login è andato a buon fine.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:89\n                \n            \n\n\n            \n                \n                    Disconnette l'utente rimuovendo il token dal local storage e ricaricando la pagina.\nDopo il logout, l'utente verrà reindirizzato alla pagina di autenticazione o a qualsiasi altra pagina desiderata.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\n\n/**\n * @class AuthService\n *\n * @description\n *\n * La classe `AuthService` fornisce funzionalità relative all'autenticazione.\n *\n * @usageNotes\n *\n * la classe `AuthService` può essere iniettata in un componente o in un servizio.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  private loggedIn = false;\n\n  constructor() {\n    if (this.isAuthenticated()) {\n      this.loggedIn = true;\n    }\n  }\n\n  /**\n   * Controlla se l'utente è loggato.\n   *\n   * @returns Un valore booleano che indica se l'utente è loggato.\n   */\n  isLoggedIn(): boolean {\n    return this.loggedIn;\n  }\n\n  /**\n   * Controlla se l'utente è autenticato.\n   *\n   * @returns un valore booleano che indica se l'utente è autenticato.\n   */\n  isAuthenticated(): boolean {\n    return !!localStorage.getItem(\"token\");\n  }\n\n  /**\n   * Recupera il token di autenticazione.\n   *\n   * @returns il token di autenticazione dal localstorage.\n   */\n  getToken(): string {\n    return localStorage.getItem(\"token\");\n  }\n\n  /**\n   * Disconnette l'utente rimuovendo il token dal local storage e ricaricando la pagina.\n   *\n   * Dopo il logout, l'utente verrà reindirizzato alla pagina di autenticazione o a qualsiasi altra pagina desiderata.   */\n  logout(): void {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  }\n\n  /**\n   * Logga l'utente utilizzando le credenziali fornite.\n   *\n   * @param username - L'username dell'utente.\n   * @param password - la password dell'utente.\n   * @returns Un Observable che indica se il login è andato a buon fine.\n   */\n  login(username: string, password: string): Observable {\n    localStorage.setItem(\"token\", \"blablabla\");\n    this.loggedIn = true;\n    return of(true);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationComponent.html":{"url":"components/AuthenticationComponent.html","title":"component - AuthenticationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthenticationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/authentication/authentication.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per l'Autenticazione.\nQuesto componente fornisce un form di login.\nInteragisce con l'AuthService per autenticare un utente e navigare nell'area privata in caso di login avvenuto con successo.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            HttpClientModule\n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./authentication.component.css\n            \n\n\n\n            \n                templateUrl\n                ./authentication.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/authentication/authentication.component.ts:75\n                \n            \n\n\n            \n                \n                    Funzione per effettuare il login di un utente.\nRecupera i dati dal form e chiama il metodo login dell'AuthService.\nIn caso di login avvenuto con successo, viene navigato nell'area privata.\nSe il login fallisce, viene impostato il messaggio di errore.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/authentication/authentication.component.ts:65\n                \n            \n\n\n            \n                \n                    Hook del ciclo di vita di Angular.\nRimuove il token dal local storage ogni volta che questo componente viene inizializzato.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:32\n                        \n                    \n\n            \n                \n                    Istanza di AuthService.\nViene utilizzata per autenticare un utente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:59\n                        \n                    \n\n            \n                \n                    Una variabile per memorizzare il messaggio di errore.\nViene utilizzata per mostrare i messaggi di errore all'utente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:44\n                        \n                    \n\n            \n                \n                    Istanza del FormBuilder.\nViene utilizzata per creare un form reattivo per la funzionalità di login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: this.formBuilder.control(\"\", [Validators.required]),\n    password: this.formBuilder.control(\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:50\n                        \n                    \n\n            \n                \n                    Istanza del FormGroup.\nViene utilizzata per creare e gestire i controlli del form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:38\n                        \n                    \n\n            \n                \n                    Istanza del Router.\nViene utilizzata per navigare tra le route.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessario per le chiamate API\nimport { HttpClientModule } from \"@angular/common/http\";\n// Import necessari dal core di Angular\nimport { Component, inject, OnInit } from \"@angular/core\";\n// Import per i controlli del form\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import per il Router\nimport { Router } from \"@angular/router\";\n// Import per l'AuthService\nimport { AuthService } from \"../../services/auth.service\";\n\n/**\n * Componente per l'Autenticazione.\n * Questo componente fornisce un form di login.\n * Interagisce con l'AuthService per autenticare un utente e navigare nell'area privata in caso di login avvenuto con successo.\n */\n@Component({\n  selector: \"app-authentication\",\n  templateUrl: \"./authentication.component.html\",\n  styleUrls: [\"./authentication.component.css\"],\n  standalone: true,\n  imports: [HttpClientModule, CommonModule, ReactiveFormsModule, FormsModule]\n})\nexport class AuthenticationComponent implements OnInit {\n\n  /**\n   * Istanza di AuthService.\n   * Viene utilizzata per autenticare un utente.\n   */\n  authService = inject(AuthService);\n\n  /**\n   * Istanza del Router.\n   * Viene utilizzata per navigare tra le route.\n   */\n  router = inject(Router);\n\n  /**\n   * Istanza del FormBuilder.\n   * Viene utilizzata per creare un form reattivo per la funzionalità di login.\n   */\n  formBuilder = inject(FormBuilder);\n\n  /**\n   * Istanza del FormGroup.\n   * Viene utilizzata per creare e gestire i controlli del form.\n   */\n  formData = this.formBuilder.group({\n    username: this.formBuilder.control(\"\", [Validators.required]),\n    password: this.formBuilder.control(\"\", [Validators.required])\n  });\n\n  /**\n   * Una variabile per memorizzare il messaggio di errore.\n   * Viene utilizzata per mostrare i messaggi di errore all'utente.\n   */\n  errorMessage: string;\n\n  /**\n   * Hook del ciclo di vita di Angular.\n   * Rimuove il token dal local storage ogni volta che questo componente viene inizializzato.\n   */\n  ngOnInit() {\n    localStorage.removeItem(\"token\");\n  }\n\n  /**\n   * Funzione per effettuare il login di un utente.\n   * Recupera i dati dal form e chiama il metodo login dell'AuthService.\n   * In caso di login avvenuto con successo, viene navigato nell'area privata.\n   * Se il login fallisce, viene impostato il messaggio di errore.\n   */\n  login() {\n    const credentials = this.formData.value;\n    this.authService.login(credentials.username, credentials.password)\n      .subscribe((logged) => {\n        if (logged) {\n          this.router.navigate([\"/private-area\"]);\n        } else {\n          this.errorMessage = \"Credenziali non valide\";\n        }\n      });\n  }\n}\n\n    \n\n    \n        -->\n-->\n-->\n-->\n-->\nLogin-->\n-->\n-->\nUsername:-->\n-->\n-->\n-->\nPassword:-->\n-->\n-->\n{{ errorMessage }}-->\n-->\nLogin-->\n-->\n-->\n-->\n-->\n-->\n-->\n-->\n\n  \n    \n      \n        \n      \n      Please sign in\n      \n        \n        Username\n      \n      \n        \n        Password\n      \n      Sign in\n      &copy; 2023\n    \n  \n\n\n    \n\n    \n                \n                    ./authentication.component.css\n                \n                \n.body-container {\n    display: flex;\n    align-items: center;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    background-color: #f5f5f5;\n    min-height: 100vh;\n}\n\n.form-signin {\n    max-width: 330px;\n    padding: 15px;\n}\n\n.form-signin .form-floating:focus-within {\n    z-index: 2;\n}\n\n.form-signin input[type=\"email\"] {\n    margin-bottom: -1px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n}\n\n.form-signin input[type=\"password\"] {\n    margin-bottom: 10px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->-->-->-->-->Login-->-->-->Username:-->-->-->-->Password:-->-->-->{{ errorMessage }}-->-->Login-->-->-->-->-->-->-->-->                                Please sign in                      Username                            Password            Sign in      © 2023      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LampButtonComponent.html":{"url":"components/LampButtonComponent.html","title":"component - LampButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LampButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/lamp-button/lamp-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per Lamp Button.\nQuesto è un componente di presentazione che riceve dati come input ed emette eventi come output.\nÈ responsabile della visualizzazione dello stato di una singola lampada ed emette eventi quando vengono intraprese azioni su di essa.\nQuesto componente utilizza la strategia di rilevamento delle modifiche OnPush.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lamp-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./lamp-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lamp-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                last\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleLamp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         LampStatus\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/lamp-button/lamp-button.component.ts:30\n                            \n                        \n                \n                    \n                        Input data di tipo LampStatus.\nQuesto è passato da un componente genitore e rappresenta lo stato di una particolare lampada.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleLamp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/lamp-button/lamp-button.component.ts:36\n                            \n                        \n                \n                    \n                        Output EventEmitter da emettere quando lo stato della lampada viene attivata.\nEmette un evento ogni volta che un utente interagisce con la lampada.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Default value : last\n                    \n                \n                    \n                        \n                                Defined in src/app/components/lamp-button/lamp-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Un operatore RxJS che emette solo l'ultimo valore (completo) di una sequenza osservabile.\nE' protetto e può essere utilizzato all'interno del componente e dei suoi discendenti.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessary da Angular core\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\n// Importa last da RxJS\nimport { last } from \"rxjs\";\n// Importa da modello LampStatus\nimport { LampStatus } from \"../../model\";\n\n/**\n * Componente per Lamp Button.\n * Questo è un componente di presentazione che riceve dati come input ed emette eventi come output.\n * È responsabile della visualizzazione dello stato di una singola lampada ed emette eventi quando vengono intraprese azioni su di essa.\n * Questo componente utilizza la strategia di rilevamento delle modifiche OnPush.\n */\n@Component ({\n  selector: \"app-lamp-button\",\n  templateUrl: \"./lamp-button.component.html\",\n  styleUrls: [\"./lamp-button.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule],\n  standalone: true\n})\n\nexport class LampButtonComponent {\n  /**\n   * Input data di tipo LampStatus.\n   * Questo è passato da un componente genitore e rappresenta lo stato di una particolare lampada.\n   */\n  @Input () data: LampStatus;\n\n  /**\n   * Output EventEmitter da emettere quando lo stato della lampada viene attivata.\n   * Emette un evento ogni volta che un utente interagisce con la lampada.\n   */\n  @Output () toggleLamp = new EventEmitter ();\n\n  /**\n   * Un operatore RxJS che emette solo l'ultimo valore (completo) di una sequenza osservabile.\n   * E' protetto e può essere utilizzato all'interno del componente e dei suoi discendenti.\n   */\n  protected readonly last = last;\n}\n\n    \n\n    \n        \n  \n    {{ data.alias }}\n  \n  \n    \n      \n      \n      \n    \n    {{data.status}}\n  \n\n\n    \n\n    \n                \n                    ./lamp-button.component.css\n                \n                button {\n    background-color: transparent;\n    border: none;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.button-header {\n    display: block;\n    border-bottom: 1px solid #e5e5e5;\n    text-align: left;\n}\n\nimg {\n    width: 150px;\n    height: 150px;\n}\n\n.On {\n    background: #ffebc6;\n}\n\n.Off {\n    background: whitesmoke;\n}\n\n\n@keyframes spin {\n    0% {\n        transform: rotateY(0deg);\n    }\n    100% {\n        transform: rotateY(360deg);\n    }\n}\n\n.button-spin {\n    animation-name: spin;\n    animation-duration: .2s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ data.alias }}                                  {{data.status}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LampButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LampComponent.html":{"url":"components/LampComponent.html","title":"component - LampComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LampComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/lamp/lamp.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per la Lampada.\nQuesto componente contiene un form per aggiungere una nuova lampada.\nInteragisce con l'AppService per aggiungere nuove lampade e per navigare alla route principale in caso di aggiunta avvenuta con successo.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lamp\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./lamp.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lamp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                error$\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLamp\n                        \n                    \n                \n            \n            \n                \naddLamp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/lamp/lamp.component.ts:62\n                \n            \n\n\n            \n                \n                    Funzione per aggiungere una nuova lampada.\nRecupera il valore dell'alias dal form e chiama il metodo addLamp$ dell'AppService.\nIn caso di aggiunta avvenuta con successo, viene navigato alla route principale.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:29\n                        \n                    \n\n            \n                \n                    Istanza di AppService.\nViene utilizzata per interagire con il backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.error$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:55\n                        \n                    \n\n            \n                \n                    Un osservabile dello stato di errore.\nViene utilizzato per gestire lo stato di errore del componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:41\n                        \n                    \n\n            \n                \n                    Istanza del FormBuilder.\nViene utilizzata per creare un form reattivo per aggiungere nuove lampade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:47\n                        \n                    \n\n            \n                \n                    Istanza del FormGroup.\nViene utilizzata per creare e gestire i controlli del form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:35\n                        \n                    \n\n            \n                \n                    Istanza del Router.\nViene utilizzata per navigare tra le route.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { Component, inject } from \"@angular/core\";\n// Import per i controlli del form\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import per il Router\nimport { Router, RouterModule } from \"@angular/router\";\n// Import per l'AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Componente per la Lampada.\n * Questo componente contiene un form per aggiungere una nuova lampada.\n * Interagisce con l'AppService per aggiungere nuove lampade e per navigare alla route principale in caso di aggiunta avvenuta con successo.\n */\n@Component({\n  selector: \"app-lamp\",\n  templateUrl: \"./lamp.component.html\",\n  styleUrls: [\"./lamp.component.css\"],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule]\n})\nexport class LampComponent {\n  /**\n   * Istanza di AppService.\n   * Viene utilizzata per interagire con il backend.\n   */\n  appService = inject(AppService);\n\n  /**\n   * Istanza del Router.\n   * Viene utilizzata per navigare tra le route.\n   */\n  router = inject(Router);\n\n  /**\n   * Istanza del FormBuilder.\n   * Viene utilizzata per creare un form reattivo per aggiungere nuove lampade.\n   */\n  formBuilder = inject(FormBuilder);\n\n  /**\n   * Istanza del FormGroup.\n   * Viene utilizzata per creare e gestire i controlli del form.\n   */\n  formData = this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required])\n  });\n\n  /**\n   * Un osservabile dello stato di errore.\n   * Viene utilizzato per gestire lo stato di errore del componente.\n   */\n  error$ = this.appService.error$;\n\n  /**\n   * Funzione per aggiungere una nuova lampada.\n   * Recupera il valore dell'alias dal form e chiama il metodo addLamp$ dell'AppService.\n   * In caso di aggiunta avvenuta con successo, viene navigato alla route principale.\n   */\n  addLamp() {\n    this.appService.addLamp$(this.formData.get(\"alias\").value)\n      .subscribe((completed) => {\n        if (completed) {\n          this.router.navigate([\"/\"]);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Alias\n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n    \n      Conferma\n    \n  \n\n\n    \n\n    \n                \n                    ./lamp.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Alias                              Il campo è obbligatorio                                Conferma      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LampComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LampStatus.html":{"url":"interfaces/LampStatus.html","title":"interface - LampStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LampStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model.ts\n        \n\n\n            \n                Description\n            \n            \n                Rappresenta lo stato di una lampada.\nIl campo status può essere 'On' (acceso) o 'Off' (spento).\nIl campo id è un identificatore univoco per la lampada.\nIl campo alias è un nome amichevole per la lampada.\nIl campo pending è un campo opzionale che indica se il cambio di stato della lampada è in corso o meno.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Alias della lampada.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    L'identificatore univoco della lampada.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Opzionale) Indica se il cambio di stato della lampada è in corso o meno.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"On\" | \"Off\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"On\" | \"Off\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lo stato corrente della lampada.\nPuò essere 'On' (acceso) o 'Off' (spento).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LampStatus {\n  /**\n   * Lo stato corrente della lampada.\n   * Può essere 'On' (acceso) o 'Off' (spento).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco della lampada.\n   */\n  id: string;\n  /**\n   * Alias della lampada.\n   */\n  alias: string;\n  /**\n   * (Opzionale) Indica se il cambio di stato della lampada è in corso o meno.\n   */\n  pending?: boolean;\n}\n\n/**\n * Rappresenta lo stato di un sensore.\n * Il campo `status` può essere 'On' (attivato) o 'Off' (disattivato).\n * Il campo `id` è un identificatore univoco per il sensore.\n * Il campo `alias` è un nome amichevole per il sensore.\n * Il campo `pending` è un campo opzionale che indica se il cambio di stato del sensore è in corso o meno.\n * Il campo `geoPos` rappresenta la posizione geografica del sensore.\n * Il campo `actionRange` indica il raggio entro cui il sensore opera.\n */\nexport interface SensorStatus {\n  /**\n   * Lo stato corrente del sensore.\n   * Può essere 'On' (attivato) o 'Off' (disattivato).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco del sensore.\n   */\n  id: string;\n  /**\n   * Alias del sensore.\n   */\n  alias: string;\n  /**\n   * (Opzionale) Indica se il cambio di stato del sensore è in corso o meno.\n   */\n  pending?: boolean;\n  /**\n   * La posizione geografica del sensore.\n   */\n  geoPos: string;\n  /**\n   * Il raggio entro cui il sensore opera.\n   */\n  actionRange: string;\n}\n\n/**\n * Rappresenta lo stato di un'area.\n * Il campo `status` può essere 'On' (attivata) o 'Off' (disattivata).\n * Il campo `id` è un identificatore univoco per l'area.\n * Il campo `alias` è un nome amichevole per l'area.\n */\nexport interface AreaStatus {\n  /**\n   * Lo stato corrente dell'area.\n   * Può essere 'On' (attivata) o 'Off' (disattivata).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco dell'area.\n   */\n  id: string;\n  /**\n   * Alias dell'area.\n   */\n  alias: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LampsListComponent.html":{"url":"components/LampsListComponent.html","title":"component - LampsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LampsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/lamps-list/lamps-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Un componente di lista per le lampade.\nQuesto componente è responsabile della gestione degli eventi e del passaggio dei dati al componente presentazionale.\nInteragisce con l'AppService per caricare i dati e per cambiare lo stato delle lampade.\nQuesto componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lamps-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LampButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./lamps-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lamps-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lamps$\n                            \n                            \n                                loading$\n                            \n                            \n                                service\n                            \n                            \n                                trackByLampId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/lamps-list/lamps-list.component.ts:31\n                \n            \n\n\n            \n                \n                    Implementazione del hook del ciclo di vita OnInit.\nQui viene chiamato il metodo loadData del servizio.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLamp\n                        \n                    \n                \n            \n            \n                \ntoggleLamp(lamp: LampStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/lamps-list/lamps-list.component.ts:64\n                \n            \n\n\n            \n                \n                    Metodo per cambiare lo stato di una lampada.\nQuesto metodo utilizza l'AppService per cambiare lo stato della lampada.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lamp\n                                    \n                                                LampStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'istanza di LampStatus da cambiare\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lamps$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.lamps$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:45\n                        \n                    \n\n            \n                \n                    Un osservabile dell'array di lampade.\nViene utilizzato per tenere traccia della lista di lampade in tempo reale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:51\n                        \n                    \n\n            \n                \n                    Un osservabile dello stato di caricamento.\nViene utilizzato per gestire lo stato di caricamento del componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:39\n                        \n                    \n\n            \n                \n                    Istanza di AppService.\nViene utilizzata per interagire con il backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByLampId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackByFunction\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:57\n                        \n                    \n\n            \n                \n                    Funzione per tracciare le lampade in base all'id.\nQuesto aiuta Angular ad ottimizzare il rendering delle liste.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { ChangeDetectionStrategy, Component, inject, OnInit, TrackByFunction } from \"@angular/core\";\n// Import per il componente LampButtonComponent\nimport { LampButtonComponent } from \"../../components/lamp-button/lamp-button.component\";\n// Import per il modello LampStatus\nimport { LampStatus } from \"../../model\";\n// Import per l'AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Un componente di lista per le lampade.\n * Questo componente è responsabile della gestione degli eventi e del passaggio dei dati al componente presentazionale.\n * Interagisce con l'AppService per caricare i dati e per cambiare lo stato delle lampade.\n * Questo componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n */\n@Component({\n  selector: \"app-lamps-list\",\n  standalone: true,\n  imports: [CommonModule, LampButtonComponent],\n  templateUrl: \"./lamps-list.component.html\",\n  styleUrls: [\"./lamps-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LampsListComponent implements OnInit {\n  /**\n   * Implementazione del hook del ciclo di vita OnInit.\n   * Qui viene chiamato il metodo loadData del servizio.\n   */\n  ngOnInit() {\n    this.service.loadData();\n  }\n\n  /**\n   * Istanza di AppService.\n   * Viene utilizzata per interagire con il backend.\n   */\n  service = inject(AppService);\n\n  /**\n   * Un osservabile dell'array di lampade.\n   * Viene utilizzato per tenere traccia della lista di lampade in tempo reale.\n   */\n  lamps$ = this.service.lamps$;\n\n  /**\n   * Un osservabile dello stato di caricamento.\n   * Viene utilizzato per gestire lo stato di caricamento del componente.\n   */\n  loading$ = this.service.loading$;\n\n  /**\n   * Funzione per tracciare le lampade in base all'id.\n   * Questo aiuta Angular ad ottimizzare il rendering delle liste.\n   */\n  trackByLampId: TrackByFunction = (index: number, lamp: LampStatus) => lamp.id;\n\n  /**\n   * Metodo per cambiare lo stato di una lampada.\n   * Questo metodo utilizza l'AppService per cambiare lo stato della lampada.\n   * @param lamp - L'istanza di LampStatus da cambiare\n   */\n  toggleLamp(lamp: LampStatus) {\n    this.service.toggleLamp(lamp);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./lamps-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LampsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivateAreaComponent.html":{"url":"components/PrivateAreaComponent.html","title":"component - PrivateAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivateAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/private-area/private-area.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per l'Area Privata.\nQuesto componente rappresenta un'area privata dell'applicazione accessibile agli utenti autenticati.\nInteragisce con l'AppService per gestire lo stato di caricamento dell'applicazione.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-private-area\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n            \n                styleUrls\n                ./private-area.component.css\n            \n\n\n\n            \n                templateUrl\n                ./private-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/private-area/private-area.component.ts:27\n                        \n                    \n\n            \n                \n                    Istanza di AppService.\nViene utilizzata per interagire con il backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/private-area/private-area.component.ts:33\n                        \n                    \n\n            \n                \n                    Un osservabile dello stato di caricamento.\nViene utilizzato per gestire lo stato di caricamento del componente.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { Component, inject } from \"@angular/core\";\n// Import per le direttive del router\nimport { RouterLink, RouterLinkActive, RouterOutlet } from \"@angular/router\";\n// Import per l'AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Componente per l'Area Privata.\n * Questo componente rappresenta un'area privata dell'applicazione accessibile agli utenti autenticati.\n * Interagisce con l'AppService per gestire lo stato di caricamento dell'applicazione.\n */\n@Component({\n  selector: \"app-private-area\",\n  templateUrl: \"./private-area.component.html\",\n  styleUrls: [\"./private-area.component.css\"],\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, RouterLink, RouterLinkActive]\n})\nexport class PrivateAreaComponent {\n  /**\n   * Istanza di AppService.\n   * Viene utilizzata per interagire con il backend.\n   */\n  appService = inject(AppService);\n\n  /**\n   * Un osservabile dello stato di caricamento.\n   * Viene utilizzato per gestire lo stato di caricamento del componente.\n   */\n  loading$ = this.appService.loading$;\n}\n\n    \n\n    \n        \n  \n    \n      \n        Dashboard Lampioni\n      \n      \n        Dashboard Sensori\n      \n      \n        Dashboard Area\n      \n      \n        Aggiungi Lampione\n      \n      \n        Aggiungi Sensore\n      \n      \n        Aggiungi Area\n      \n    \n    \n    \n      \n        Logout\n      \n    \n  \n  \n    \n      \n      \n    \n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./private-area.component.css\n                \n                .loading-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 9999;\n    width: 100%;\n    height: 100%;\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out;\n}\n\n.loading-backdrop.loading {\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    visibility: visible;\n    opacity: 1;\n\n}\n\n\n/* SPINNER */\n.lds-ripple {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n}\n\n.lds-ripple div {\n    position: absolute;\n    border: 4px solid #fff;\n    opacity: 1;\n    border-radius: 50%;\n    animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n}\n\n.lds-ripple div:nth-child(2) {\n    animation-delay: -0.5s;\n}\n\n@keyframes lds-ripple {\n    0% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 0;\n    }\n    4.9% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 0;\n    }\n    5% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 1;\n    }\n    100% {\n        top: 0px;\n        left: 0px;\n        width: 72px;\n        height: 72px;\n        opacity: 0;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Dashboard Lampioni                    Dashboard Sensori                    Dashboard Area                    Aggiungi Lampione                    Aggiungi Sensore                    Aggiungi Area                                Logout                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivateAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SensorButtonComponent.html":{"url":"components/SensorButtonComponent.html","title":"component - SensorButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SensorButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sensor-button/sensor-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per il Pulsante del Sensore.\nQuesto è un componente di presentazione che riceve dati come input ed emette eventi come output.\nÈ responsabile della visualizzazione dello stato di un singolo sensore ed emette eventi quando vengono intraprese azioni su di esso.\nQuesto componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sensor-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sensor-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sensor-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                last\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSensor\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         SensorStatus\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sensor-button/sensor-button.component.ts:34\n                            \n                        \n                \n                    \n                        Dati in ingresso di tipo SensorStatus.\nQuesti dati vengono passati da un componente genitore e rappresentano lo stato di un sensore specifico.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSensor\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sensor-button/sensor-button.component.ts:40\n                            \n                        \n                \n                    \n                        Output EventEmitter per essere emesso quando lo stato del sensore viene modificato.\nEmette un evento ogni volta che l'utente interagisce con questo componente.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Default value : last\n                    \n                \n                    \n                        \n                                Defined in src/app/components/sensor-button/sensor-button.component.ts:46\n                        \n                    \n\n            \n                \n                    Un operatore RxJS che emette solo l'ultimo valore (completato) di una sequenza osservabile.\nÈ protetto e può essere utilizzato all'interno del componente e dei suoi discendenti.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\n// Import necessari da RxJS\nimport { last } from \"rxjs\";\n// Import del modello SensorStatus\nimport { SensorStatus } from \"../../model\";\n\n/**\n * Componente per il Pulsante del Sensore.\n * Questo è un componente di presentazione che riceve dati come input ed emette eventi come output.\n * È responsabile della visualizzazione dello stato di un singolo sensore ed emette eventi quando vengono intraprese azioni su di esso.\n * Questo componente utilizza la strategia di rilevamento dei cambiamenti OnPush.\n */\n@Component({\n  selector: 'app-sensor-button',\n  templateUrl: './sensor-button.component.html',\n  styleUrls: ['./sensor-button.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule],\n  standalone: true\n})\nexport class SensorButtonComponent {\n  /**\n   * Proprietà per consentire l'aggiunta di proprietà dinamiche al componente.\n   */\n  [x: string]: any;\n\n  /**\n   * Dati in ingresso di tipo SensorStatus.\n   * Questi dati vengono passati da un componente genitore e rappresentano lo stato di un sensore specifico.\n   */\n  @Input() data: SensorStatus;\n\n  /**\n   * Output EventEmitter per essere emesso quando lo stato del sensore viene modificato.\n   * Emette un evento ogni volta che l'utente interagisce con questo componente.\n   */\n  @Output() toggleSensor = new EventEmitter();\n\n  /**\n   * Un operatore RxJS che emette solo l'ultimo valore (completato) di una sequenza osservabile.\n   * È protetto e può essere utilizzato all'interno del componente e dei suoi discendenti.\n   */\n  protected readonly last = last;\n}\n\n    \n\n    \n        \n  \n    Nome : {{ data.alias }}  Area geografica : {{data.geoPos}}  Portata: {{data.actionRange}}\n  \n  \n    \n      \n        \n      \n        \n    {{data.alias}}\n  \n\n\n    \n\n    \n                \n                    ./sensor-button.component.css\n                \n                button {\n    background-color: transparent;\n    border: none;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.button-header {\n    display: block;\n    border-bottom: 1px solid #e5e5e5;\n    text-align: left;\n}\n\nimg {\n    width: 150px;\n    height: 150px;\n}\n.image-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.Off {\n    background: whitesmoke;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Nome : {{ data.alias }}  Area geografica : {{data.geoPos}}  Portata: {{data.actionRange}}                                        {{data.alias}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SensorButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SensorComponent.html":{"url":"components/SensorComponent.html","title":"component - SensorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SensorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/sensor/sensor.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per il sensore.\nQuesto componente contiene un form per aggiungere un nuovo sensore.\nInteragisce con l'AppService per aggiungere nuovi sensori e navigare verso la route principale in caso di aggiunta avvenuta con successo.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sensor\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./sensor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sensor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                error$\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSensor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSensor\n                        \n                    \n                \n            \n            \n                \naddSensor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/sensor/sensor.component.ts:64\n                \n            \n\n\n            \n                \n                    Funzione per aggiungere un nuovo sensore.\nRecupera i valori di alias, geoPos e actionRange dal form e chiama il metodo addSensor$ dell'AppService.\nIn caso di aggiunta avvenuta con successo, naviga verso la route principale.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:29\n                        \n                    \n\n            \n                \n                    Istanza di AppService.\nViene utilizzata per interagire con il backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.error$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:57\n                        \n                    \n\n            \n                \n                    Un osservabile dello stato di errore.\nViene utilizzato per gestire lo stato di errore del componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:41\n                        \n                    \n\n            \n                \n                    Istanza di FormBuilder.\nViene utilizzata per creare un form reattivo per l'aggiunta di nuovi sensori.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required]),\n    geoPos: this.formBuilder.control(\"\", [Validators.required]),\n    actionRange: this.formBuilder.control(\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:47\n                        \n                    \n\n            \n                \n                    Istanza di FormGroup.\nViene utilizzata per creare e gestire i controlli del form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:35\n                        \n                    \n\n            \n                \n                    Istanza di Router.\nViene utilizzata per navigare tra le route.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Import necessari dal core di Angular\nimport { Component, inject } from \"@angular/core\";\n// Import per i form controls\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import per il Router\nimport { Router, RouterModule } from \"@angular/router\";\n// Import per l'AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Componente per il sensore.\n * Questo componente contiene un form per aggiungere un nuovo sensore.\n * Interagisce con l'AppService per aggiungere nuovi sensori e navigare verso la route principale in caso di aggiunta avvenuta con successo.\n */\n@Component({\n  selector: \"app-sensor\",\n  templateUrl: \"./sensor.component.html\",\n  styleUrls: [\"./sensor.component.css\"],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule]\n})\nexport class SensorComponent {\n  /**\n   * Istanza di AppService.\n   * Viene utilizzata per interagire con il backend.\n   */\n  appService = inject(AppService);\n\n  /**\n   * Istanza di Router.\n   * Viene utilizzata per navigare tra le route.\n   */\n  router = inject(Router);\n\n  /**\n   * Istanza di FormBuilder.\n   * Viene utilizzata per creare un form reattivo per l'aggiunta di nuovi sensori.\n   */\n  formBuilder = inject(FormBuilder);\n\n  /**\n   * Istanza di FormGroup.\n   * Viene utilizzata per creare e gestire i controlli del form.\n   */\n  formData = this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required]),\n    geoPos: this.formBuilder.control(\"\", [Validators.required]),\n    actionRange: this.formBuilder.control(\"\", [Validators.required])\n  });\n\n  /**\n   * Un osservabile dello stato di errore.\n   * Viene utilizzato per gestire lo stato di errore del componente.\n   */\n  error$ = this.appService.error$;\n\n  /**\n   * Funzione per aggiungere un nuovo sensore.\n   * Recupera i valori di alias, geoPos e actionRange dal form e chiama il metodo addSensor$ dell'AppService.\n   * In caso di aggiunta avvenuta con successo, naviga verso la route principale.\n   */\n  addSensor() {\n    const alias = this.formData.get(\"alias\").value;\n    const geoPos = this.formData.get(\"geoPos\").value;\n    const actionRange = this.formData.get(\"actionRange\").value;\n\n    this.appService.addSensor$(alias, geoPos, actionRange)\n      .subscribe((completed) => {\n        if (completed) {\n          this.router.navigate([\"/\"]);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Alias\n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n      \n        \n        Posizione geografica sensore \n        \n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n      \n        \n        Raggio d azione sensore  \n        \n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n    \n      Conferma\n    \n  \n\n\n    \n\n    \n                \n                    ./sensor.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Alias                              Il campo è obbligatorio                                            Posizione geografica sensore                                       Il campo è obbligatorio                                            Raggio d azione sensore                                        Il campo è obbligatorio                                Conferma      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SensorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SensorStatus.html":{"url":"interfaces/SensorStatus.html","title":"interface - SensorStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SensorStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model.ts\n        \n\n\n            \n                Description\n            \n            \n                Rappresenta lo stato di un sensore.\nIl campo status può essere 'On' (attivato) o 'Off' (disattivato).\nIl campo id è un identificatore univoco per il sensore.\nIl campo alias è un nome amichevole per il sensore.\nIl campo pending è un campo opzionale che indica se il cambio di stato del sensore è in corso o meno.\nIl campo geoPos rappresenta la posizione geografica del sensore.\nIl campo actionRange indica il raggio entro cui il sensore opera.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionRange\n                                        \n                                \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            geoPos\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Il raggio entro cui il sensore opera.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Alias del sensore.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    La posizione geografica del sensore.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    L'identificatore univoco del sensore.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Opzionale) Indica se il cambio di stato del sensore è in corso o meno.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"On\" | \"Off\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"On\" | \"Off\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lo stato corrente del sensore.\nPuò essere 'On' (attivato) o 'Off' (disattivato).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LampStatus {\n  /**\n   * Lo stato corrente della lampada.\n   * Può essere 'On' (acceso) o 'Off' (spento).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco della lampada.\n   */\n  id: string;\n  /**\n   * Alias della lampada.\n   */\n  alias: string;\n  /**\n   * (Opzionale) Indica se il cambio di stato della lampada è in corso o meno.\n   */\n  pending?: boolean;\n}\n\n/**\n * Rappresenta lo stato di un sensore.\n * Il campo `status` può essere 'On' (attivato) o 'Off' (disattivato).\n * Il campo `id` è un identificatore univoco per il sensore.\n * Il campo `alias` è un nome amichevole per il sensore.\n * Il campo `pending` è un campo opzionale che indica se il cambio di stato del sensore è in corso o meno.\n * Il campo `geoPos` rappresenta la posizione geografica del sensore.\n * Il campo `actionRange` indica il raggio entro cui il sensore opera.\n */\nexport interface SensorStatus {\n  /**\n   * Lo stato corrente del sensore.\n   * Può essere 'On' (attivato) o 'Off' (disattivato).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco del sensore.\n   */\n  id: string;\n  /**\n   * Alias del sensore.\n   */\n  alias: string;\n  /**\n   * (Opzionale) Indica se il cambio di stato del sensore è in corso o meno.\n   */\n  pending?: boolean;\n  /**\n   * La posizione geografica del sensore.\n   */\n  geoPos: string;\n  /**\n   * Il raggio entro cui il sensore opera.\n   */\n  actionRange: string;\n}\n\n/**\n * Rappresenta lo stato di un'area.\n * Il campo `status` può essere 'On' (attivata) o 'Off' (disattivata).\n * Il campo `id` è un identificatore univoco per l'area.\n * Il campo `alias` è un nome amichevole per l'area.\n */\nexport interface AreaStatus {\n  /**\n   * Lo stato corrente dell'area.\n   * Può essere 'On' (attivata) o 'Off' (disattivata).\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * L'identificatore univoco dell'area.\n   */\n  id: string;\n  /**\n   * Alias dell'area.\n   */\n  alias: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SensorsListComponent.html":{"url":"components/SensorsListComponent.html","title":"component - SensorsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SensorsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/sensors-list/sensors-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sensors-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SensorButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./sensors-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sensors-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                sensors$\n                            \n                            \n                                service\n                            \n                            \n                                trackBySensorId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSensor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/sensors-list/sensors-list.component.ts:43\n                \n            \n\n\n            \n                \n                    Inizializza il componente e carica i dati dei sensori.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSensor\n                        \n                    \n                \n            \n            \n                \ntoggleSensor(sensor: SensorStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/sensors-list/sensors-list.component.ts:85\n                \n            \n\n\n            \n                \n                    Cambia lo stato di un sensore invocando il metodo toggleSensor dell'AppService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sensor\n                                    \n                                                SensorStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'oggetto del sensore da attivare/disattivare.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:69\n                        \n                    \n\n            \n                \n                    Rappresenta lo stato di caricamento come un flusso di osservabili.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.sensors$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:61\n                        \n                    \n\n            \n                \n                    Rappresenta i dati dei sensori come un flusso di osservabili.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:53\n                        \n                    \n\n            \n                \n                    Inietta l'AppService per comunicare con il backend e gestire i dati dei sensori.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackBySensorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackByFunction\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:77\n                        \n                    \n\n            \n                \n                    Definisce una funzione di tracciamento (track by) per la direttiva ngFor per migliorare le prestazioni di rendering.\nUtilizza l'ID del sensore come identificatore univoco.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { ChangeDetectionStrategy, Component, inject, OnInit, TrackByFunction } from \"@angular/core\";\n\nimport { SensorStatus } from \"../../model\";\nimport { AppService } from \"../../services/app.service\";\nimport { SensorButtonComponent } from \"src/app/components/sensor-button/sensor-button.component\";\n\n@Component({\n  selector: 'app-sensors-list',\n  templateUrl: './sensors-list.component.html',\n  styleUrls: ['./sensors-list.component.css'],\n  standalone: true,\n  imports: [CommonModule, SensorButtonComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SensorsListComponent implements OnInit {\n\n  /**\n   * Inizializza il componente e carica i dati dei sensori.\n   *\n   * @memberof SensorsListComponent\n   */\n  ngOnInit() {\n    this.service.loadDataSensors();\n  }\n\n  /**\n   * Inietta l'`AppService` per comunicare con il backend e gestire i dati dei sensori.\n   *\n   * @type {AppService}\n   * @memberof SensorsListComponent\n   */\n  service = inject(AppService);\n\n  /**\n   * Rappresenta i dati dei sensori come un flusso di osservabili.\n   *\n   * @type {*}\n   * @memberof SensorsListComponent\n   */\n  sensors$ = this.service.sensors$;\n\n  /**\n   * Rappresenta lo stato di caricamento come un flusso di osservabili.\n   *\n   * @type {*}\n   * @memberof SensorsListComponent\n   */\n  loading$ = this.service.loading$;\n\n  /**\n   * Definisce una funzione di tracciamento (track by) per la direttiva ngFor per migliorare le prestazioni di rendering.\n   * Utilizza l'ID del sensore come identificatore univoco.\n   *\n   * @memberof SensorsListComponent\n   */\n  trackBySensorId: TrackByFunction = (index: number, sensor: SensorStatus) => sensor.id;\n\n  /**\n   * Cambia lo stato di un sensore invocando il metodo `toggleSensor` dell'`AppService`.\n   *\n   * @param {SensorStatus} sensor L'oggetto del sensore da attivare/disattivare.\n   * @memberof SensorsListComponent\n   */\n  toggleSensor(sensor: SensorStatus) {\n    this.service.toggleSensor(sensor);\n  }\n}\n\n    \n\n    \n        \n    \n  \n\n    \n\n    \n                \n                    ./sensors-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SensorsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Store.html":{"url":"interfaces/Store.html","title":"interface - Store","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che rappresenta lo store dello stato dell'applicazione.\nContiene array di lampade, sensori e aree,\ninoltre si interessa di segnalare se i dati sono attualmente in caricamento o se si tratta del primo caricamento.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areas\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            firstLoad\n                                        \n                                \n                                \n                                        \n                                            lamps\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            sensors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areas:         AreaStatus[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaStatus[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Un array di stati delle aree che rappresentano lo stato delle aree nell'applicazione.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Una stringa che rappresenta un messaggio di errore in caso di errori.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Un indicatore che segnala se si tratta del primo caricamento dei dati.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lamps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lamps:         LampStatus[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LampStatus[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Un array di stati delle lampade che rappresentano lo stato delle lampade nell'applicazione.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Un indicatore che segnala se i dati sono attualmente in caricamento o ottenuti dall'API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sensors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sensors:         SensorStatus[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SensorStatus[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Un array di stati dei sensori che rappresentano lo stato dei sensori nell'applicazione.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatusCode } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, delay, map, Observable, of, switchMap, tap } from \"rxjs\";\nimport { LampStatus, SensorStatus, AreaStatus } from \"../model\";\nimport { ApiService } from \"./api.service\";\n\n/**\n * Interfaccia che rappresenta lo store dello stato dell'applicazione.\n * Contiene array di lampade, sensori e aree,\n * inoltre si interessa di segnalare se i dati sono attualmente in caricamento o se si tratta del primo caricamento.\n */\ninterface Store {\n  /**\n   * Un array di stati delle lampade che rappresentano lo stato delle lampade nell'applicazione.\n   */\n  lamps: LampStatus[];\n  /**\n   * Un array di stati dei sensori che rappresentano lo stato dei sensori nell'applicazione.\n   */\n  sensors: SensorStatus[];\n  /**\n   * Un array di stati delle aree che rappresentano lo stato delle aree nell'applicazione.\n   */\n  areas: AreaStatus[];\n  /**\n   * Un indicatore che segnala se i dati sono attualmente in caricamento o ottenuti dall'API.\n   */\n  loading: boolean;\n  /**\n   * Un indicatore che segnala se si tratta del primo caricamento dei dati.\n   */\n  firstLoad: boolean;\n  /**\n   * Una stringa che rappresenta un messaggio di errore in caso di errori.\n   */\n  error: string;\n}\n\n\n/**\n * Stato iniziale per lo store dell'applicazione.\n * Contiene array vuoti per lampade, sensori e aree,\n * e imposta a false gli indicatori di caricamento e primo caricamento.\n */\nconst initialState: Store = {\n  lamps: [],\n  sensors: [],\n  areas: [],\n  loading: false,\n  firstLoad: true,\n  error: null\n};\n\n/**\n * Il servizio principale per la gestione dello stato dell'applicazione.\n * Gestisce le operazioni relative alle lampade, ai sensori e alle aree,\n * compresa la lettura dei dati dall'API, la gestione degli errori e l'aggiornamento dello stato.\n */\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AppService {\n\n  /**\n   * Inietta ApiService.\n   */\n  api = inject(ApiService);\n\n  /**\n   * Definisce lo store principale dello stato dell'applicazione come BehaviorSubject.\n   * Si tratta di un Subject RxJS che può emettere nuovi valori ai suoi sottoscrittori\n   * e ha la caratteristica di restituire sempre l'ultimo valore emesso ai nuovi sottoscrittori.\n   * Viene inizializzato qui con uno stato iniziale.\n   */\n\n  $store = new BehaviorSubject(initialState);\n  /**\n     * Definisce selettori per diverse parti dello state.\n     */\n  readonly lamps$ = this.$store.pipe(map(state => state.lamps));\n  readonly sensors$ = this.$store.pipe(map(state => state.sensors));\n  readonly areas$ = this.$store.pipe(map(state => state.areas));\n  readonly error$ = this.$store.pipe(map(state => state.error));\n  readonly loading$ = this.$store.pipe(map(state => state.loading), delay(0));\n  readonly firstLoad$ = this.$store.pipe(map(state => state.firstLoad));\n\n  /**\n * Carica i dati delle lampade dall'API.\n * Aggiorna lo stato con i nuovi dati, gestisce eventuali errori,\n * e interrompe l'animazione di caricamento una volta completato.\n */\npublic loadData() {\n  // Avvia l'animazione di caricamento.\n  this.startLoading();\n\n  // Chiama il metodo getAllLamps$() del servizio api per ottenere i dati delle lampade.\n  // Questo metodo restituisce un Observable che emette i dati delle lampade.\n  this.api.getAllLamps$().subscribe({\n    // Callback \"next\": Eseguita quando nuovi dati (lampade) sono emessi dall'Observable.\n    next: (lamps) => {\n      // Aggiorna lo stato dell'applicazione con i nuovi dati utilizzando this.$store.next(...).\n      // Viene creato un nuovo oggetto di stato tramite il spreading dello stato esistente (this.$store.value)\n      // e sostituendo la proprietà \"lamps\" con i nuovi dati (\"lamps\").\n      // Imposta anche la proprietà \"firstLoad\" a \"false\" per indicare che non è il primo caricamento.\n      this.$store.next({\n        ...this.$store.value,\n        lamps,\n        firstLoad: false\n      });\n    },\n    // Callback \"error\": Eseguita in caso di errore durante il recupero dei dati.\n    error: (error) => {\n      // Gestisce l'errore chiamando il metodo \"manageError(error)\".\n      // Il metodo \"manageError\" aggiorna lo stato con un messaggio di errore appropriato\n      // basato sul codice di stato HTTP dell'errore.\n      // Successivamente, chiama \"this.stopLoading()\" per interrompere l'animazione di caricamento.\n      this.manageError(error);\n      this.stopLoading();\n    },\n    // Callback \"complete\": Eseguita quando l'Observable è completato,\n    // indicando che il processo di caricamento dei dati è terminato (con successo o con un errore).\n    complete: () => {\n      // Chiama \"this.stopLoading()\" per interrompere l'animazione di caricamento.\n      this.stopLoading();\n    }\n  });\n}\n\n  /**\n     * Carica i dati dei sensori dall'API.\n     * Aggiorna lo stato con i nuovi dati, gestisce eventuali errori,\n     * e interrompe l'animazione di caricamento una volta completato.\n     */\n  public loadDataSensors() {\n    this.startLoading();\n    this.api.getAllSensors$()\n      .subscribe({\n        next: (sensors) => {\n          this.$store.next({\n            ...this.$store.value,\n            sensors,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n  /**\n     * Carica i dati delle aree dall'API.\n     * Aggiorna lo stato con i nuovi dati, gestisce eventuali errori,\n     * e interrompe l'animazione di caricamento una volta completato.\n     */\n  public loadDataAreas() {\n    this.startLoading();\n    this.api.getAllAreas$()\n      .subscribe({\n        next: (areas) => {\n          this.$store.next({\n            ...this.$store.value,\n            areas,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n\n\n  /**\n * Avvia l'animazione di caricamento.\n */\nprivate startLoading() {\n  // Aggiorna lo stato dell'applicazione per indicare che il caricamento dei dati è in corso.\n  // Viene creato un nuovo oggetto di stato tramite lo spreading dello stato esistente (this.$store.value)\n  // e impostando la proprietà \"loading\" a \"true\".\n  this.$store.next({\n    ...this.$store.value,\n    loading: true\n  });\n}\n\n  /**\n     * Interrompe l'animazione di caricamento.\n     */\n  private stopLoading() {\n    this.$store.next({\n      ...this.$store.value,\n      loading: false\n    });\n  }\n  /**\n     * Aggiorna lo stato di una lampada come in attesa.\n     * Questo viene utilizzato per mostrare che lo stato di una lampada sta cambiando.\n     */\n  private setLampPending(lamp: LampStatus, pending: boolean) {\n    this.$store.next({\n      ...this.$store.value,\n      lamps: this.$store.value.lamps.map(l => l.id === lamp.id ? { ...l, pending } : l)\n    });\n  }\n  /**\n     * Inverte lo stato di una lampada.\n     * Chiama l'API per aggiornare lo stato della lampada,\n     * quindi ricarica i dati delle lampade per riflettere le modifiche.\n     */\n  public toggleLamp(lamp: LampStatus) {\n    this.setLampPending(lamp, true);\n    this.api.toggleLamp$(lamp.id, lamp.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n  /**\n     * Inverte lo stato di un sensore.\n     * Chiama l'API per aggiornare lo stato del sensore,\n     * quindi ricarica i dati dei sensori per riflettere le modifiche.\n     */\n  public toggleSensor(sensor: SensorStatus) {\n    this.setLampPending(sensor, true);\n    this.api.toggleLamp$(sensor.id, sensor.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n\n  /**\n     * Gestisce gli errori.\n     * Aggiorna lo stato con un messaggio di errore appropriato in base al codice di stato HTTP.\n     */\n\n  private manageError(error: any) {\n    if (error.status === HttpStatusCode.NotFound) {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Non trovato\"\n      });\n    } else {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Errore\"\n      });\n    }\n  }\n  /**\n  * Aggiunge una nuova lampada con l'alias fornito.\n  * Avvia l'animazione di caricamento, chiama l'API per aggiungere la lampada,\n  * quindi interrompe l'animazione di caricamento e ricarica i dati delle lampade.\n  * @param alias L'alias della nuova lampada.\n  * @returns Un osservabile che emette un valore booleano che indica se l'aggiunta della lampada è stata eseguita con successo.\n  */\n  public addLamp$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addLamp$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n   * Aggiunge un nuovo sensore con l'alias, la posizione geografica e l'azione forniti.\n   * Avvia l'animazione di caricamento, chiama l'API per aggiungere il sensore,\n   * quindi interrompe l'animazione di caricamento e ricarica i dati dei sensori.\n   * @param alias L'alias del nuovo sensore.\n   * @param geoPos La posizione geografica del nuovo sensore.\n   * @param actionRange L'azione del nuovo sensore.\n   * @returns Un osservabile che emette un valore booleano che indica se l'aggiunta del sensore è stata eseguita con successo.\n   */\n\n  public addSensor$(alias: string, geoPos: string, actionRange: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addSensor$(alias, geoPos, actionRange)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n * Aggiunge una nuova area con l'alias fornito.\n * Avvia l'animazione di caricamento, chiama l'API per aggiungere l'area,\n * quindi interrompe l'animazione di caricamento e ricarica i dati delle aree.\n * @param alias L'alias della nuova area.\n * @returns Un osservabile che emette un valore booleano che indica se l'aggiunta dell'area è stata eseguita con successo.\n */\n  public addArea$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => {\n          this.startLoading()\n        }),\n        switchMap(() => this.api.addArea$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadDataAreas())\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/area-button/area-button.component.ts\n            \n            component\n            AreaButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/lamp-button/lamp-button.component.ts\n            \n            component\n            LampButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/sensor-button/sensor-button.component.ts\n            \n            component\n            SensorButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/feature/area/area.component.ts\n            \n            component\n            AreaComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/areas-list/areas-list.component.ts\n            \n            component\n            AreasListComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/feature/authentication/authentication.component.ts\n            \n            component\n            AuthenticationComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/feature/lamp/lamp.component.ts\n            \n            component\n            LampComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/lamps-list/lamps-list.component.ts\n            \n            component\n            LampsListComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/private-area/private-area.component.ts\n            \n            component\n            PrivateAreaComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/feature/sensor/sensor.component.ts\n            \n            component\n            SensorComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/sensors-list/sensors-list.component.ts\n            \n            component\n            SensorsListComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            function\n            AuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model.ts\n            \n            interface\n            AreaStatus\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model.ts\n            \n            interface\n            LampStatus\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model.ts\n            \n            interface\n            SensorStatus\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            injectable\n            AppService\n            \n                76 %\n                (16/21)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            interface\n            Store\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                75 %\n                (6/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.3\n        \n            @angular/common : ^16.0.3\n        \n            @angular/compiler : ^16.0.3\n        \n            @angular/core : ^16.0.3\n        \n            @angular/forms : ^16.0.3\n        \n            @angular/platform-browser : ^16.0.3\n        \n            @angular/platform-browser-dynamic : ^16.0.3\n        \n            @angular/router : ^16.0.3\n        \n            bootstrap : ^5.2.3\n        \n            @popperjs/core : ^2.11.8\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthGuard   (src/.../auth.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthGuard\n                        \n                    \n                \n            \n            \n                \nAuthGuard()\n                \n            \n\n\n\n\n            \n                \n                    Custom authentication guard per proteggere le rotte in base allo stato di autenticazione dell'utente.\nSe l'utente non è autenticato, viene reindirizzato alla pagina di login.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHttp\nThis project was generated with Angular CLI version 15.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initialState   (src/.../app.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/app.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Store\n\n                    \n                \n                \n                    \n                        Default value : {\n  lamps: [],\n  sensors: [],\n  areas: [],\n  loading: false,\n  firstLoad: true,\n  error: null\n}\n                    \n                \n\n            \n                \n                    Stato iniziale per lo store dell'applicazione.\nContiene array vuoti per lampade, sensori e aree,\ne imposta a false gli indicatori di caricamento e primo caricamento.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
