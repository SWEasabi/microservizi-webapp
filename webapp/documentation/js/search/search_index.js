var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.303,1,1.753]],["body/injectables/ApiService.html",[0,1.547,1,2.672,2,1.614,3,0.324,4,0.283,5,0.283,6,2.113,7,0.75,8,1.876,9,4.719,10,3.797,11,4.719,12,2.327,13,1.04,14,1.04,15,1.04,16,0.283,17,1.288,18,2.636,19,2.636,20,2.636,21,4.719,22,4.719,23,4.719,24,2.327,25,2.113,26,2.548,27,5.5,28,1.335,29,2.548,30,3.675,31,3.675,32,3.048,33,2.833,34,0.036,35,0.719,36,1.209,37,2.106,38,3.168,39,1.547,40,0.98,41,2.636,42,2.314,43,2.548,44,5.212,45,2.123,46,0.75,47,2.288,48,1.895,49,1.437,50,1.753,51,3.749,52,5.212,53,4.323,54,2.636,55,2.548,56,0.939,57,1.753,58,2.636,59,2.315,60,2.315,61,2.548,62,0.918,63,1.876,64,1.701,65,2.636,66,1.876,67,1.753,68,2.548,69,2.661,70,1.389,71,2.548,72,2.548,73,3.675,74,4.719,75,2.548,76,3.675,77,0.849,78,3.675,79,1.701,80,3.675,81,3.675,82,3.048,83,2.636,84,3.675,85,0.776,86,1.827,87,1.443,88,0.411,89,0.978,90,1.614,91,1.073,92,0.324,93,0.458,94,2.808,95,2.548,96,3.402,97,2.548,98,2.548,99,2.548,100,2.548,101,2.548,102,2.548,103,1.614,104,2.548,105,2.548,106,2.548,107,0.021,108,0.021]],["title/components/AppComponent.html",[109,0.128,110,0.618]],["body/components/AppComponent.html",[3,0.5,4,0.437,5,0.437,7,0.565,13,0.784,14,0.784,15,0.784,34,0.036,35,0.708,46,0.565,53,3.26,56,0.634,62,0.634,70,1.048,85,0.707,88,0.634,91,2.373,92,0.5,93,0.707,107,0.028,108,0.028,109,0.245,110,1.158,111,1.195,112,1.149,113,1.149,114,1.149,115,1.149,116,3.26,117,2.514,118,1.149,119,1.837,120,1.837,121,1.439,122,5.377,123,1.439,124,4.924,125,2.819,126,3.931,127,3.931,128,3.931,129,2.489,130,3.931,131,3.26,132,2.226,133,0.954,134,1.439,135,1.439,136,1.149,137,1.647,138,1.149,139,1.149,140,0.954,141,1.572,142,0.954,143,1.439,144,0.954,145,1.439,146,0.954,147,1.149,148,0.954,149,0.954,150,1.149,151,0.954,152,0.954,153,0.784,154,0.954,155,0.954,156,1.149,157,0.954,158,1.149,159,1.149]],["title/modules/AppModule.html",[160,2.221,161,1.961]],["body/modules/AppModule.html",[3,0.442,4,0.387,5,0.387,34,0.037,46,0.655,85,1.051,87,1.97,88,0.561,92,0.442,93,0.626,107,0.026,108,0.026,110,1.224,133,0.844,153,0.909,160,2.495,161,3.701,162,2.495,163,2.203,164,4.211,165,3.641,166,3.777,167,3.777,168,2.885,169,2.885,170,2.885,171,3.777,172,2.885,173,1.97,174,3.479,175,3.777,176,4.554,177,4.554,178,3.777,179,2.495,180,4.554,181,3.479,182,2.203,183,2.267,184,1.61,185,3.479,186,3.266,187,3.479,188,1.776,189,6.049,190,5.928,191,3.479,192,2.495,193,3.479,194,5.928,195,3.479,196,3.479,197,3.479,198,4.554,199,3.479,200,2.495,201,5.077,202,3.479,203,3.479,204,3.479,205,3.479,206,3.479,207,3.479,208,2.495,209,3.479,210,3.479,211,3.479,212,3.479,213,3.479,214,3.479,215,2.495,216,3.479,217,3.479,218,3.479,219,3.479,220,4.554,221,4.554,222,4.554,223,2.203,224,3.479,225,3.479,226,1.017,227,3.479]],["title/injectables/AppService.html",[0,1.303,228,0.991]],["body/injectables/AppService.html",[0,0.95,1,1.637,2,0.862,3,0.173,4,0.151,5,0.151,7,0.484,8,1.152,10,3.529,12,1.429,13,1.015,14,0.996,15,0.996,16,0.151,17,0.791,18,1.619,19,1.619,20,1.619,24,1.429,28,1.342,33,2.41,34,0.036,35,0.612,36,0.849,37,1.792,38,1.429,40,0.602,41,1.619,42,2.064,45,2.031,46,0.732,47,2.085,48,1.68,49,1.235,50,0.791,51,2.361,54,1.619,56,0.868,57,1.561,58,1.619,59,1.725,60,1.725,62,0.892,63,1.152,64,1.556,65,2.412,66,1.717,67,1.306,77,0.931,83,3.709,85,0.671,86,0.977,87,0.771,88,0.22,89,0.523,90,0.862,91,0.573,92,0.173,93,0.245,94,1.903,96,2.361,103,0.862,107,0.013,108,0.013,117,2.173,125,0.977,132,1.278,153,0.996,188,0.695,228,0.722,229,0.862,230,2.789,231,2.13,232,1.979,233,1.872,234,1.872,235,1.872,236,2.732,237,2.204,238,4.052,239,1.872,240,0.325,241,2.358,242,3.076,243,2.537,244,3.313,245,4.713,246,2.412,247,2.412,248,2.789,249,2.257,250,2.257,251,2.789,252,2.789,253,1.619,254,1.362,255,2.549,256,2.882,257,3.694,258,4.024,259,3.95,260,4.29,261,3.415,262,2.276,263,2.494,264,1.172,265,3.194,266,2.273,267,2.052,268,2.052,269,1.362,270,1.362,271,1.872,272,1.362,273,2.695,274,1.561,275,2.616,276,1.773,277,1.362,278,1.362,279,1.872,280,1.362,281,1.872,282,2.073,283,1.619,284,1.619,285,1.872,286,2.276,287,1.362,288,2.522,289,1.872,290,2.398,291,1.872,292,1.362,293,1.362,294,1.619,295,1.362,296,2.13,297,2.789,298,2.789,299,1.619,300,1.362,301,1.717,302,1.081,303,1.872,304,1.362,305,2.789,306,1.872,307,2.398,308,1.338,309,1.872,310,1.872,311,1.619,312,2.789,313,1.872,314,1.872,315,1.278,316,1.429,317,1.278,318,1.619,319,2.073,320,1.872,321,1.362,322,1.013,323,4.142,324,1.872,325,1.362,326,1.872,327,1.362,328,1.872,329,1.362,330,1.872,331,1.362,332,1.872,333,1.872,334,1.872,335,1.872,336,1.872,337,1.362,338,1.872,339,1.362,340,2.789,341,0.977,342,2.789,343,2.789,344,3.53,345,1.13,346,0.791,347,1.152,348,1.619,349,1.13,350,1.619,351,1.831,352,2.398,353,1.872,354,1.13,355,1.13,356,0.977,357,1.13,358,0.977,359,0.862,360,2.545,361,0.862,362,0.938,363,3.334,364,1.13,365,2.361,366,3.092,367,3.694,368,3.694,369,2.398,370,3.334,371,1.13,372,1.13,373,1.13,374,1.13,375,0.977,376,1.872,377,1.13,378,1.13,379,1.13,380,2.789,381,1.13,382,1.13,383,1.13,384,1.13,385,1.13,386,1.13,387,2.073,388,2.398,389,1.13,390,2.398,391,1.13,392,1.13,393,1.13]],["title/components/AreaButtonComponent.html",[109,0.128,140,0.751]],["body/components/AreaButtonComponent.html",[3,0.351,4,0.307,5,0.307,7,0.398,13,0.552,14,0.552,15,0.552,16,0.307,28,0.945,34,0.036,35,0.649,36,0.9,40,1.038,46,0.862,49,0.945,50,1.877,56,0.446,62,0.446,70,0.737,77,0.881,85,0.964,88,0.446,89,1.495,92,0.351,93,0.497,107,0.022,108,0.022,109,0.247,110,0.552,111,0.945,112,0.808,113,0.808,114,0.808,115,0.808,118,0.808,119,1.753,120,1.753,121,1.138,123,1.138,133,0.671,134,1.138,135,1.138,136,0.808,137,1.431,138,0.808,139,0.808,140,1.188,141,1.318,142,0.671,143,1.138,144,0.671,145,1.138,146,0.671,147,0.808,148,0.671,149,0.671,150,0.808,151,0.671,152,0.671,153,0.552,154,0.671,155,0.671,156,0.808,157,0.671,158,0.808,159,0.808,226,1.318,237,2.112,240,0.56,242,2.554,262,3.033,264,0.994,275,2.206,302,0.671,308,2.266,315,3.182,317,2.773,362,0.859,394,3.741,395,3.234,396,1.751,397,3.946,398,2.206,399,2.793,400,3.841,401,2.773,402,3.234,403,2.206,404,2.793,405,2.793,406,2.793,407,2.793,408,1.988,409,2.206,410,1.495,411,2.206,412,2.206,413,1.988,414,1.988,415,1.247,416,1.443,417,3.234,418,2.793,419,3.702,420,2.793,421,2.293,422,2.793,423,2.793,424,1.64,425,2.793,426,2.293,427,2.793,428,2.793,429,1.802,430,2.793,431,0.808,432,0.969,433,0.885,434,0.969,435,1.411,436,1.982,437,1.982,438,3.511,439,2.554,440,1.751,441,1.982,442,2.554,443,1.982,444,1.982,445,1.982,446,2.5,447,2.856,448,1.751,449,1.751,450,1.565,451,1.982,452,1.982,453,1.565,454,1.751,455,1.751,456,1.751,457,1.982,458,1.982,459,1.565,460,1.565,461,1.982,462,1.565,463,2.793,464,1.565,465,2.293,466,1.982,467,1.982,468,3.741,469,3.231,470,2.293,471,1.751,472,2.293,473,3.511,474,2.293,475,2.293,476,2.293,477,2.293,478,1.982,479,2.293,480,0.969,481,2.293]],["title/components/AreaComponent.html",[109,0.128,142,0.751]],["body/components/AreaComponent.html",[3,0.338,4,0.296,5,0.296,7,0.382,13,0.531,14,0.531,15,1.015,16,0.296,17,1.328,18,3.792,28,1.283,34,0.036,35,0.545,39,2.342,40,1.53,45,1.949,46,0.814,47,2.089,48,0.851,49,0.92,56,0.429,62,0.429,69,1.934,70,0.709,77,0.682,85,0.979,88,0.429,91,2.026,92,0.338,93,0.478,107,0.021,108,0.021,109,0.234,110,0.531,111,0.92,112,0.777,113,0.777,114,0.777,115,0.777,118,0.777,119,1.742,120,1.742,121,1.107,123,1.107,133,0.645,134,1.107,135,1.107,136,0.777,137,1.406,138,0.777,139,0.777,140,0.645,141,1.29,142,1.168,143,1.107,144,0.645,145,1.107,146,0.645,147,0.777,148,0.645,149,0.645,150,0.777,151,0.645,152,0.645,153,0.531,154,0.645,155,0.645,156,0.777,157,0.645,158,0.777,159,0.777,182,2.795,183,1.595,184,1.23,188,1.357,226,1.406,228,1.859,232,1.328,240,0.545,243,2.518,255,2.456,264,1.199,267,2.456,268,2.456,274,1.686,276,1.02,302,1.234,322,0.932,347,1.934,362,0.835,415,1.213,416,1.413,431,0.777,432,0.932,433,0.851,434,0.932,480,1.328,482,2.205,483,3.585,484,3.451,485,1.753,486,2.725,487,3.451,488,3.451,489,3.047,490,2.795,491,2.795,492,3.662,493,3.143,494,3.348,495,2.795,496,3.081,497,2.659,498,2.399,499,1.753,500,2.399,501,2.717,502,2.659,503,1.934,504,1.753,505,2.717,506,2.659,507,3.143,508,2.659,509,3.047,510,2.399,511,2.399,512,2.399,513,2.399,514,2.659,515,2.399,516,2.795,517,3.143,518,2.659,519,1.684,520,1.506,521,1.23,522,2.205,523,2.659,524,2.659,525,2.205,526,1.907,527,1.684,528,2.717,529,2.717,530,2.717,531,2.717]],["title/interfaces/AreaStatus.html",[50,1.085,346,1.085]],["body/interfaces/AreaStatus.html",[3,0.426,4,0.373,5,0.373,7,0.482,16,0.373,34,0.036,35,0.833,36,0.995,37,2.098,42,2.341,46,0.877,47,2.284,50,1.557,56,0.804,57,1.175,59,2.056,60,2.056,62,0.97,63,2.269,64,2.056,66,2.269,67,1.175,77,1.128,79,2.754,92,0.634,107,0.025,108,0.025,240,0.639,263,2.269,266,2.545,286,2.823,288,1.898,301,2.269,346,1.747,410,1.913,424,2.235,429,2.056,532,1.551,533,2.122,534,4.4,535,3.667,536,3.279,537,4.153,538,3.807,539,3.575,540,3.575,541,2.404,542,3.187]],["title/components/AreasListComponent.html",[109,0.128,144,0.751]],["body/components/AreasListComponent.html",[3,0.345,4,0.302,5,0.302,7,0.39,8,2.616,13,0.541,14,0.541,15,1.223,16,0.427,17,1.347,28,1.244,34,0.036,35,0.553,36,0.541,39,1.618,40,1.419,46,0.553,48,0.868,49,1.178,50,1.564,56,0.438,62,0.438,70,1.459,77,0.691,79,1.778,85,1.006,88,0.438,89,1.475,92,0.345,93,0.488,107,0.022,108,0.022,109,0.248,110,0.541,111,0.933,112,0.792,113,0.792,114,0.792,115,0.792,118,0.792,119,1.747,120,1.747,121,1.123,123,1.123,129,2.433,131,2.249,132,2.527,133,0.658,134,1.123,135,1.123,136,0.792,137,1.419,138,0.792,139,0.792,140,1.244,141,1.304,142,0.658,143,1.123,144,1.178,145,1.123,146,0.658,147,0.792,148,0.658,149,0.658,150,0.792,151,0.658,152,0.658,153,0.541,154,0.658,155,0.658,156,0.792,157,0.658,158,0.792,159,0.792,215,3.817,226,1.304,228,1.79,231,2.433,232,1.347,236,2.532,237,1.863,240,0.553,247,2.756,264,1.07,273,2.433,274,1.347,276,1.041,302,1.178,322,1.564,351,2.433,362,0.847,395,1.945,398,2.176,401,2.527,403,2.176,408,1.962,409,2.176,410,1.475,411,2.176,412,2.176,413,1.962,414,1.962,415,1.23,416,1.428,431,0.792,432,0.95,433,1.428,434,0.95,435,1.384,480,1.347,499,1.778,503,1.962,504,1.778,521,1.255,532,1.778,543,4.414,544,1.717,545,3.187,546,2.176,547,3.245,548,3.201,549,2.756,550,4.463,551,3.074,552,2.249,553,3.187,554,2.756,555,3.187,556,3.843,557,2.249,558,3.187,559,3.482,560,3.187,561,3.187,562,2.756,563,2.249,564,2.249,565,3.201,566,2.249,567,3.187,568,3.187,569,2.756,570,3.187,571,2.712,572,1.945,573,2.712,574,1.945,575,2.712,576,2.712,577,2.712,578,1.945,579,2.712,580,2.712,581,2.712]],["title/injectables/AuthService.html",[0,1.303,582,1.961]],["body/injectables/AuthService.html",[0,1.748,2,1.92,3,0.385,4,0.337,5,0.337,7,0.681,12,2.63,16,0.337,17,1.455,25,3.929,28,1.37,32,3.445,33,1.717,34,0.036,35,0.436,36,0.605,37,1.276,42,2.206,48,1.866,49,1.295,51,2.63,69,2.12,82,3.445,85,0.747,88,0.489,90,1.92,91,1.276,92,0.385,93,0.992,94,2.12,96,3.227,107,0.023,108,0.023,111,1.008,153,0.945,173,2.885,223,3.227,240,0.597,256,2.978,263,2.934,264,1.177,265,3.654,266,2.601,276,1.594,302,0.736,308,1.403,360,2.63,362,0.915,387,2.174,582,3.574,583,2.515,584,3.445,585,4.122,586,4.153,587,5.095,588,4.153,589,4.737,590,5.095,591,5.095,592,5.095,593,4.226,594,4.153,595,3.032,596,4.572,597,3.445,598,4.226,599,4.226,600,3.032,601,5.095,602,3.504,603,4.226,604,3.032,605,3.654,606,4.153,607,4.767,608,3.032,609,5.095,610,4.572,611,3.032,612,4.153,613,4.153,614,3.953,615,4.153,616,4.153,617,3.032,618,3.032,619,4.737,620,4.153,621,3.032,622,3.032,623,3.032,624,3.032]],["title/components/AuthenticationComponent.html",[109,0.128,146,0.751]],["body/components/AuthenticationComponent.html",[3,0.277,4,0.243,5,0.243,7,0.314,10,1.382,13,0.436,14,0.436,15,0.436,16,0.365,17,1.149,28,1.241,34,0.037,35,0.472,36,0.436,39,2.215,40,1.462,42,1.259,46,0.709,48,1.05,56,0.352,62,0.352,69,1.674,70,0.582,85,0.947,87,1.236,88,0.352,92,0.277,93,0.393,107,0.018,108,0.018,109,0.223,110,0.436,111,0.796,112,0.638,113,0.638,114,0.638,115,0.638,118,0.638,119,1.683,120,1.683,121,0.958,123,0.958,129,2.077,133,0.53,134,0.958,135,0.958,136,0.638,137,1.28,138,0.638,139,0.638,140,0.53,141,1.151,142,0.53,143,0.958,144,0.53,145,0.958,146,1.063,147,0.638,148,0.53,149,0.53,150,0.638,151,0.53,152,0.53,153,0.984,154,0.53,155,0.53,156,0.638,157,0.53,158,0.638,159,0.638,175,3.267,183,1.38,184,1.01,188,1.114,223,3.823,226,1.28,237,1.259,240,0.472,241,1.674,243,2.027,264,0.965,268,2.236,274,1.149,276,1.259,282,2.352,302,1.063,318,2.352,322,1.792,359,2.077,362,0.723,365,1.382,415,1.05,416,1.261,429,1.01,431,0.638,432,1.149,433,0.699,434,0.765,439,1.236,440,1.382,442,2.48,446,2.236,447,1.382,450,2.48,453,2.23,455,2.973,459,1.236,460,1.857,462,1.236,464,1.236,480,1.149,483,3.647,485,1.517,486,2.48,489,2.773,490,2.494,491,2.494,494,3.332,495,2.494,496,3.048,498,2.494,499,1.517,500,2.077,509,2.773,510,2.077,511,2.077,512,2.773,513,2.773,515,2.077,516,2.494,519,1.382,520,1.236,527,1.382,546,1.857,547,2.494,551,2.773,554,2.352,582,3.612,584,2.72,585,3.141,596,3.267,598,2.72,599,2.72,602,2.98,605,2.352,607,4.09,610,4.09,625,1.81,626,4.379,627,3.939,628,3.279,629,5.115,630,2.182,631,3.279,632,2.182,633,3.279,634,3.279,635,2.352,636,2.182,637,2.182,638,2.72,639,3.279,640,2.182,641,3.279,642,2.182,643,2.182,644,2.182,645,2.182,646,3.279,647,2.182,648,2.182,649,2.182,650,2.182,651,2.182,652,2.182,653,3.279,654,4.379,655,2.182,656,3.279,657,2.182,658,1.81,659,1.565,660,1.565,661,1.565,662,3.939,663,3.267,664,3.279,665,2.182,666,2.182,667,2.182,668,4.379,669,2.182,670,2.182,671,2.182,672,2.182,673,1.81,674,2.182,675,2.182,676,3.279,677,3.279,678,2.182,679,2.182]],["title/components/LampButtonComponent.html",[109,0.128,148,0.751]],["body/components/LampButtonComponent.html",[3,0.335,4,0.293,5,0.293,7,0.379,13,0.526,14,0.526,15,0.526,16,0.293,24,2.781,28,1.066,34,0.036,35,0.632,36,0.956,40,1.003,45,0.923,46,0.379,49,0.913,56,0.972,57,1.847,62,0.425,70,0.702,77,0.948,85,0.948,88,0.425,89,1.445,92,0.335,93,0.474,107,0.021,108,0.021,109,0.248,110,0.526,111,0.913,112,0.77,113,0.77,114,0.77,115,0.77,118,0.77,119,1.739,120,1.739,121,1.1,123,1.1,133,0.639,134,1.1,135,1.1,136,0.77,137,1.4,138,0.77,139,0.77,140,0.639,141,1.283,142,0.639,143,1.1,144,0.639,145,1.1,146,0.639,147,0.77,148,1.163,149,0.639,150,0.77,151,0.639,152,0.639,153,0.526,154,0.639,155,0.639,156,0.77,157,0.639,158,0.77,159,0.77,226,1.283,237,2.083,240,0.541,242,2.487,262,3.142,264,0.968,275,2.131,302,0.639,308,2.217,315,3.142,316,2.384,317,2.713,362,0.83,396,1.668,397,3.892,398,2.131,399,2.699,400,3.78,401,2.713,402,3.78,403,2.131,404,2.699,405,2.699,406,2.699,407,2.699,408,1.922,409,2.131,410,1.445,411,2.131,412,2.131,413,1.922,414,1.922,415,1.205,416,1.406,417,3.15,418,2.699,419,3.635,420,2.699,421,2.185,422,2.699,423,2.699,424,1.584,425,2.699,426,2.185,427,2.699,428,2.699,429,1.742,430,2.699,431,0.77,432,0.923,433,0.843,434,0.923,435,1.345,436,3.635,437,1.889,438,2.699,439,2.487,440,1.668,441,1.889,442,2.487,443,1.889,444,1.889,445,1.889,446,2.446,447,2.781,448,1.668,449,1.668,450,1.492,451,1.889,452,1.889,453,1.492,454,1.668,455,1.668,456,1.668,457,1.889,458,1.889,459,1.492,460,1.492,461,1.889,462,1.492,463,2.699,464,1.492,465,2.185,466,1.889,467,1.889,468,3.643,469,3.122,470,2.185,471,1.668,472,2.185,473,3.436,474,2.185,475,2.185,476,2.185,477,2.185,478,1.889,479,2.185,480,0.923,481,2.185,485,1.742,578,2.699,602,2.131,635,2.699,680,3.974,681,3.436,682,3.122,683,3.122,684,2.634,685,3.764]],["title/components/LampComponent.html",[109,0.128,149,0.751]],["body/components/LampComponent.html",[3,0.334,4,0.292,5,0.292,7,0.378,13,1.011,14,0.525,15,0.525,16,0.292,17,1.317,19,3.778,28,1.278,34,0.036,35,0.54,39,2.335,40,1.527,45,1.943,46,0.378,47,2.022,48,0.841,49,0.912,56,0.911,62,0.424,69,1.919,70,0.701,77,0.676,85,0.976,88,0.424,91,2.015,92,0.334,93,0.473,107,0.021,108,0.021,109,0.234,110,0.525,111,0.912,112,0.768,113,0.768,114,0.768,115,0.768,118,0.768,119,1.739,120,1.739,121,1.098,123,1.098,133,0.638,134,1.098,135,1.098,136,0.768,137,1.399,138,0.768,139,0.768,140,0.638,141,1.282,142,0.638,143,1.098,144,0.638,145,1.098,146,0.638,147,0.768,148,0.638,149,1.162,150,0.768,151,0.638,152,0.638,153,0.525,154,0.638,155,0.638,156,0.768,157,0.638,158,0.768,159,0.768,182,2.778,183,1.582,184,1.216,226,1.399,228,1.89,232,1.317,240,0.54,243,2.51,255,2.444,264,1.195,267,2.444,268,2.444,274,1.678,276,1.009,302,1.229,322,1.9,347,1.919,362,0.828,365,1.665,415,1.203,416,1.404,431,0.768,432,0.921,433,0.841,434,0.921,480,1.317,483,3.575,484,3.433,485,1.739,486,2.711,487,3.433,488,3.433,489,3.031,490,2.778,491,2.778,494,3.512,495,2.778,496,3.197,498,2.38,499,1.739,500,2.38,503,1.919,504,1.739,505,2.695,509,3.031,510,2.38,511,2.38,512,2.38,513,2.38,515,2.38,516,2.778,519,1.665,520,1.489,521,1.216,526,2.695,527,1.665,528,2.695,529,2.695,530,2.695,531,2.695,686,2.18,687,4.387,688,3.758,689,2.629,690,2.629,691,2.629,692,2.629,693,2.629,694,2.629,695,2.629,696,2.629,697,2.629]],["title/interfaces/LampStatus.html",[57,1.085,346,1.085]],["body/interfaces/LampStatus.html",[3,0.412,4,0.361,5,0.361,7,0.466,16,0.361,34,0.036,35,0.826,36,1.045,37,2.418,42,2.329,46,0.809,47,2.269,50,1.136,56,0.954,57,1.523,59,2.011,60,2.011,62,0.964,63,2.219,64,2.011,66,2.219,67,1.136,77,1.13,79,2.736,92,0.623,107,0.024,108,0.024,240,0.625,263,2.674,266,2.789,286,3.252,288,2.776,301,2.219,346,1.718,410,2.097,424,2.205,429,2.011,532,1.5,533,2.053,534,4.422,535,3.637,536,3.252,537,4.119,538,3.756,539,3.917,540,3.917,541,2.325,542,3.117]],["title/components/LampsListComponent.html",[109,0.128,151,0.751]],["body/components/LampsListComponent.html",[3,0.326,4,0.285,5,0.285,7,0.531,8,2.561,13,1.215,14,0.512,15,0.512,16,0.411,17,1.294,24,2.741,28,1.268,33,1.453,34,0.036,35,0.622,36,0.737,37,1.08,39,1.993,40,1.393,46,0.369,48,1.182,49,1.149,56,0.941,57,1.931,62,0.414,70,1.435,77,0.94,79,1.709,85,0.991,88,0.414,89,1.418,92,0.326,93,0.462,94,1.31,107,0.021,108,0.021,109,0.244,110,0.512,111,0.896,112,0.75,113,0.75,114,0.75,115,0.75,118,0.75,119,1.732,120,1.732,121,1.079,123,1.079,129,2.339,132,2.092,133,0.623,134,1.079,135,1.079,136,0.75,137,1.383,138,0.75,139,0.75,140,0.623,141,1.265,142,0.623,143,1.079,144,0.623,145,1.079,146,0.623,147,0.75,148,1.218,149,0.623,150,0.75,151,1.149,152,0.623,153,0.512,154,0.623,155,0.623,156,0.75,157,0.623,158,0.75,159,0.75,200,3.861,226,1.265,228,1.823,231,2.339,232,1.294,236,2.491,237,1.817,240,0.531,246,2.649,264,1.044,273,2.339,274,1.294,276,1.418,294,1.84,296,3.489,302,1.149,322,1.517,351,2.339,362,0.814,375,1.84,398,2.092,401,2.092,403,2.092,408,1.886,409,2.092,410,1.418,411,2.092,412,2.092,413,1.886,414,1.886,415,1.182,416,1.385,431,0.75,432,0.899,433,1.385,434,0.899,435,1.31,480,1.294,499,2.418,503,1.886,504,1.709,521,1.187,532,1.709,544,1.625,545,3.064,546,2.092,547,3.177,548,3.104,549,2.649,551,2.998,552,2.128,553,3.064,554,2.649,555,3.064,557,2.128,558,3.064,559,3.395,560,3.064,561,3.064,562,2.649,563,2.128,564,2.128,565,3.104,566,2.128,567,3.064,568,3.064,569,2.649,570,3.064,572,1.84,574,1.84,681,1.84,698,4.466,699,4.328,700,2.566,701,3.694,702,3.064,703,3.694,704,2.566,705,2.566,706,2.566]],["title/components/PrivateAreaComponent.html",[109,0.128,152,0.751]],["body/components/PrivateAreaComponent.html",[3,0.337,4,0.295,5,0.295,7,0.382,13,0.529,14,0.529,15,0.529,16,0.421,28,0.918,34,0.036,35,0.544,39,1.593,40,1.281,46,0.814,49,0.918,56,0.428,62,0.428,64,2.04,70,0.707,77,0.681,85,0.914,88,0.428,92,0.337,93,0.477,107,0.021,108,0.021,109,0.234,110,0.529,111,0.918,112,0.775,113,0.775,114,0.775,115,0.775,117,2.454,118,0.775,119,1.741,120,1.741,121,1.106,123,1.106,133,0.644,134,1.106,135,1.106,136,0.775,137,1.405,138,0.775,139,0.775,140,0.644,141,1.289,142,0.644,143,1.106,144,0.644,145,1.106,146,0.644,147,0.775,148,0.644,149,0.644,150,0.775,151,0.644,152,1.167,153,1.145,154,0.644,155,0.644,156,0.775,157,0.644,158,1.106,159,0.775,173,1.502,184,1.228,192,3.162,226,1.405,228,1.859,232,1.685,236,2.687,240,0.544,258,1.903,264,0.834,274,1.685,302,0.918,322,1.545,341,1.903,362,0.834,415,1.211,416,1.411,424,1.593,431,0.775,432,0.93,433,0.849,434,0.93,439,1.502,442,2.142,446,3.062,448,1.68,449,1.68,450,1.502,453,2.142,454,1.68,456,1.68,459,1.502,460,2.878,462,2.992,464,2.992,467,1.903,471,2.792,473,2.713,478,1.903,485,1.751,492,3.657,493,3.138,496,1.502,503,1.931,504,1.751,521,1.228,593,3.138,603,3.138,659,1.903,660,1.903,661,2.713,663,4.216,673,2.201,707,3.657,708,2.201,709,3.783,710,3.783,711,3.783,712,4.409,713,4.409,714,4.409,715,2.653,716,3.783,717,2.653,718,5.284,719,3.783,720,3.783,721,5.284,722,3.783,723,3.138,724,2.653,725,2.653,726,2.653,727,3.783,728,2.653,729,5.559,730,2.653,731,2.653,732,2.653,733,2.653,734,2.653,735,2.201,736,2.201,737,2.653,738,3.987,739,5.082,740,5.082,741,2.653,742,2.653,743,3.783,744,2.653,745,2.653,746,2.653,747,2.653,748,2.653,749,2.653,750,2.653,751,2.653,752,2.653,753,2.653,754,2.653,755,2.653,756,5.284,757,2.653,758,2.653,759,3.783,760,3.783]],["title/components/SensorButtonComponent.html",[109,0.128,154,0.751]],["body/components/SensorButtonComponent.html",[3,0.335,4,0.293,5,0.293,7,0.379,13,0.526,14,0.526,15,0.526,16,0.293,28,1.066,34,0.036,35,0.542,36,0.957,40,1.004,42,1.012,45,0.924,46,0.632,49,0.914,56,0.425,62,0.972,67,1.848,70,0.703,77,0.949,85,0.949,88,0.425,89,1.446,92,0.335,93,0.474,107,0.021,108,0.021,109,0.25,110,0.526,111,0.914,112,0.771,113,0.771,114,0.771,115,0.771,118,0.771,119,1.74,120,1.74,121,1.101,123,1.101,133,0.64,134,1.101,135,1.101,136,0.771,137,1.401,138,0.771,139,0.771,140,0.64,141,1.284,142,0.64,143,1.101,144,0.64,145,1.101,146,0.64,147,0.771,148,0.64,149,0.64,150,0.771,151,0.64,152,0.64,153,0.526,154,1.163,155,0.64,156,0.771,157,0.64,158,0.771,159,0.771,226,1.284,237,2.083,240,0.632,242,2.488,253,3.151,262,3.143,264,0.969,267,1.346,275,2.133,302,0.64,308,2.218,315,3.143,316,2.385,317,2.715,362,0.83,396,1.67,397,3.781,398,2.133,399,2.701,400,3.781,401,2.715,402,3.781,403,2.133,404,2.701,405,2.701,406,2.701,407,2.701,408,1.923,409,2.133,410,1.446,411,2.133,412,2.133,413,1.923,414,1.923,415,1.206,416,1.406,417,3.151,418,2.701,419,3.636,420,2.701,422,2.701,423,2.701,424,1.586,425,2.701,427,2.701,428,2.701,429,1.743,430,2.701,431,0.771,432,0.924,433,0.844,434,0.924,435,1.346,436,3.636,437,1.891,438,3.438,439,2.133,440,1.67,441,1.891,442,2.488,443,1.891,444,1.891,445,1.891,446,2.243,447,2.783,448,1.67,449,1.67,450,1.493,451,1.891,452,1.891,453,2.133,454,1.67,455,1.67,456,1.67,457,1.891,458,1.891,459,2.133,460,1.493,461,1.891,462,1.493,463,2.701,464,1.493,466,1.891,485,1.743,578,2.701,602,2.133,635,2.701,658,2.187,659,1.891,660,1.891,661,2.701,682,3.124,683,3.124,735,2.187,736,2.187,761,3.438,762,3.438,763,2.637,764,2.637,765,2.637,766,2.637,767,2.637,768,2.187,769,2.637,770,3.767,771,3.124,772,3.767,773,3.767,774,3.767,775,2.637]],["title/components/SensorComponent.html",[109,0.128,155,0.751]],["body/components/SensorComponent.html",[3,0.32,4,0.28,5,0.28,7,0.362,13,0.502,14,0.993,15,0.502,16,0.28,17,1.276,20,3.722,28,1.259,34,0.036,35,0.524,39,2.307,40,1.512,45,1.921,46,0.362,47,2.054,48,0.805,49,0.884,56,0.406,59,2.401,60,2.401,62,0.901,69,1.859,70,0.671,77,0.655,85,0.963,88,0.406,91,1.975,92,0.32,93,0.453,107,0.02,108,0.02,109,0.231,110,0.502,111,0.884,112,0.735,113,0.735,114,0.735,115,0.735,118,0.735,119,1.726,120,1.726,121,1.064,123,1.064,133,0.611,134,1.064,135,1.064,136,0.735,137,1.371,138,0.735,139,0.735,140,0.611,141,1.251,142,0.611,143,1.064,144,0.611,145,1.064,146,0.611,147,0.735,148,0.611,149,0.611,150,0.735,151,0.611,152,0.611,153,0.502,154,0.611,155,1.138,156,0.735,157,0.611,158,0.735,159,0.735,182,2.71,183,1.533,184,1.164,188,2.185,226,1.371,228,1.839,232,1.276,240,0.524,243,2.477,255,2.395,264,1.097,267,2.395,268,2.395,274,1.644,276,0.966,302,1.208,311,2.611,322,0.882,347,1.859,362,0.803,415,1.165,416,1.37,431,0.735,432,0.882,433,0.805,434,0.882,480,1.276,483,3.537,484,3.364,485,1.685,486,2.656,487,3.364,488,3.364,489,2.971,490,2.71,491,2.71,494,3.286,495,2.71,496,3.031,498,2.306,499,1.685,500,2.306,501,2.611,503,1.859,504,1.685,505,2.611,507,3.02,509,2.971,510,2.306,511,2.306,512,3.286,513,3.286,515,2.306,516,2.71,517,3.02,519,1.593,520,1.425,521,1.164,522,2.087,525,2.087,526,1.804,527,1.593,528,3.722,529,3.722,530,3.722,531,2.611,723,3.891,771,3.02,776,2.087,777,4.28,778,3.641,779,2.516,780,2.516,781,2.516,782,2.516,783,2.516,784,2.516,785,2.516,786,2.516,787,2.516,788,3.641,789,3.641,790,3.641,791,3.641]],["title/interfaces/SensorStatus.html",[67,1.085,346,1.085]],["body/interfaces/SensorStatus.html",[3,0.395,4,0.346,5,0.346,7,0.447,16,0.346,34,0.036,35,0.817,36,1.108,37,2.392,42,2.364,46,0.799,47,2.25,50,1.089,56,0.774,57,1.089,59,2.57,60,2.57,62,1.007,63,2.629,64,2.383,66,2.629,67,1.48,77,1.126,79,2.712,92,0.61,107,0.024,108,0.024,240,0.607,263,2.629,266,2.749,286,3.217,288,1.76,301,2.629,346,1.682,410,2.067,424,2.267,429,2.383,532,1.438,533,1.969,534,4.434,535,3.598,536,3.217,537,4.075,538,3.692,539,3.861,540,3.861,541,3.03,542,3.692]],["title/components/SensorsListComponent.html",[109,0.128,157,0.751]],["body/components/SensorsListComponent.html",[3,0.349,4,0.305,5,0.305,7,0.395,8,2.294,13,0.548,14,1.167,15,0.548,16,0.431,17,1.359,28,1.297,33,1.555,34,0.036,35,0.646,36,1.028,37,1.156,46,0.395,48,1.241,49,1.185,56,0.443,62,0.967,67,1.873,70,1.198,77,0.698,79,1.794,85,0.926,88,0.443,89,1.054,92,0.349,93,0.494,94,1.402,107,0.022,108,0.022,109,0.213,110,0.548,111,0.941,112,0.803,113,0.803,114,0.803,115,0.803,118,0.803,119,1.751,120,1.751,121,1.133,123,1.133,133,0.667,134,1.133,135,1.133,136,1.313,137,1.427,138,0.803,139,0.803,140,0.667,141,1.313,142,0.667,143,1.133,144,0.667,145,1.133,146,0.667,147,0.803,148,0.667,149,0.667,150,0.803,151,0.667,152,0.667,153,0.548,154,1.185,155,0.667,156,0.803,157,1.403,158,0.803,159,0.803,208,3.939,226,1.133,228,1.71,232,1.359,236,2.383,237,2.051,240,0.558,253,3.501,264,1.076,274,1.359,276,1.488,296,2.455,299,2.781,301,1.979,302,1.185,322,0.963,362,0.855,408,1.979,413,1.979,414,1.979,415,1.241,416,1.438,424,2.055,431,0.803,435,1.402,480,1.359,499,1.794,501,2.781,504,1.794,521,1.271,535,2.455,536,2.196,544,1.739,546,2.196,547,2.846,548,3.223,549,2.781,551,3.092,559,2.781,562,2.781,565,3.223,569,2.781,572,1.97,574,1.97,761,1.97,762,1.97,792,4.556,793,4.494,794,2.747,795,3.877,796,3.877,797,2.747,798,3.877,799,3.877,800,3.877,801,2.747,802,4.882,803,3.877,804,2.747,805,2.747,806,3.877,807,3.877,808,2.747,809,3.877,810,3.877,811,3.877,812,3.877,813,5.344,814,2.747,815,2.747,816,2.747]],["title/interfaces/Store.html",[241,1.581,346,1.085]],["body/interfaces/Store.html",[0,1.173,1,1.577,3,0.224,4,0.196,5,0.196,7,0.254,8,0.901,10,3.278,12,1.118,13,1.113,14,1.1,15,1.1,16,0.196,34,0.037,36,0.904,38,1.118,40,0.471,41,1.266,42,1.987,45,1.932,46,0.706,47,1.941,48,1.104,49,1.15,50,1.372,51,3.278,54,1.266,56,0.816,57,1.587,58,1.266,59,1.596,60,1.596,62,0.852,63,0.901,64,1.289,65,1.998,66,1.422,67,1.493,77,0.853,83,3.4,85,0.767,86,1.266,87,1,88,0.285,89,0.678,90,1.118,91,0.743,92,0.224,93,0.318,94,2.176,96,2.48,103,1.118,107,0.016,108,0.016,117,2.643,125,1.998,132,1,153,0.781,188,0.901,228,0.565,229,1.118,230,2.31,231,1.764,232,2.005,233,1.465,234,1.465,235,1.465,236,2.726,237,2.161,238,3.932,239,1.465,240,0.401,241,2.508,242,2.564,243,2.683,244,3.712,245,4.075,246,1.266,247,1.266,248,1.465,251,1.465,252,1.465,255,2.312,256,2.474,257,3.248,258,3.786,259,3.535,260,3.932,261,3.056,262,1.953,263,2.643,264,0.863,265,3.4,266,2.42,267,1.761,268,1.761,271,1.465,273,2.699,274,1.372,275,2.564,279,1.465,281,1.465,282,2.474,283,1.266,284,1.266,285,1.465,286,1.953,288,2.217,289,1.465,290,2.861,291,1.465,294,1.266,296,1.764,297,2.31,298,2.31,299,1.266,301,1.422,303,1.465,305,2.31,306,1.465,307,2.31,308,1.289,309,1.465,310,1.465,311,1.266,312,2.31,313,1.465,314,1.465,315,1,316,1.118,317,1,318,1.266,319,1.998,320,1.465,322,0.976,323,3.756,324,1.465,326,1.465,328,1.465,330,1.465,332,1.465,333,1.465,334,1.465,335,1.465,336,1.465,338,1.465,340,3.248,341,1.266,342,3.248,343,3.248,344,3.932,345,1.465,346,1.209,347,1.761,348,2.474,349,2.31,350,2.474,351,2.868,352,3.756,353,3.248,354,2.31,355,2.31,356,1.998,357,2.31,358,1.266,359,1.118,360,2.868,361,1.118,362,1.045,363,3.756,364,1.465,365,2.699,366,3.535,367,4.075,368,4.075,369,2.861,370,3.756,371,1.465,372,1.465,373,1.465,374,1.465,375,1.266,376,2.31,377,1.465,378,1.465,379,1.465,380,3.248,381,1.465,382,1.465,383,1.465,384,1.465,385,1.465,386,1.465,387,2.474,388,2.861,389,1.465,390,2.861,391,1.465,392,1.465,393,1.465,532,0.817]],["title/coverage.html",[817,3.495]],["body/coverage.html",[0,2.251,1,2.199,5,0.432,6,3.221,34,0.036,36,0.775,45,1.361,50,1.361,57,1.361,67,1.361,107,0.027,108,0.027,109,0.258,110,0.775,116,3.221,140,0.942,142,0.942,144,0.942,146,0.942,148,0.942,149,0.942,151,0.942,152,0.942,154,0.942,155,0.942,157,0.942,186,2.785,192,2.785,200,2.785,208,2.785,215,2.785,228,1.243,229,3.387,241,1.982,346,1.967,361,2.459,394,3.221,395,2.785,396,3.387,471,4.018,480,1.361,482,3.221,533,3.387,536,2.199,543,3.221,544,3.387,582,2.459,583,3.221,625,3.221,638,3.221,680,3.221,681,2.785,686,3.221,698,3.221,707,3.221,708,3.221,761,2.785,762,2.785,776,3.221,792,3.221,817,3.221,818,3.883,819,3.883,820,5.348,821,4.887,822,5.348,823,5.904,824,3.883,825,3.883,826,3.883,827,3.883,828,3.221,829,3.883,830,3.883,831,3.883,832,3.883,833,3.883,834,3.883,835,3.883,836,3.883]],["title/dependencies.html",[163,2.356,837,1.859]],["body/dependencies.html",[34,0.036,88,0.746,107,0.03,108,0.03,163,2.928,165,3.316,178,4.508,179,3.897,184,2.139,308,2.139,431,1.351,520,2.618,768,3.835,838,4.623,839,6.258,840,4.623,841,4.623,842,4.623,843,4.623,844,4.623,845,4.623,846,4.623,847,4.623,848,4.623]],["title/miscellaneous/functions.html",[849,1.641,850,3.086]],["body/miscellaneous/functions.html",[16,0.534,34,0.031,77,0.864,107,0.031,108,0.031,183,2.023,186,4.205,223,3.043,283,3.446,585,3.986,602,3.147,605,3.446,614,3.446,828,3.985,849,3.043,850,3.985,851,4.804,852,4.804,853,4.804,854,4.804,855,4.804]],["title/index.html",[16,0.288,856,2.592,857,2.592]],["body/index.html",[4,0.465,34,0.029,35,0.601,38,2.647,45,1.465,107,0.029,108,0.029,109,0.229,117,2.134,173,2.367,255,2.134,261,2.998,284,2.998,356,2.998,410,1.604,433,1.769,486,2.367,546,2.367,597,3.467,614,2.998,702,4.585,837,2.998,858,5.115,859,4.18,860,5.528,861,3.467,862,4.18,863,4.18,864,5.115,865,5.909,866,6.089,867,4.18,868,4.18,869,4.18,870,4.18,871,4.18,872,4.18,873,5.528,874,4.18,875,5.76,876,4.18,877,4.18,878,4.18,879,5.115,880,5.115,881,5.76,882,4.18,883,5.115,884,5.115,885,4.18,886,6.013,887,4.18,888,4.18,889,4.18,890,5.115,891,4.18,892,4.18,893,4.18,894,4.18,895,5.528,896,4.18,897,4.18,898,4.18,899,2.998,900,4.18]],["title/modules.html",[162,3.022]],["body/modules.html",[34,0.032,107,0.032,108,0.032,161,3.136,162,3.552,179,3.552,901,4.953,902,4.953,903,4.953]],["title/overview.html",[899,3.022]],["body/overview.html",[2,2.954,34,0.034,107,0.031,108,0.031,110,1.242,111,1.132,133,1.132,160,3.918,161,3.855,163,2.954,164,3.87,165,3.346,166,3.87,167,3.87,168,3.87,169,3.87,170,3.87,171,4.532,172,3.87,173,2.642,446,2.382,532,2.159,738,3.87,899,3.346,904,4.665,905,4.665,906,4.665]],["title/properties.html",[240,0.535,837,1.859]],["body/properties.html",[34,0.033,107,0.032,108,0.032,240,0.715,861,4.124,907,4.972]],["title/routes.html",[183,1.774]],["body/routes.html",[34,0.032,107,0.032,108,0.032,183,2.105]],["title/miscellaneous/variables.html",[849,1.641,908,3.086]],["body/miscellaneous/variables.html",[13,1.086,14,1.086,15,1.086,16,0.515,34,0.035,36,0.924,103,2.933,107,0.031,108,0.031,117,2.364,229,2.933,232,1.623,236,2.517,241,2.777,243,2.143,244,3.901,264,1.021,302,1.124,319,3.321,347,2.364,348,3.321,350,3.321,358,3.321,359,2.933,360,3.445,361,3.445,362,1.021,849,2.933,908,3.842,909,4.631]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":446,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"overview.html":{}}}],["0.0.0",{"_index":907,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":449,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["0.3s",{"_index":731,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0.5",{"_index":734,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0.5s",{"_index":755,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0.8",{"_index":752,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["0px",{"_index":759,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["1",{"_index":738,"title":{},"body":{"components/PrivateAreaComponent.html":{},"overview.html":{}}}],["1/1",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":471,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":667,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["10px",{"_index":679,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["12",{"_index":904,"title":{},"body":{"overview.html":{}}}],["15.0.4",{"_index":862,"title":{},"body":{"index.html":{}}}],["150px",{"_index":463,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["15px",{"_index":671,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["16.0.3",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["16/21",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":447,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["1s",{"_index":749,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["2",{"_index":674,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["2.11.8",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":656,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["2s",{"_index":475,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["3",{"_index":905,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":670,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["36px",{"_index":756,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["4",{"_index":906,"title":{},"body":{"overview.html":{}}}],["4.9",{"_index":757,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["4/4",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":664,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["4px",{"_index":746,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["5",{"_index":758,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["5.2.3",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":748,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["5px",{"_index":451,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["6/6",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["72px",{"_index":760,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["75",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":743,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["85",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":726,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["absolute",{"_index":745,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["accessible",{"_index":710,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["action",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["actionrange",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["actions",{"_index":406,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["actual_component",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["add",{"_index":255,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"index.html":{}}}],["addarea",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{}}}],["addarea$(alias",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["added",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["adding",{"_index":484,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["addition",{"_index":267,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["addlamp",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/LampComponent.html":{}}}],["addlamp$(alias",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["adds",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["addsensor",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/SensorComponent.html":{}}}],["addsensor$(alias",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["aggiungi",{"_index":721,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["alias",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["alias\").value",{"_index":697,"title":{},"body":{"components/LampComponent.html":{}}}],["align",{"_index":459,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["always",{"_index":314,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["angular",{"_index":433,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"index.html":{}}}],["angular's",{"_index":633,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["angular/animations",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":431,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["angular/compiler",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":520,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":473,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["api",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["api.service",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["app",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["app.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":110,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/PrivateAreaComponent.html":{},"interfaces/Store.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application's",{"_index":306,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["appmodule",{"_index":161,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["appservice",{"_index":228,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["area",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["area'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["area.component.css",{"_index":492,"title":{},"body":{"components/AreaComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["area.component.html",{"_index":493,"title":{},"body":{"components/AreaComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["area.component.ts",{"_index":708,"title":{},"body":{"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:27",{"_index":715,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["area.component.ts:33",{"_index":717,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["area.component\\\").then",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["area.id",{"_index":575,"title":{},"body":{"components/AreasListComponent.html":{}}}],["area/private",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["areabuttoncomponent",{"_index":140,"title":{"components/AreaButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["areacomponent",{"_index":142,"title":{"components/AreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["areas",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["areas/all",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["areas/new",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["areaslistcomponent",{"_index":144,"title":{"components/AreasListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["areastatus",{"_index":50,"title":{"interfaces/AreaStatus.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["array",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["arrays",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":876,"title":{},"body":{"index.html":{}}}],["authenticate",{"_index":626,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authenticated",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{},"components/PrivateAreaComponent.html":{}}}],["authentication",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"miscellaneous/functions.html":{}}}],["authentication'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["authentication.component.css",{"_index":627,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authentication.component.html",{"_index":628,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authenticationcomponent",{"_index":146,"title":{"components/AuthenticationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservice",{"_index":582,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":870,"title":{},"body":{"index.html":{}}}],["azione",{"_index":791,"title":{},"body":{"components/SensorComponent.html":{}}}],["back",{"_index":487,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["backdrop",{"_index":724,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["backdrop.loading",{"_index":733,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["backend",{"_index":504,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["background",{"_index":439,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["based",{"_index":283,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["behavior",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["behaviorsubject",{"_index":307,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["behaviorsubject(initialstate",{"_index":303,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["being",{"_index":290,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["bezier(0",{"_index":751,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["blablabla",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["block",{"_index":454,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["body",{"_index":657,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["boolean",{"_index":263,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["bootstrap",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":442,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["bottom",{"_index":455,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["box",{"_index":444,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["browse",{"_index":903,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":875,"title":{},"body":{"index.html":{}}}],["button",{"_index":397,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["button'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["button.component",{"_index":572,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["button.component.css",{"_index":417,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["button.component.html",{"_index":418,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["button.component.ts",{"_index":396,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:30",{"_index":421,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["button.component.ts:34",{"_index":763,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["button.component.ts:36",{"_index":426,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["button.component.ts:40",{"_index":764,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["button.component.ts:42",{"_index":684,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["button.component.ts:46",{"_index":765,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["button/area",{"_index":395,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"coverage.html":{}}}],["button/lamp",{"_index":681,"title":{},"body":{"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"coverage.html":{}}}],["button/sensor",{"_index":762,"title":{},"body":{"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["c",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["c.areacomponent",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["c.areaslistcomponent",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["c.authenticationcomponent",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["c.lampcomponent",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["c.lampslistcomponent",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["c.privateareacomponent",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["c.sensorcomponent",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["c.sensorslistcomponent",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":259,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["called",{"_index":555,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["calls",{"_index":498,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["campo",{"_index":529,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["canactivatechild",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["capabilities",{"_index":893,"title":{},"body":{"index.html":{}}}],["case",{"_index":357,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["catcherror",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["center",{"_index":661,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["change",{"_index":410,"title":{},"body":{"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"index.html":{}}}],["changed",{"_index":291,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["changedetection",{"_index":413,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["changedetectionstrategy",{"_index":435,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":414,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["changes",{"_index":298,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["characteristic",{"_index":313,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["check",{"_index":898,"title":{},"body":{"index.html":{}}}],["checks",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["child(2",{"_index":754,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["children",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["choice",{"_index":889,"title":{},"body":{"index.html":{}}}],["class",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["cli",{"_index":860,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":284,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["color",{"_index":440,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["command",{"_index":890,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":416,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["communicate",{"_index":807,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["complete",{"_index":275,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["completed",{"_index":526,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["component",{"_index":109,"title":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["components",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"overview.html":{}}}],["components/area",{"_index":571,"title":{},"body":{"components/AreasListComponent.html":{}}}],["components/lamp",{"_index":704,"title":{},"body":{"components/LampsListComponent.html":{}}}],["conferma",{"_index":531,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["console.log(alias",{"_index":523,"title":{},"body":{"components/AreaComponent.html":{}}}],["const",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["constructor(http",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(private",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructs",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{}}}],["container",{"_index":658,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/SensorButtonComponent.html":{}}}],["contains",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":736,"title":{},"body":{"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["controls",{"_index":516,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["copy",{"_index":655,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["core",{"_index":434,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["count",{"_index":477,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["coverage",{"_index":817,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":509,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["credentials",{"_index":646,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["credentials.password",{"_index":650,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["credentials.username",{"_index":649,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["cubic",{"_index":750,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["current",{"_index":538,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["currently",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["custom",{"_index":852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d",{"_index":790,"title":{},"body":{"components/SensorComponent.html":{}}}],["dashboard",{"_index":718,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["data",{"_index":237,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["data.actionrange",{"_index":774,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["data.alias",{"_index":438,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["data.geopos",{"_index":772,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["data.status",{"_index":685,"title":{},"body":{"components/LampButtonComponent.html":{}}}],["declarations",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":302,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":305,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["defined",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["defines",{"_index":809,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["delay",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"components/PrivateAreaComponent.html":{},"interfaces/Store.html":{}}}],["delay(0",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["denotes",{"_index":539,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["dependencies",{"_index":163,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["descendants",{"_index":430,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["desired",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["detection",{"_index":411,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["dev",{"_index":868,"title":{},"body":{"index.html":{}}}],["development",{"_index":863,"title":{},"body":{"index.html":{}}}],["different",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["directive",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["directives",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":874,"title":{},"body":{"index.html":{}}}],["directory",{"_index":878,"title":{},"body":{"index.html":{}}}],["display",{"_index":453,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["displaying",{"_index":404,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["dist",{"_index":877,"title":{},"body":{"index.html":{}}}],["div",{"_index":744,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["div:nth",{"_index":753,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["documentation",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/AreasListComponent.html":{}}}],["dom",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["duration",{"_index":474,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["dynamic",{"_index":768,"title":{},"body":{"components/SensorButtonComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":887,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":457,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["ease",{"_index":732,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["element",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["emit",{"_index":310,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["emits",{"_index":262,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["emitted",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["empty",{"_index":358,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":767,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["end",{"_index":886,"title":{},"body":{"index.html":{}}}],["error",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["error.status",{"_index":384,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["errormessage",{"_index":629,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["errors",{"_index":238,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["event",{"_index":578,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["eventemitter",{"_index":436,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["events",{"_index":401,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["execute",{"_index":883,"title":{},"body":{"index.html":{}}}],["export",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["exports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["f5f5f5",{"_index":665,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["fails",{"_index":631,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["false",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["featureless",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["fetched",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ffebc6",{"_index":465,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["fff",{"_index":747,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["field",{"_index":534,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["files",{"_index":871,"title":{},"body":{"index.html":{}}}],["first",{"_index":356,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["firstload",{"_index":244,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["fixed",{"_index":725,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["flag",{"_index":353,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["flags",{"_index":350,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":659,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["floating:focus",{"_index":672,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["form",{"_index":483,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formbuilder",{"_index":494,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formdata",{"_index":495,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formgroup",{"_index":515,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["formsmodule",{"_index":490,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["found",{"_index":386,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["friendly",{"_index":537,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["full",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":480,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["functionalities",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["functionality",{"_index":641,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["functions",{"_index":850,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":894,"title":{},"body":{"index.html":{}}}],["future",{"_index":580,"title":{},"body":{"components/AreasListComponent.html":{}}}],["generate",{"_index":873,"title":{},"body":{"index.html":{}}}],["generated",{"_index":859,"title":{},"body":{"index.html":{}}}],["geo",{"_index":271,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["geografica",{"_index":771,"title":{},"body":{"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["geographic",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["geopos",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["getallareas",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["getalllamps",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["getallsensors",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{}}}],["getting",{"_index":856,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":897,"title":{},"body":{"index.html":{}}}],["guard",{"_index":853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guards/auth.guard",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["handlers",{"_index":581,"title":{},"body":{"components/AreasListComponent.html":{}}}],["handles",{"_index":233,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["header",{"_index":452,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["height",{"_index":464,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["help",{"_index":895,"title":{},"body":{"index.html":{}}}],["helps",{"_index":567,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["here",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["hidden",{"_index":728,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["hook",{"_index":554,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{}}}],["hooks",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["http",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":869,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationComponent.html":{}}}],["httpstatuscode",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["httpstatuscode.notfound",{"_index":385,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["id",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["identifier",{"_index":536,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["il",{"_index":528,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["image",{"_index":775,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["img",{"_index":461,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["implementation",{"_index":553,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["implements",{"_index":546,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"index.html":{}}}],["import",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["import(\\\"./feature/area/area.component\\\").then",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/areas",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/authentication/authentication.component\\\").then",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/lamp/lamp.component\\\").then",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/lamps",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/private",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/sensor/sensor.component\\\").then",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["import(\\\"./feature/sensors",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["improve",{"_index":811,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["including",{"_index":235,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":541,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["indicating",{"_index":265,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["infinite",{"_index":478,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["initial",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["initialized",{"_index":318,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["initializes",{"_index":795,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["initialstate",{"_index":361,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["inject(apiservice",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["inject(appservice",{"_index":501,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["inject(formbuilder",{"_index":507,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{}}}],["inject(router",{"_index":517,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["injected",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["injects",{"_index":806,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["inline",{"_index":741,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["input",{"_index":400,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["input[type=\"email",{"_index":675,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["input[type=\"password",{"_index":678,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["inputs",{"_index":420,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["instance",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["interact",{"_index":503,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["interacts",{"_index":485,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["interface",{"_index":346,"title":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["interfaces",{"_index":532,"title":{},"body":{"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"overview.html":{}}}],["invalid",{"_index":652,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["invoking",{"_index":799,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["isauthenticated",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["it's",{"_index":317,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["items",{"_index":660,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["iteration",{"_index":476,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["justify",{"_index":735,"title":{},"body":{"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["karma",{"_index":885,"title":{},"body":{"index.html":{}}}],["keep",{"_index":558,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["keyframes",{"_index":467,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["l",{"_index":376,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["l.id",{"_index":374,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["lamp",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["lamp's",{"_index":288,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["lamp'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["lamp.component.css",{"_index":687,"title":{},"body":{"components/LampComponent.html":{}}}],["lamp.component.html",{"_index":688,"title":{},"body":{"components/LampComponent.html":{}}}],["lamp.id",{"_index":375,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["lamp.status",{"_index":379,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["lampbuttoncomponent",{"_index":148,"title":{"components/LampButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lampcomponent",{"_index":149,"title":{"components/LampComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lampid",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{}}}],["lampione",{"_index":722,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["lampioni",{"_index":719,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["lamps",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["lamps/all",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["lamps/new",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["lampslistcomponent",{"_index":151,"title":{"components/LampsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lampstatus",{"_index":57,"title":{"interfaces/LampStatus.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["lampstatus['id",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{}}}],["lampstatus['status",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{}}}],["last",{"_index":315,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["lds",{"_index":739,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["left",{"_index":460,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["legend",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"overview.html":{}}}],["library",{"_index":437,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["lifecycle",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{}}}],["linear",{"_index":481,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["list",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["list'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["list.component.css",{"_index":548,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["list.component.html",{"_index":549,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["list.component.ts",{"_index":544,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:31",{"_index":552,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:39",{"_index":564,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:42",{"_index":794,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:45",{"_index":557,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:51",{"_index":563,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:52",{"_index":805,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:57",{"_index":566,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["list.component.ts:60",{"_index":804,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:64",{"_index":700,"title":{},"body":{"components/LampsListComponent.html":{}}}],["list.component.ts:68",{"_index":801,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:76",{"_index":808,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component.ts:84",{"_index":797,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["list.component\\\").then",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["list/areas",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/AreasListComponent.html":{},"coverage.html":{}}}],["list/lamps",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/LampsListComponent.html":{},"coverage.html":{}}}],["list/sensors",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["lists",{"_index":570,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["load",{"_index":273,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["loadcomponent",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["loaddata",{"_index":246,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["loaddataareas",{"_index":247,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"interfaces/Store.html":{}}}],["loaddatasensors",{"_index":248,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["loaded",{"_index":354,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["loading",{"_index":236,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":796,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["local",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["localstorage.getitem(\"token",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem",{"_index":645,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["localstorage.removeitem(\"token",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"token",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"miscellaneous/functions.html":{}}}],["loggedin",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["logging",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"miscellaneous/functions.html":{}}}],["login(username",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{},"components/PrivateAreaComponent.html":{}}}],["logs",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["main",{"_index":230,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["makes",{"_index":701,"title":{},"body":{"components/LampsListComponent.html":{}}}],["making",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{}}}],["manage",{"_index":274,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["manageerror",{"_index":249,"title":{},"body":{"injectables/AppService.html":{}}}],["manageerror(error",{"_index":279,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["management",{"_index":579,"title":{},"body":{"components/AreasListComponent.html":{}}}],["managing",{"_index":231,"title":{},"body":{"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["map",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["margin",{"_index":676,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["matching",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":669,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["memberof",{"_index":813,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["message",{"_index":282,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{}}}],["messages",{"_index":639,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["metadata",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["method",{"_index":499,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["methods",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["min",{"_index":666,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["miscellaneous",{"_index":849,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["module",{"_index":160,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":162,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":896,"title":{},"body":{"index.html":{}}}],["name",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"index.html":{}}}],["navigate",{"_index":486,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"index.html":{}}}],["navigates",{"_index":500,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["necessary",{"_index":432,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{}}}],["need",{"_index":891,"title":{},"body":{"index.html":{}}}],["new",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["newstatus",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["next",{"_index":366,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["ng",{"_index":866,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":810,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["ngmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":551,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["nome",{"_index":770,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["none",{"_index":443,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["now",{"_index":576,"title":{},"body":{"components/AreasListComponent.html":{}}}],["null",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":574,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["obbligatorio",{"_index":530,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["object",{"_index":800,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["observable",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["of(false",{"_index":390,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["of(true",{"_index":387,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["oninit",{"_index":547,"title":{},"body":{"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["onpush",{"_index":409,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["opacity",{"_index":729,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["operates",{"_index":542,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["operation",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["operations",{"_index":234,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["operator",{"_index":427,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["optimize",{"_index":568,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["out",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/PrivateAreaComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":402,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["outputs",{"_index":682,"title":{},"body":{"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["overview",{"_index":899,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":837,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":662,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["page",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["param",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["parent",{"_index":423,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["particular",{"_index":425,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["passed",{"_index":422,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["passing",{"_index":545,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["password",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["path",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["pending",{"_index":286,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["performance",{"_index":812,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["pieces",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["pipe",{"_index":388,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["platform",{"_index":888,"title":{},"body":{"index.html":{}}}],["please",{"_index":653,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["popperjs/core",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["portata",{"_index":773,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["position",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/PrivateAreaComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["posizione",{"_index":788,"title":{},"body":{"components/SensorComponent.html":{}}}],["presentational",{"_index":398,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["private",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["privatearea",{"_index":709,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["privateareacomponent",{"_index":152,"title":{"components/PrivateAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["progress",{"_index":540,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{}}}],["project",{"_index":858,"title":{},"body":{"index.html":{}}}],["properties",{"_index":240,"title":{"properties.html":{}},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"properties.html":{}}}],["property",{"_index":766,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["protect",{"_index":854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":419,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["provided",{"_index":256,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["providedin",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["providers",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["public",{"_index":245,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["radius",{"_index":450,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["raggio",{"_index":789,"title":{},"body":{"components/SensorComponent.html":{}}}],["range",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["reactive",{"_index":510,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["reactiveformsmodule",{"_index":491,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["readonly",{"_index":242,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{}}}],["real",{"_index":560,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["receives",{"_index":399,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["redirected",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirects",{"_index":855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redirectto",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":900,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":297,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["related",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["relative",{"_index":742,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["reload",{"_index":261,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["reloading",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["removes",{"_index":634,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["removing",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["rendering",{"_index":569,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["representing",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["represents",{"_index":424,"title":{},"body":{"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["requests",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["reset",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsible",{"_index":403,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["result",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["results",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"components/AreaComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["return",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/Store.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["rgba(0",{"_index":448,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["right",{"_index":677,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["ripple",{"_index":740,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["root",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaComponent.html":{},"injectables/AuthService.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["root'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["rotatey(0deg",{"_index":470,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["rotatey(360deg",{"_index":472,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["route",{"_index":488,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["router",{"_index":496,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["routerlink",{"_index":713,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["routerlinkactive",{"_index":714,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["routermodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["routermodule.forroot",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["routeroutlet",{"_index":712,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["routes",{"_index":183,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"miscellaneous/functions.html":{},"routes.html":{}}}],["run",{"_index":865,"title":{},"body":{"index.html":{}}}],["running",{"_index":879,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":308,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"injectables/AuthService.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/Store.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":872,"title":{},"body":{"index.html":{}}}],["selector",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["selectors",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sensor",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["sensor's",{"_index":301,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["sensor'},{'name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["sensor.component.css",{"_index":777,"title":{},"body":{"components/SensorComponent.html":{}}}],["sensor.component.html",{"_index":778,"title":{},"body":{"components/SensorComponent.html":{}}}],["sensor.id",{"_index":815,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["sensor.status",{"_index":383,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sensorbuttoncomponent",{"_index":154,"title":{"components/SensorButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["sensorcomponent",{"_index":155,"title":{"components/SensorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["sensore",{"_index":723,"title":{},"body":{"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{}}}],["sensori",{"_index":720,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["sensors",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["sensors/all",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["sensors/new",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["sensorslistcomponent",{"_index":157,"title":{"components/SensorsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["sensorstatus",{"_index":67,"title":{"interfaces/SensorStatus.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["sequence",{"_index":428,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["serve",{"_index":867,"title":{},"body":{"index.html":{}}}],["server",{"_index":864,"title":{},"body":{"index.html":{}}}],["service",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["services",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["services/app.service",{"_index":521,"title":{},"body":{"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["services/auth.service",{"_index":644,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["set",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["setlamppending",{"_index":250,"title":{},"body":{"injectables/AppService.html":{}}}],["setlamppending(lamp",{"_index":285,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sets",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":445,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["show",{"_index":289,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["sign",{"_index":654,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["signin",{"_index":668,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["simple",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":405,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["solid",{"_index":456,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"index.html":{}}}],["spin",{"_index":468,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["spinner",{"_index":258,"title":{},"body":{"injectables/AppService.html":{},"components/PrivateAreaComponent.html":{},"interfaces/Store.html":{}}}],["src/.../app.service.ts",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/area",{"_index":394,"title":{},"body":{"components/AreaButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/lamp",{"_index":680,"title":{},"body":{"components/LampButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/sensor",{"_index":761,"title":{},"body":{"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{},"coverage.html":{}}}],["src/app/feature/area/area.component.ts",{"_index":482,"title":{},"body":{"components/AreaComponent.html":{},"coverage.html":{}}}],["src/app/feature/area/area.component.ts:29",{"_index":502,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:35",{"_index":518,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:41",{"_index":508,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:47",{"_index":514,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:55",{"_index":506,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/area/area.component.ts:62",{"_index":497,"title":{},"body":{"components/AreaComponent.html":{}}}],["src/app/feature/areas",{"_index":543,"title":{},"body":{"components/AreasListComponent.html":{},"coverage.html":{}}}],["src/app/feature/authentication/authentication.component.ts",{"_index":625,"title":{},"body":{"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["src/app/feature/authentication/authentication.component.ts:32",{"_index":636,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:38",{"_index":643,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:44",{"_index":640,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:50",{"_index":642,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:59",{"_index":637,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:65",{"_index":632,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/authentication/authentication.component.ts:75",{"_index":630,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts",{"_index":686,"title":{},"body":{"components/LampComponent.html":{},"coverage.html":{}}}],["src/app/feature/lamp/lamp.component.ts:29",{"_index":690,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:35",{"_index":694,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:41",{"_index":692,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:47",{"_index":693,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:55",{"_index":691,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamp/lamp.component.ts:62",{"_index":689,"title":{},"body":{"components/LampComponent.html":{}}}],["src/app/feature/lamps",{"_index":698,"title":{},"body":{"components/LampsListComponent.html":{},"coverage.html":{}}}],["src/app/feature/private",{"_index":707,"title":{},"body":{"components/PrivateAreaComponent.html":{},"coverage.html":{}}}],["src/app/feature/sensor/sensor.component.ts",{"_index":776,"title":{},"body":{"components/SensorComponent.html":{},"coverage.html":{}}}],["src/app/feature/sensor/sensor.component.ts:29",{"_index":780,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:35",{"_index":784,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:41",{"_index":782,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:47",{"_index":783,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:57",{"_index":781,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensor/sensor.component.ts:64",{"_index":779,"title":{},"body":{"components/SensorComponent.html":{}}}],["src/app/feature/sensors",{"_index":792,"title":{},"body":{"components/SensorsListComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/model.ts",{"_index":533,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:11",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:22",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:30",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:38",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:48",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:57",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:68",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:77",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app.service.ts",{"_index":229,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/app.service.ts:124",{"_index":278,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:149",{"_index":277,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:174",{"_index":292,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:183",{"_index":293,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:193",{"_index":287,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:204",{"_index":295,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:216",{"_index":300,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:229",{"_index":280,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:249",{"_index":269,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:269",{"_index":270,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:286",{"_index":254,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:74",{"_index":321,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:83",{"_index":304,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:87",{"_index":331,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:88",{"_index":339,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:89",{"_index":325,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:90",{"_index":327,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:91",{"_index":337,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:92",{"_index":329,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:99",{"_index":272,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/auth.service.ts",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:102",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:50",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:72",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:81",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:90",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["standalone",{"_index":415,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["start",{"_index":257,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["started",{"_index":857,"title":{"index.html":{}},"body":{}}],["startloading",{"_index":251,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state",{"_index":232,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["state.areas",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.error",{"_index":326,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.firstload",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.lamps",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.loading",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["state.sensors",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["statements",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/functions.html":{}}}],["statuses",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["stop",{"_index":260,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["stoploading",{"_index":252,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["storage",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["store",{"_index":241,"title":{"interfaces/Store.html":{}},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["strategy",{"_index":412,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{}}}],["stream",{"_index":802,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["string",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["styles",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["styleurls",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["subject",{"_index":309,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["subscribe",{"_index":365,"title":{},"body":{"injectables/AppService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"interfaces/Store.html":{}}}],["subscribe((completed",{"_index":525,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{}}}],["subscribers",{"_index":312,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["successful",{"_index":268,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["support",{"_index":901,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":902,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["table",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":407,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["tap",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["template",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["templateurl",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["test",{"_index":882,"title":{},"body":{"index.html":{}}}],["testing",{"_index":892,"title":{},"body":{"index.html":{}}}],["tests",{"_index":881,"title":{},"body":{"index.html":{}}}],["text",{"_index":458,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["there's",{"_index":577,"title":{},"body":{"components/AreasListComponent.html":{}}}],["this.$store.next",{"_index":367,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.$store.pipe(map(state",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.$store.value",{"_index":368,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.$store.value.lamps.map(l",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.addarea$(alias",{"_index":392,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.addlamp$(alias",{"_index":389,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.addsensor$(alias",{"_index":391,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.getallareas",{"_index":372,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.getalllamps",{"_index":364,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.getallsensors",{"_index":371,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.togglelamp$(lamp.id",{"_index":378,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.api.togglelamp$(sensor.id",{"_index":382,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.appservice.addarea$(alias",{"_index":524,"title":{},"body":{"components/AreaComponent.html":{}}}],["this.appservice.addlamp",{"_index":695,"title":{},"body":{"components/LampComponent.html":{}}}],["this.appservice.addsensor$(alias",{"_index":787,"title":{},"body":{"components/SensorComponent.html":{}}}],["this.appservice.error",{"_index":505,"title":{},"body":{"components/AreaComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.appservice.loading",{"_index":716,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["this.authservice.login",{"_index":648,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.errormessage",{"_index":651,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.formbuilder.control",{"_index":512,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.formbuilder.group",{"_index":511,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.formdata.get",{"_index":696,"title":{},"body":{"components/LampComponent.html":{}}}],["this.formdata.get(\"actionrange\").value",{"_index":786,"title":{},"body":{"components/SensorComponent.html":{}}}],["this.formdata.get(\"alias\").value",{"_index":522,"title":{},"body":{"components/AreaComponent.html":{},"components/SensorComponent.html":{}}}],["this.formdata.get(\"geopos\").value",{"_index":785,"title":{},"body":{"components/SensorComponent.html":{}}}],["this.formdata.value",{"_index":647,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.http.get(`/areas",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`/lamps",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`/sensors",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post('/areas",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post('/lamps",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post('/sensors",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(`/lamps/${lampid}/switch/${newstatus",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.isauthenticated",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loaddata",{"_index":380,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.loaddataareas",{"_index":393,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.loggedin",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.manageerror(error",{"_index":369,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.router.navigate",{"_index":527,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["this.service.areas",{"_index":556,"title":{},"body":{"components/AreasListComponent.html":{}}}],["this.service.lamps",{"_index":703,"title":{},"body":{"components/LampsListComponent.html":{}}}],["this.service.loaddata",{"_index":705,"title":{},"body":{"components/LampsListComponent.html":{}}}],["this.service.loaddataareas",{"_index":573,"title":{},"body":{"components/AreasListComponent.html":{}}}],["this.service.loaddatasensors",{"_index":814,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["this.service.loading",{"_index":562,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["this.service.sensors",{"_index":803,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["this.service.togglelamp",{"_index":706,"title":{},"body":{"components/LampsListComponent.html":{}}}],["this.service.togglesensor(sensor",{"_index":816,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["this.setlamppending(lamp",{"_index":377,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.setlamppending(sensor",{"_index":381,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.startloading",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["this.stoploading",{"_index":370,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["time",{"_index":561,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{}}}],["timing",{"_index":479,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["toggle",{"_index":296,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["toggled",{"_index":683,"title":{},"body":{"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["togglelamp",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{}}}],["togglelamp$(lampid",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["togglelamp(lamp",{"_index":294,"title":{},"body":{"injectables/AppService.html":{},"components/LampsListComponent.html":{},"interfaces/Store.html":{}}}],["toggles",{"_index":798,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["togglesensor",{"_index":253,"title":{},"body":{"injectables/AppService.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["togglesensor(sensor",{"_index":299,"title":{},"body":{"injectables/AppService.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{}}}],["token",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["top",{"_index":663,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["track",{"_index":559,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["trackbyareaid",{"_index":550,"title":{},"body":{"components/AreasListComponent.html":{}}}],["trackbyfunction",{"_index":565,"title":{},"body":{"components/AreasListComponent.html":{},"components/LampsListComponent.html":{},"components/SensorsListComponent.html":{}}}],["trackbylampid",{"_index":699,"title":{},"body":{"components/LampsListComponent.html":{}}}],["trackbysensorid",{"_index":793,"title":{},"body":{"components/SensorsListComponent.html":{}}}],["transform",{"_index":469,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{}}}],["transition",{"_index":730,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["transparent",{"_index":441,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["tree",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["true",{"_index":362,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":535,"title":{},"body":{"interfaces/AreaStatus.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"components/SensorsListComponent.html":{}}}],["unit",{"_index":880,"title":{},"body":{"index.html":{}}}],["update",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["updated",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{}}}],["updates",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{}}}],["updating",{"_index":239,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["upon",{"_index":489,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["usagenotes",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["use",{"_index":702,"title":{},"body":{"components/LampsListComponent.html":{},"index.html":{}}}],["used",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["user",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["username",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{}}}],["users",{"_index":711,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["uses",{"_index":408,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AreasListComponent.html":{},"components/LampButtonComponent.html":{},"components/LampsListComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorsListComponent.html":{}}}],["validators",{"_index":519,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["validators.required",{"_index":513,"title":{},"body":{"components/AreaComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/SensorComponent.html":{}}}],["value",{"_index":264,"title":{},"body":{"injectables/AppService.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":311,"title":{},"body":{"injectables/AppService.html":{},"components/SensorComponent.html":{},"interfaces/Store.html":{}}}],["var",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AreaButtonComponent.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["variable",{"_index":638,"title":{},"body":{"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["variables",{"_index":908,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":861,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":884,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":727,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["visible",{"_index":737,"title":{},"body":{"components/PrivateAreaComponent.html":{}}}],["void",{"_index":276,"title":{},"body":{"injectables/AppService.html":{},"components/AreaComponent.html":{},"components/AreasListComponent.html":{},"injectables/AuthService.html":{},"components/AuthenticationComponent.html":{},"components/LampComponent.html":{},"components/LampsListComponent.html":{},"components/SensorComponent.html":{},"components/SensorsListComponent.html":{}}}],["well",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Store.html":{}}}],["whenever",{"_index":635,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["whether",{"_index":266,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AreaStatus.html":{},"injectables/AuthService.html":{},"interfaces/LampStatus.html":{},"interfaces/SensorStatus.html":{},"interfaces/Store.html":{}}}],["whitesmoke",{"_index":466,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/LampButtonComponent.html":{},"components/SensorButtonComponent.html":{}}}],["width",{"_index":462,"title":{},"body":{"components/AreaButtonComponent.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"components/PrivateAreaComponent.html":{},"components/SensorButtonComponent.html":{}}}],["window.location.reload",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["within",{"_index":429,"title":{},"body":{"components/AreaButtonComponent.html":{},"interfaces/AreaStatus.html":{},"components/AuthenticationComponent.html":{},"components/LampButtonComponent.html":{},"interfaces/LampStatus.html":{},"components/SensorButtonComponent.html":{},"interfaces/SensorStatus.html":{}}}],["x",{"_index":769,"title":{},"body":{"components/SensorButtonComponent.html":{}}}],["z",{"_index":673,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/PrivateAreaComponent.html":{}}}],["zone.js",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for making API requests related to lamps, sensors, and areas.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addArea$\n                            \n                            \n                                addLamp$\n                            \n                            \n                                addSensor$\n                            \n                            \n                                getAllAreas$\n                            \n                            \n                                getAllLamps$\n                            \n                            \n                                getAllSensors$\n                            \n                            \n                                toggleLamp$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructs the ApiService with the HttpClient dependency injected.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpClient instance used for making HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addArea$\n                        \n                    \n                \n            \n            \n                \naddArea$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:77\n                \n            \n\n\n            \n                \n                    Adds a new area to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alias of the new area.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type AreaStatus representing the newly added area.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLamp$\n                        \n                    \n                \n            \n            \n                \naddLamp$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:57\n                \n            \n\n\n            \n                \n                    Adds a new lamp to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alias of the new lamp.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type LampStatus representing the newly added lamp.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSensor$\n                        \n                    \n                \n            \n            \n                \naddSensor$(alias: string, geoPos: string, actionRange: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:68\n                \n            \n\n\n            \n                \n                    Adds a new sensor to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alias of the new sensor.\n\n                                    \n                                \n                                \n                                    geoPos\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The geographic position of the new sensor.\n\n                                    \n                                \n                                \n                                    actionRange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The action range of the new sensor.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type SensorStatus representing the newly added sensor.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAreas$\n                        \n                    \n                \n            \n            \n                \ngetAllAreas$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:38\n                \n            \n\n\n            \n                \n                    Retrieves all areas from the API.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type AreaStatus[] representing the list of areas.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllLamps$\n                        \n                    \n                \n            \n            \n                \ngetAllLamps$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:22\n                \n            \n\n\n            \n                \n                    Retrieves all lamps from the API.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type LampStatus[] representing the list of lamps.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSensors$\n                        \n                    \n                \n            \n            \n                \ngetAllSensors$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:30\n                \n            \n\n\n            \n                \n                    Retrieves all sensors from the API.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type SensorStatus[] representing the list of sensors.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLamp$\n                        \n                    \n                \n            \n            \n                \ntoggleLamp$(lampId, newStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:48\n                \n            \n\n\n            \n                \n                    Updates the status of a lamp in the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lampId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the lamp to be updated.\n\n                                    \n                                \n                                \n                                    newStatus\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new status to be set for the lamp.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An observable of type string representing the result of the update operation.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpStatusCode } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LampStatus, SensorStatus, AreaStatus } from '../model';\n\n/**\n * Service for making API requests related to lamps, sensors, and areas.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  /**\n   * Constructs the ApiService with the HttpClient dependency injected.\n   * @param http The HttpClient instance used for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieves all lamps from the API.\n   * @returns An observable of type LampStatus[] representing the list of lamps.\n   */\n  getAllLamps$() {\n    return this.http.get(`/lamps`);\n  }\n\n  /**\n   * Retrieves all sensors from the API.\n   * @returns An observable of type SensorStatus[] representing the list of sensors.\n   */\n  getAllSensors$() {\n    return this.http.get(`/sensors`);\n  }\n\n  /**\n   * Retrieves all areas from the API.\n   * @returns An observable of type AreaStatus[] representing the list of areas.\n   */\n  getAllAreas$() {\n    return this.http.get(`/areas`);\n  }\n\n  /**\n   * Updates the status of a lamp in the API.\n   * @param lampId The ID of the lamp to be updated.\n   * @param newStatus The new status to be set for the lamp.\n   * @returns An observable of type string representing the result of the update operation.\n   */\n  toggleLamp$(lampId: LampStatus['id'], newStatus: LampStatus['status']) {\n    return this.http.put(`/lamps/${lampId}/switch/${newStatus}`, null);\n  }\n\n  /**\n   * Adds a new lamp to the API.\n   * @param alias The alias of the new lamp.\n   * @returns An observable of type LampStatus representing the newly added lamp.\n   */\n  addLamp$(alias: string) {\n    return this.http.post('/lamps', { alias });\n  }\n\n  /**\n   * Adds a new sensor to the API.\n   * @param alias The alias of the new sensor.\n   * @param geoPos The geographic position of the new sensor.\n   * @param actionRange The action range of the new sensor.\n   * @returns An observable of type SensorStatus representing the newly added sensor.\n   */\n  addSensor$(alias: string, geoPos: string, actionRange: string) {\n    return this.http.post('/sensors', { alias, geoPos, actionRange });\n  }\n\n  /**\n   * Adds a new area to the API.\n   * @param alias The alias of the new area.\n   * @returns An observable of type AreaStatus representing the newly added area.\n   */\n  addArea$(alias: string) {\n    return this.http.post('/areas', { alias });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the root component of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n/**\n * This is the root component of the application.\n */\n@Component ({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  // Currently, the AppComponent is a simple, featureless component.\n  // If any behavior or lifecycle hooks are added, they should be documented here.\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AppComponent } from \"./app.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"private-area\", loadComponent: () => \"import(\\\"./feature/private-area/private-area.component\\\").then (c => c.PrivateAreaComponent)\",\n    canActivateChild: [AuthGuard],\n    children: [\n      { path: \"lamps/all\", loadComponent: () => \"import(\\\"./feature/lamps-list/lamps-list.component\\\").then (c => c.LampsListComponent)\" },\n      { path: \"lamps/new\", loadComponent: () => \"import(\\\"./feature/lamp/lamp.component\\\").then (c => c.LampComponent)\" },\n      { path: \"sensors/all\", loadComponent: () => \"import(\\\"./feature/sensors-list/sensors-list.component\\\").then (c => c.SensorsListComponent)\" },\n      { path: \"sensors/new\", loadComponent: () => \"import(\\\"./feature/sensor/sensor.component\\\").then (c => c.SensorComponent)\" },\n      { path: \"areas/all\", loadComponent: () => \"import(\\\"./feature/areas-list/areas-list.component\\\").then (c => c.AreasListComponent)\" },\n      { path: \"areas/new\", loadComponent: () => \"import(\\\"./feature/area/area.component\\\").then (c => c.AreaComponent)\" },\n      { path: \"**\", redirectTo: \"lamps/all\", pathMatch: \"full\" }\n    ]\n  },\n  { path: \"login\", loadComponent: () => \"import(\\\"./feature/authentication/authentication.component\\\").then (c => c.AuthenticationComponent)\" },\n  { path: \"**\", redirectTo: \"private-area\", pathMatch: \"full\" }\n];\n\n@NgModule ({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot (routes),\n    HttpClientModule\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The main service for managing application state.\nHandles operations related to lamps, sensors, and areas, including\nloading data from the API, managing errors, and updating state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $store\n                            \n                            \n                                api\n                            \n                            \n                                    Readonly\n                                areas$\n                            \n                            \n                                    Readonly\n                                error$\n                            \n                            \n                                    Readonly\n                                firstLoad$\n                            \n                            \n                                    Readonly\n                                lamps$\n                            \n                            \n                                    Readonly\n                                loading$\n                            \n                            \n                                    Readonly\n                                sensors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addArea$\n                            \n                            \n                                    Public\n                                addLamp$\n                            \n                            \n                                    Public\n                                addSensor$\n                            \n                            \n                                    Public\n                                loadData\n                            \n                            \n                                    Public\n                                loadDataAreas\n                            \n                            \n                                    Public\n                                loadDataSensors\n                            \n                            \n                                    Private\n                                manageError\n                            \n                            \n                                    Private\n                                setLampPending\n                            \n                            \n                                    Private\n                                startLoading\n                            \n                            \n                                    Private\n                                stopLoading\n                            \n                            \n                                    Public\n                                toggleLamp\n                            \n                            \n                                    Public\n                                toggleSensor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addArea$\n                        \n                    \n                \n            \n            \n                \n                    \n                    addArea$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:286\n                \n            \n\n\n            \n                \n                    Add a new area with the provided alias.\nStart the loading spinner, call the API to add the area,\nthen stop the loading spinner and reload the area data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alias of the new area.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that emits a boolean value indicating whether the area addition was successful.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addLamp$\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLamp$(alias: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:249\n                \n            \n\n\n            \n                \n                    Add a new lamp with the provided alias.\nStart the loading spinner, call the API to add the lamp,\nthen stop the loading spinner and reload the lamp data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alias of the new lamp.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that emits a boolean value indicating whether the lamp addition was successful.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSensor$\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSensor$(alias: string, geoPos: string, actionRange: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:269\n                \n            \n\n\n            \n                \n                    Add a new sensor with the provided alias, geo position, and action range.\nStart the loading spinner, call the API to add the sensor,\nthen stop the loading spinner and reload the sensor data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alias\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The alias of the new sensor.\n\n                                    \n                                \n                                \n                                    geoPos\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The geographic position of the new sensor.\n\n                                    \n                                \n                                \n                                    actionRange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The action range of the new sensor.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that emits a boolean value indicating whether the sensor addition was successful.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:99\n                \n            \n\n\n            \n                \n                    Load lamp data from the API.\nUpdate the state with the new data, manage any errors,\nand stop the loading spinner when complete.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadDataAreas\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadDataAreas()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:149\n                \n            \n\n\n            \n                \n                    Load area data from the API.\nUpdate the state with the new data, manage any errors,\nand stop the loading spinner when complete.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadDataSensors\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadDataSensors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:124\n                \n            \n\n\n            \n                \n                    Load sensor data from the API.\nUpdate the state with the new data, manage any errors,\nand stop the loading spinner when complete.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageError\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:229\n                \n            \n\n\n            \n                \n                    Manage errors.\nUpdate the state with an appropriate error message based on the HTTP status code.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setLampPending\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLampPending(lamp: LampStatus, pending: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:193\n                \n            \n\n\n            \n                \n                    Update a lamp's pending status.\nThis is used to show that a lamp's status is being changed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lamp\n                                    \n                                                LampStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pending\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:174\n                \n            \n\n\n            \n                \n                    Start the loading spinner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stopLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    stopLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:183\n                \n            \n\n\n            \n                \n                    Stop the loading spinner.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleLamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleLamp(lamp: LampStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:204\n                \n            \n\n\n            \n                \n                    Toggle a lamp's status.\nCall the API to update the lamp's status,\nthen reload the lamp data to reflect the changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lamp\n                                    \n                                                LampStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleSensor\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSensor(sensor: SensorStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.service.ts:216\n                \n            \n\n\n            \n                \n                    Toggle a sensor's status.\nCall the API to update the sensor's status,\nthen reload the sensor data to reflect the changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sensor\n                                    \n                                                SensorStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(initialState)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:83\n                        \n                    \n\n            \n                \n                    Define the application's main state store as a BehaviorSubject.\nThis is an RxJS Subject that can emit new values to its subscribers\nand has the characteristic that it will always return the last value emitted to new subscribers.\nHere it's initialized with an initial state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ApiService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:74\n                        \n                    \n\n            \n                \n                    Inject the ApiService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        areas$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.areas))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.error))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstLoad$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.firstLoad))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lamps$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.lamps))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:87\n                        \n                    \n\n            \n                \n                    Define selectors for different pieces of state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.loading), delay(0))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sensors$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.$store.pipe(map(state => state.sensors))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:88\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatusCode } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, delay, map, Observable, of, switchMap, tap } from \"rxjs\";\nimport { LampStatus, SensorStatus, AreaStatus } from \"../model\";\nimport { ApiService } from \"./api.service\";\n\n/**\n * Interface representing the application state store.\n * It contains arrays of lamps, sensors, and areas,\n * as well as loading and error flags.\n */\ninterface Store {\n  /**\n   * An array of lamp statuses representing the state of lamps in the application.\n   */\n  lamps: LampStatus[];\n  /**\n   * An array of sensor statuses representing the state of sensors in the application.\n   */\n  sensors: SensorStatus[];\n  /**\n   * An array of area statuses representing the state of areas in the application.\n   */\n  areas: AreaStatus[];\n  /**\n   * A flag indicating whether data is currently being loaded or fetched.\n   */\n  loading: boolean;\n  /**\n   * A flag indicating whether it is the first load of data.\n   */\n  firstLoad: boolean;\n  /**\n   * A string representing an error message in case of any errors.\n   */\n  error: string;\n}\n\n\n/**\n * Initial state for the application store.\n * Contains empty arrays for lamps, sensors, and areas,\n * and sets the loading and firstLoad flags to false.\n */\nconst initialState: Store = {\n  lamps: [],\n  sensors: [],\n  areas: [],\n  loading: false,\n  firstLoad: true,\n  error: null\n};\n\n/**\n * The main service for managing application state.\n * Handles operations related to lamps, sensors, and areas, including\n * loading data from the API, managing errors, and updating state.\n */\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AppService {\n\n  /**\n   * Inject the ApiService.\n   */\n  api = inject(ApiService);\n\n  /**\n   * Define the application's main state store as a BehaviorSubject.\n   * This is an RxJS Subject that can emit new values to its subscribers\n   * and has the characteristic that it will always return the last value emitted to new subscribers.\n   * Here it's initialized with an initial state.\n   */\n\n  $store = new BehaviorSubject(initialState);\n  /**\n     * Define selectors for different pieces of state.\n     */\n  readonly lamps$ = this.$store.pipe(map(state => state.lamps));\n  readonly sensors$ = this.$store.pipe(map(state => state.sensors));\n  readonly areas$ = this.$store.pipe(map(state => state.areas));\n  readonly error$ = this.$store.pipe(map(state => state.error));\n  readonly loading$ = this.$store.pipe(map(state => state.loading), delay(0));\n  readonly firstLoad$ = this.$store.pipe(map(state => state.firstLoad));\n\n  /**\n   * Load lamp data from the API.\n   * Update the state with the new data, manage any errors,\n   * and stop the loading spinner when complete.\n   */\n  public loadData() {\n    this.startLoading();\n    this.api.getAllLamps$()\n      .subscribe({\n        next: (lamps) => {\n          this.$store.next({\n            ...this.$store.value,\n            lamps,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n  /**\n     * Load sensor data from the API.\n     * Update the state with the new data, manage any errors,\n     * and stop the loading spinner when complete.\n     */\n  public loadDataSensors() {\n    this.startLoading();\n    this.api.getAllSensors$()\n      .subscribe({\n        next: (sensors) => {\n          this.$store.next({\n            ...this.$store.value,\n            sensors,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n  /**\n     * Load area data from the API.\n     * Update the state with the new data, manage any errors,\n     * and stop the loading spinner when complete.\n     */\n  public loadDataAreas() {\n    this.startLoading();\n    this.api.getAllAreas$()\n      .subscribe({\n        next: (areas) => {\n          this.$store.next({\n            ...this.$store.value,\n            areas,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n\n\n  /**\n     * Start the loading spinner.\n     */\n  private startLoading() {\n    this.$store.next({\n      ...this.$store.value,\n      loading: true\n    });\n  }\n  /**\n     * Stop the loading spinner.\n     */\n  private stopLoading() {\n    this.$store.next({\n      ...this.$store.value,\n      loading: false\n    });\n  }\n  /**\n     * Update a lamp's pending status.\n     * This is used to show that a lamp's status is being changed.\n     */\n  private setLampPending(lamp: LampStatus, pending: boolean) {\n    this.$store.next({\n      ...this.$store.value,\n      lamps: this.$store.value.lamps.map(l => l.id === lamp.id ? { ...l, pending } : l)\n    });\n  }\n  /**\n     * Toggle a lamp's status.\n     * Call the API to update the lamp's status,\n     * then reload the lamp data to reflect the changes.\n     */\n  public toggleLamp(lamp: LampStatus) {\n    this.setLampPending(lamp, true);\n    this.api.toggleLamp$(lamp.id, lamp.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n  /**\n     * Toggle a sensor's status.\n     * Call the API to update the sensor's status,\n     * then reload the sensor data to reflect the changes.\n     */\n  public toggleSensor(sensor: SensorStatus) {\n    this.setLampPending(sensor, true);\n    this.api.toggleLamp$(sensor.id, sensor.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n\n  /**\n     * Manage errors.\n     * Update the state with an appropriate error message based on the HTTP status code.\n     */\n\n  private manageError(error: any) {\n    if (error.status === HttpStatusCode.NotFound) {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Not found\"\n      });\n    } else {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Error\"\n      });\n    }\n  }\n  /**\n  * Add a new lamp with the provided alias.\n  * Start the loading spinner, call the API to add the lamp,\n  * then stop the loading spinner and reload the lamp data.\n  * @param alias The alias of the new lamp.\n  * @returns An observable that emits a boolean value indicating whether the lamp addition was successful.\n  */\n  public addLamp$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addLamp$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n   * Add a new sensor with the provided alias, geo position, and action range.\n   * Start the loading spinner, call the API to add the sensor,\n   * then stop the loading spinner and reload the sensor data.\n   * @param alias The alias of the new sensor.\n   * @param geoPos The geographic position of the new sensor.\n   * @param actionRange The action range of the new sensor.\n   * @returns An observable that emits a boolean value indicating whether the sensor addition was successful.\n   */\n\n  public addSensor$(alias: string, geoPos: string, actionRange: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addSensor$(alias, geoPos, actionRange)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n * Add a new area with the provided alias.\n * Start the loading spinner, call the API to add the area,\n * then stop the loading spinner and reload the area data.\n * @param alias The alias of the new area.\n * @returns An observable that emits a boolean value indicating whether the area addition was successful.\n */\n  public addArea$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => {\n          this.startLoading()\n        }),\n        switchMap(() => this.api.addArea$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadDataAreas())\n      );\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AreaButtonComponent.html":{"url":"components/AreaButtonComponent.html","title":"component - AreaButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AreaButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/area-button/area-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Area Button.\nThis is a presentational component which receives data as an Input and emits events as Output.\nIt's responsible for displaying a single area status and emits events when actions are taken on it.\nThis component uses the OnPush change detection strategy.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-area-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./area-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./area-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                last\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         AreaStatus\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/area-button/area-button.component.ts:30\n                            \n                        \n                \n                    \n                        Input data of type AreaStatus.\nThis is passed in from a parent component and represents the status of a particular area.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Default value : last\n                    \n                \n                    \n                        \n                                Defined in src/app/components/area-button/area-button.component.ts:36\n                        \n                    \n\n            \n                \n                    An RxJS operator that emits only the last value (complete) of an observable sequence.\nIt's protected and can be used within the component and its descendants.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\n// Import from RxJS library\nimport { last } from \"rxjs\";\n// Import for the AreaStatus model\nimport { AreaStatus } from \"../../model\";\n\n/**\n * Component for Area Button.\n * This is a presentational component which receives data as an Input and emits events as Output.\n * It's responsible for displaying a single area status and emits events when actions are taken on it.\n * This component uses the OnPush change detection strategy.\n */\n@Component ({\n  selector: \"app-area-button\",\n  templateUrl: \"./area-button.component.html\",\n  styleUrls: [\"./area-button.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule],\n  standalone: true\n})\n\nexport class AreaButtonComponent {\n  /**\n   * Input data of type AreaStatus.\n   * This is passed in from a parent component and represents the status of a particular area.\n   */\n  @Input () data: AreaStatus;\n\n  /**\n   * An RxJS operator that emits only the last value (complete) of an observable sequence.\n   * It's protected and can be used within the component and its descendants.\n   */\n  protected readonly last = last;\n}\n\n    \n\n    \n         \n  \n    {{ data.alias }}\n  \n  \n    \n      \n    \n    {{data.alias}}\n  \n\n\n    \n\n    \n                \n                    ./area-button.component.css\n                \n                button {\n    background-color: transparent;\n    border: none;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.button-header {\n    display: block;\n    border-bottom: 1px solid #e5e5e5;\n    text-align: left;\n}\n\nimg {\n    width: 150px;\n    height: 150px;\n}\n\n.On {\n    background: #ffebc6;\n}\n\n.Off {\n    background: whitesmoke;\n}\n\n\n@keyframes spin {\n    0% {\n        transform: rotateY(0deg);\n    }\n    100% {\n        transform: rotateY(360deg);\n    }\n}\n\n.button-spin {\n    animation-name: spin;\n    animation-duration: .2s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ data.alias }}                      {{data.alias}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AreaButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AreaComponent.html":{"url":"components/AreaComponent.html","title":"component - AreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/area/area.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Area.\nThis component contains a form for adding a new area.\nIt interacts with the AppService to add new areas and navigate back to the root route upon successful addition.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-area\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./area.component.css\n            \n\n\n\n            \n                templateUrl\n                ./area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                error$\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addArea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addArea\n                        \n                    \n                \n            \n            \n                \naddArea()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/area/area.component.ts:62\n                \n            \n\n\n            \n                \n                    Function to add a new area.\nIt retrieves the alias value from the form and calls the addArea$ method of the AppService.\nUpon successful addition, it navigates back to the root route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:29\n                        \n                    \n\n            \n                \n                    Instance of the AppService.\nThis is used to interact with the backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.error$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:55\n                        \n                    \n\n            \n                \n                    An observable of the error status.\nThis is used to manage the error state of the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:41\n                        \n                    \n\n            \n                \n                    Instance of the FormBuilder.\nThis is used to create a reactive form for adding new areas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:47\n                        \n                    \n\n            \n                \n                    Instance of the FormGroup.\nThis is used to create and manage the form controls.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/area/area.component.ts:35\n                        \n                    \n\n            \n                \n                    Instance of the Router.\nThis is used to navigate among routes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { Component, inject } from \"@angular/core\";\n// Imports for the form controls\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import for the Router\nimport { Router, RouterModule } from \"@angular/router\";\n// Import for the AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Component for Area.\n * This component contains a form for adding a new area.\n * It interacts with the AppService to add new areas and navigate back to the root route upon successful addition.\n */\n@Component({\n  selector: \"app-area\",\n  templateUrl: \"./area.component.html\",\n  styleUrls: [\"./area.component.css\"],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule]\n})\nexport class AreaComponent {\n  /**\n   * Instance of the AppService.\n   * This is used to interact with the backend.\n   */\n  appService = inject(AppService);\n\n  /**\n   * Instance of the Router.\n   * This is used to navigate among routes.\n   */\n  router = inject(Router);\n\n  /**\n   * Instance of the FormBuilder.\n   * This is used to create a reactive form for adding new areas.\n   */\n  formBuilder = inject(FormBuilder);\n\n  /**\n   * Instance of the FormGroup.\n   * This is used to create and manage the form controls.\n   */\n  formData = this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required])\n  });\n\n  /**\n   * An observable of the error status.\n   * This is used to manage the error state of the component.\n   */\n  error$ = this.appService.error$;\n  \n  /**\n   * Function to add a new area.\n   * It retrieves the alias value from the form and calls the addArea$ method of the AppService.\n   * Upon successful addition, it navigates back to the root route.\n   */\n  addArea() {\n    const alias = this.formData.get(\"alias\").value;\n    \n\n    console.log(alias);\n\n    this.appService.addArea$(alias)\n      .subscribe((completed) => {\n        if (completed) {\n          this.router.navigate([\"/\"]);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Alias\n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n    \n    \n      Conferma\n    \n  \n\n\n    \n\n    \n                \n                    ./area.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Alias                              Il campo è obbligatorio                                    Conferma      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaStatus.html":{"url":"interfaces/AreaStatus.html","title":"interface - AreaStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the status of an area.\nThe status field can be 'On' or 'Off'.\nThe id field is a unique identifier for the area.\nThe alias field is a friendly name for the area.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The friendly name of the area.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the area.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"On\" | \"Off\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"On\" | \"Off\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current status of the area.\nCan be either 'On' or 'Off'.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LampStatus {\n  /**\n   * The current status of the lamp.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the lamp.\n   */\n  id: string;\n  /**\n   * The friendly name of the lamp.\n   */\n  alias: string;\n  /**\n   * (Optional) Denotes whether a lamp's status change is in progress or not.\n   */\n  pending?: boolean;\n}\n\n/**\n * Represents the status of a sensor.\n * The `status` field can be 'On' or 'Off'.\n * The `id` field is a unique identifier for the sensor.\n * The `alias` field is a friendly name for the sensor.\n * The `pending` field is an optional field that denotes whether a sensor's status change is in progress or not.\n * The `geoPos` field represents the geographic position of the sensor.\n * The `actionRange` field indicates the range within which the sensor operates.\n */\nexport interface SensorStatus {\n  /**\n   * The current status of the sensor.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the sensor.\n   */\n  id: string;\n  /**\n   * The friendly name of the sensor.\n   */\n  alias: string;\n  /**\n   * (Optional) Denotes whether a sensor's status change is in progress or not.\n   */\n  pending?: boolean;\n  /**\n   * The geographic position of the sensor.\n   */\n  geoPos: string;\n  /**\n   * The range within which the sensor operates.\n   */\n  actionRange: string;\n}\n\n/**\n * Represents the status of an area.\n * The `status` field can be 'On' or 'Off'.\n * The `id` field is a unique identifier for the area.\n * The `alias` field is a friendly name for the area.\n */\nexport interface AreaStatus {\n  /**\n   * The current status of the area.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the area.\n   */\n  id: string;\n  /**\n   * The friendly name of the area.\n   */\n  alias: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AreasListComponent.html":{"url":"components/AreasListComponent.html","title":"component - AreasListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AreasListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/areas-list/areas-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list component for Areas.\nThis component is responsible for managing events and passing data to the presentational component.\nIt interfaces with the AppService to load data.\nThis component uses the OnPush change detection strategy.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-areas-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AreaButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./areas-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./areas-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areas$\n                            \n                            \n                                loading$\n                            \n                            \n                                service\n                            \n                            \n                                trackByAreaId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/areas-list/areas-list.component.ts:31\n                \n            \n\n\n            \n                \n                    Implementation of the OnInit lifecycle hook\nHere, the loadDataAreas method of the service is called.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        areas$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.areas$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:45\n                        \n                    \n\n            \n                \n                    An observable of the areas array.\nThis is used to keep track of the list of areas in real time.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:51\n                        \n                    \n\n            \n                \n                    An observable of the loading status.\nThis is used to manage the loading state of the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:39\n                        \n                    \n\n            \n                \n                    Instance of the AppService.\nThis is used to interact with the backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAreaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackByFunction\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/areas-list/areas-list.component.ts:57\n                        \n                    \n\n            \n                \n                    Function to track areas by id.\nThis helps Angular to optimize the rendering of lists.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { ChangeDetectionStrategy, Component, inject, OnInit, TrackByFunction } from \"@angular/core\";\n// Import for the AreaButtonComponent\nimport { AreaButtonComponent } from \"../../components/area-button/area-button.component\";\n// Import for the AreaStatus model\nimport { AreaStatus } from \"../../model\";\n// Import for the AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * A list component for Areas.\n * This component is responsible for managing events and passing data to the presentational component.\n * It interfaces with the AppService to load data.\n * This component uses the OnPush change detection strategy.\n */\n@Component ({\n  selector: \"app-areas-list\",\n  standalone: true,\n  imports: [CommonModule, AreaButtonComponent],\n  templateUrl: \"./areas-list.component.html\",\n  styleUrls: [\"./areas-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreasListComponent implements OnInit {\n  /**\n   * Implementation of the OnInit lifecycle hook\n   * Here, the loadDataAreas method of the service is called.\n   */\n  ngOnInit () {\n    this.service.loadDataAreas();\n  }\n  \n  /**\n   * Instance of the AppService.\n   * This is used to interact with the backend.\n   */\n  service = inject (AppService);\n\n  /**\n   * An observable of the areas array.\n   * This is used to keep track of the list of areas in real time.\n   */\n  areas$ = this.service.areas$;\n\n  /**\n   * An observable of the loading status.\n   * This is used to manage the loading state of the component.\n   */\n  loading$ = this.service.loading$;\n\n  /**\n   * Function to track areas by id.\n   * This helps Angular to optimize the rendering of lists.\n   */\n  trackByAreaId: TrackByFunction = (index: number, area: AreaStatus) => area.id;\n  \n  // As of now, there's no event management in this component.\n  // Any future events and their handlers should be documented here.\n}\n\n    \n\n    \n        \n    \n  \n  \n    \n\n    \n                \n                    ./areas-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AreasListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The AuthService class provides authentication-related functionalities.\nThe AuthService class should be injected into the desired components or services.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:81\n                \n            \n\n\n            \n                \n                    Retrieves the authentication token.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The authentication token stored in the local storage.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    Checks if the user is authenticated.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value indicating whether the user is authenticated.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n                    Checks if the user is logged in.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value indicating whether the user is logged in.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:102\n                \n            \n\n\n            \n                \n                    Logs in the user with the provided username and password.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe username of the user.\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe password of the user.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable representing the login result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:90\n                \n            \n\n\n            \n                \n                    Logs out the user by removing the token from the local storage and reloading the page.\nAfter logging out, the user will be redirected to the authentication page or any other desired page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\n\n/**\n * @class AuthService\n *\n * @description\n *\n * The `AuthService` class provides authentication-related functionalities.\n *\n * @usageNotes\n *\n * The `AuthService` class should be injected into the desired components or services.\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  \n  private loggedIn = false;\n  \n  constructor() {\n    if (this.isAuthenticated()) {\n      this.loggedIn = true;\n    }\n  }\n  \n  /**\n   * Checks if the user is logged in.\n   *\n   * @returns A boolean value indicating whether the user is logged in.\n   */\n  isLoggedIn(): boolean {\n    return this.loggedIn;\n  }\n  \n  /**\n   * Checks if the user is authenticated.\n   *\n   * @returns A boolean value indicating whether the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!localStorage.getItem(\"token\");\n  }\n  \n  /**\n   * Retrieves the authentication token.\n   *\n   * @returns The authentication token stored in the local storage.\n   */\n  getToken(): string {\n    return localStorage.getItem(\"token\");\n  }\n  \n  /**\n   * Logs out the user by removing the token from the local storage and reloading the page.\n   * \n   * After logging out, the user will be redirected to the authentication page or any other desired page.\n   */\n  logout(): void {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  }\n  \n  /**\n   * Logs in the user with the provided username and password.\n   *\n   * @param username - The username of the user.\n   * @param password - The password of the user.\n   * @returns An Observable representing the login result.\n   */\n  login(username: string, password: string): Observable {\n    localStorage.setItem(\"token\", \"blablabla\");\n    this.loggedIn = true;\n    return of(true);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationComponent.html":{"url":"components/AuthenticationComponent.html","title":"component - AuthenticationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthenticationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/authentication/authentication.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Authentication.\nThis component provides a login form.\nIt interacts with the AuthService to authenticate a user and navigate to the private area upon successful login.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            HttpClientModule\n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./authentication.component.css\n            \n\n\n\n            \n                templateUrl\n                ./authentication.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/authentication/authentication.component.ts:75\n                \n            \n\n\n            \n                \n                    Function to login a user.\nIt retrieves the form data and calls the login method of the AuthService.\nUpon successful login, it navigates to the private area.\nIf login fails, it sets the errorMessage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/authentication/authentication.component.ts:65\n                \n            \n\n\n            \n                \n                    Angular's lifecycle hook.\nIt removes the token from local storage whenever this component is initialized.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:32\n                        \n                    \n\n            \n                \n                    Instance of the AuthService.\nThis is used to authenticate a user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:59\n                        \n                    \n\n            \n                \n                    A variable to store error message.\nThis is used to display error messages to the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:44\n                        \n                    \n\n            \n                \n                    Instance of the FormBuilder.\nThis is used to create a reactive form for the login functionality.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group ({\n    username: this.formBuilder.control (\"\", [Validators.required]),\n    password: this.formBuilder.control (\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:50\n                        \n                    \n\n            \n                \n                    Instance of the FormGroup.\nThis is used to create and manage the form controls.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/authentication/authentication.component.ts:38\n                        \n                    \n\n            \n                \n                    Instance of the Router.\nThis is used to navigate among routes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary for API calls\nimport { HttpClientModule } from \"@angular/common/http\";\n// Necessary imports from Angular core\nimport { Component, inject, OnInit } from \"@angular/core\";\n// Imports for the form controls\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import for the Router\nimport { Router } from \"@angular/router\";\n// Import for the AuthService\nimport { AuthService } from \"../../services/auth.service\";\n\n/**\n * Component for Authentication.\n * This component provides a login form.\n * It interacts with the AuthService to authenticate a user and navigate to the private area upon successful login.\n */\n@Component ({\n  selector: \"app-authentication\",\n  templateUrl: \"./authentication.component.html\",\n  styleUrls: [\"./authentication.component.css\"],\n  standalone: true,\n  imports: [HttpClientModule, CommonModule, ReactiveFormsModule, FormsModule]\n})\nexport class AuthenticationComponent implements OnInit {\n  \n  /**\n   * Instance of the AuthService.\n   * This is used to authenticate a user.\n   */\n  authService = inject (AuthService);\n\n  /**\n   * Instance of the Router.\n   * This is used to navigate among routes.\n   */\n  router = inject (Router);\n\n  /**\n   * Instance of the FormBuilder.\n   * This is used to create a reactive form for the login functionality.\n   */\n  formBuilder = inject (FormBuilder);\n\n  /**\n   * Instance of the FormGroup.\n   * This is used to create and manage the form controls.\n   */\n  formData = this.formBuilder.group ({\n    username: this.formBuilder.control (\"\", [Validators.required]),\n    password: this.formBuilder.control (\"\", [Validators.required])\n  });\n\n  /**\n   * A variable to store error message.\n   * This is used to display error messages to the user.\n   */\n  errorMessage: string;\n\n  /**\n   * Angular's lifecycle hook.\n   * It removes the token from local storage whenever this component is initialized.\n   */\n  ngOnInit () {\n    localStorage.removeItem (\"token\");\n  }\n\n  /**\n   * Function to login a user.\n   * It retrieves the form data and calls the login method of the AuthService.\n   * Upon successful login, it navigates to the private area.\n   * If login fails, it sets the errorMessage.\n   */\n  login () {\n    const credentials = this.formData.value;\n    this.authService.login (credentials.username, credentials.password)\n    .subscribe ((logged) => {\n      if (logged) {\n        this.router.navigate ([\"/private-area\"]);\n      } else {\n        this.errorMessage = \"Invalid credentials\";\n      }\n    });\n  }\n}\n\n    \n\n    \n        -->\n-->\n-->\n-->\n-->\nLogin-->\n-->\n-->\nUsername:-->\n-->\n-->\n-->\nPassword:-->\n-->\n-->\n{{ errorMessage }}-->\n-->\nLogin-->\n-->\n-->\n-->\n-->\n-->\n-->\n-->\n\n  \n    \n      \n        \n      \n      Please sign in\n      \n        \n        Username\n      \n      \n        \n        Password\n      \n      Sign in\n      &copy; 2023\n    \n  \n\n\n    \n\n    \n                \n                    ./authentication.component.css\n                \n                \n.body-container {\n    display: flex;\n    align-items: center;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    background-color: #f5f5f5;\n    min-height: 100vh;\n}\n\n.form-signin {\n    max-width: 330px;\n    padding: 15px;\n}\n\n.form-signin .form-floating:focus-within {\n    z-index: 2;\n}\n\n.form-signin input[type=\"email\"] {\n    margin-bottom: -1px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n}\n\n.form-signin input[type=\"password\"] {\n    margin-bottom: 10px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->-->-->-->-->Login-->-->-->Username:-->-->-->-->Password:-->-->-->{{ errorMessage }}-->-->Login-->-->-->-->-->-->-->-->                                Please sign in                      Username                            Password            Sign in      © 2023      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LampButtonComponent.html":{"url":"components/LampButtonComponent.html","title":"component - LampButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LampButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/lamp-button/lamp-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Lamp Button.\nThis is a presentational component which receives data as an Input and emits events as Output.\nIt's responsible for displaying a single lamp status and emits events when actions are taken on it.\nThis component uses the OnPush change detection strategy.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lamp-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./lamp-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lamp-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                last\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleLamp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         LampStatus\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/lamp-button/lamp-button.component.ts:30\n                            \n                        \n                \n                    \n                        Input data of type LampStatus.\nThis is passed in from a parent component and represents the status of a particular lamp.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleLamp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/lamp-button/lamp-button.component.ts:36\n                            \n                        \n                \n                    \n                        Output EventEmitter to be emitted when lamp status is toggled.\nIt emits an event whenever a user interacts with this component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Default value : last\n                    \n                \n                    \n                        \n                                Defined in src/app/components/lamp-button/lamp-button.component.ts:42\n                        \n                    \n\n            \n                \n                    An RxJS operator that emits only the last value (complete) of an observable sequence.\nIt's protected and can be used within the component and its descendants.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\n// Import from RxJS library\nimport { last } from \"rxjs\";\n// Import for the LampStatus model\nimport { LampStatus } from \"../../model\";\n\n/**\n * Component for Lamp Button.\n * This is a presentational component which receives data as an Input and emits events as Output.\n * It's responsible for displaying a single lamp status and emits events when actions are taken on it.\n * This component uses the OnPush change detection strategy.\n */\n@Component ({\n  selector: \"app-lamp-button\",\n  templateUrl: \"./lamp-button.component.html\",\n  styleUrls: [\"./lamp-button.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule],\n  standalone: true\n})\n\nexport class LampButtonComponent {\n  /**\n   * Input data of type LampStatus.\n   * This is passed in from a parent component and represents the status of a particular lamp.\n   */\n  @Input () data: LampStatus;\n  \n  /**\n   * Output EventEmitter to be emitted when lamp status is toggled.\n   * It emits an event whenever a user interacts with this component.\n   */\n  @Output () toggleLamp = new EventEmitter ();\n\n  /**\n   * An RxJS operator that emits only the last value (complete) of an observable sequence.\n   * It's protected and can be used within the component and its descendants.\n   */\n  protected readonly last = last;\n}\n\n    \n\n    \n        \n  \n    {{ data.alias }}\n  \n  \n    \n      \n      \n      \n    \n    {{data.status}}\n  \n\n\n    \n\n    \n                \n                    ./lamp-button.component.css\n                \n                button {\n    background-color: transparent;\n    border: none;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.button-header {\n    display: block;\n    border-bottom: 1px solid #e5e5e5;\n    text-align: left;\n}\n\nimg {\n    width: 150px;\n    height: 150px;\n}\n\n.On {\n    background: #ffebc6;\n}\n\n.Off {\n    background: whitesmoke;\n}\n\n\n@keyframes spin {\n    0% {\n        transform: rotateY(0deg);\n    }\n    100% {\n        transform: rotateY(360deg);\n    }\n}\n\n.button-spin {\n    animation-name: spin;\n    animation-duration: .2s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ data.alias }}                                  {{data.status}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LampButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LampComponent.html":{"url":"components/LampComponent.html","title":"component - LampComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LampComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/lamp/lamp.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Lamp.\nThis component contains a form for adding a new lamp.\nIt interacts with the AppService to add new lamps and navigate back to the root route upon successful addition.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lamp\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./lamp.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lamp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                error$\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLamp\n                        \n                    \n                \n            \n            \n                \naddLamp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/lamp/lamp.component.ts:62\n                \n            \n\n\n            \n                \n                    Function to add a new lamp.\nIt retrieves the alias value from the form and calls the addLamp$ method of the AppService.\nUpon successful addition, it navigates back to the root route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:29\n                        \n                    \n\n            \n                \n                    Instance of the AppService.\nThis is used to interact with the backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.error$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:55\n                        \n                    \n\n            \n                \n                    An observable of the error status.\nThis is used to manage the error state of the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:41\n                        \n                    \n\n            \n                \n                    Instance of the FormBuilder.\nThis is used to create a reactive form for adding new lamps.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group ({\n    alias: this.formBuilder.control (\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:47\n                        \n                    \n\n            \n                \n                    Instance of the FormGroup.\nThis is used to create and manage the form controls.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamp/lamp.component.ts:35\n                        \n                    \n\n            \n                \n                    Instance of the Router.\nThis is used to navigate among routes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { Component, inject } from \"@angular/core\";\n// Imports for the form controls\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import for the Router\nimport { Router, RouterModule } from \"@angular/router\";\n// Import for the AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Component for Lamp.\n * This component contains a form for adding a new lamp.\n * It interacts with the AppService to add new lamps and navigate back to the root route upon successful addition.\n */\n@Component ({\n  selector: \"app-lamp\",\n  templateUrl: \"./lamp.component.html\",\n  styleUrls: [\"./lamp.component.css\"],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule]\n})\nexport class LampComponent {\n  /**\n   * Instance of the AppService.\n   * This is used to interact with the backend.\n   */\n  appService = inject (AppService);\n\n  /**\n   * Instance of the Router.\n   * This is used to navigate among routes.\n   */\n  router = inject (Router);\n\n  /**\n   * Instance of the FormBuilder.\n   * This is used to create a reactive form for adding new lamps.\n   */\n  formBuilder = inject (FormBuilder);\n\n  /**\n   * Instance of the FormGroup.\n   * This is used to create and manage the form controls.\n   */\n  formData = this.formBuilder.group ({\n    alias: this.formBuilder.control (\"\", [Validators.required])\n  });\n\n  /**\n   * An observable of the error status.\n   * This is used to manage the error state of the component.\n   */\n  error$ = this.appService.error$;\n  \n  /**\n   * Function to add a new lamp.\n   * It retrieves the alias value from the form and calls the addLamp$ method of the AppService.\n   * Upon successful addition, it navigates back to the root route.\n   */\n  addLamp () {\n    this.appService.addLamp$ (this.formData.get (\"alias\").value)\n    .subscribe ((completed) => {\n      if (completed) {\n        this.router.navigate ([\"/\"]);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Alias\n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n    \n      Conferma\n    \n  \n\n\n    \n\n    \n                \n                    ./lamp.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Alias                              Il campo è obbligatorio                                Conferma      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LampComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LampStatus.html":{"url":"interfaces/LampStatus.html","title":"interface - LampStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LampStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the status of a lamp.\nThe status field can be 'On' or 'Off'.\nThe id field is a unique identifier for the lamp.\nThe alias field is a friendly name for the lamp.\nThe pending field is an optional field that denotes whether a lamp's status change is in progress or not.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The friendly name of the lamp.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the lamp.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Denotes whether a lamp's status change is in progress or not.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"On\" | \"Off\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"On\" | \"Off\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current status of the lamp.\nCan be either 'On' or 'Off'.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LampStatus {\n  /**\n   * The current status of the lamp.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the lamp.\n   */\n  id: string;\n  /**\n   * The friendly name of the lamp.\n   */\n  alias: string;\n  /**\n   * (Optional) Denotes whether a lamp's status change is in progress or not.\n   */\n  pending?: boolean;\n}\n\n/**\n * Represents the status of a sensor.\n * The `status` field can be 'On' or 'Off'.\n * The `id` field is a unique identifier for the sensor.\n * The `alias` field is a friendly name for the sensor.\n * The `pending` field is an optional field that denotes whether a sensor's status change is in progress or not.\n * The `geoPos` field represents the geographic position of the sensor.\n * The `actionRange` field indicates the range within which the sensor operates.\n */\nexport interface SensorStatus {\n  /**\n   * The current status of the sensor.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the sensor.\n   */\n  id: string;\n  /**\n   * The friendly name of the sensor.\n   */\n  alias: string;\n  /**\n   * (Optional) Denotes whether a sensor's status change is in progress or not.\n   */\n  pending?: boolean;\n  /**\n   * The geographic position of the sensor.\n   */\n  geoPos: string;\n  /**\n   * The range within which the sensor operates.\n   */\n  actionRange: string;\n}\n\n/**\n * Represents the status of an area.\n * The `status` field can be 'On' or 'Off'.\n * The `id` field is a unique identifier for the area.\n * The `alias` field is a friendly name for the area.\n */\nexport interface AreaStatus {\n  /**\n   * The current status of the area.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the area.\n   */\n  id: string;\n  /**\n   * The friendly name of the area.\n   */\n  alias: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LampsListComponent.html":{"url":"components/LampsListComponent.html","title":"component - LampsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LampsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/lamps-list/lamps-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list component for Lamps.\nThis component is responsible for managing events and passing data to the presentational component.\nIt interfaces with the AppService to load data and toggle lamp status.\nThis component uses the OnPush change detection strategy.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lamps-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LampButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./lamps-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lamps-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lamps$\n                            \n                            \n                                loading$\n                            \n                            \n                                service\n                            \n                            \n                                trackByLampId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/lamps-list/lamps-list.component.ts:31\n                \n            \n\n\n            \n                \n                    Implementation of the OnInit lifecycle hook\nHere, the loadData method of the service is called.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLamp\n                        \n                    \n                \n            \n            \n                \ntoggleLamp(lamp: LampStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/lamps-list/lamps-list.component.ts:64\n                \n            \n\n\n            \n                \n                    Method to toggle the status of a lamp.\nThis method makes use of the AppService to toggle the lamp.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lamp\n                                    \n                                                LampStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe LampStatus instance to toggle\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lamps$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.lamps$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:45\n                        \n                    \n\n            \n                \n                    An observable of the lamps array.\nThis is used to keep track of the list of lamps in real time.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:51\n                        \n                    \n\n            \n                \n                    An observable of the loading status.\nThis is used to manage the loading state of the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:39\n                        \n                    \n\n            \n                \n                    Instance of the AppService.\nThis is used to interact with the backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByLampId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackByFunction\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/lamps-list/lamps-list.component.ts:57\n                        \n                    \n\n            \n                \n                    Function to track lamps by id.\nThis helps Angular to optimize the rendering of lists.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { ChangeDetectionStrategy, Component, inject, OnInit, TrackByFunction } from \"@angular/core\";\n// Import for the LampButtonComponent\nimport { LampButtonComponent } from \"../../components/lamp-button/lamp-button.component\";\n// Import for the LampStatus model\nimport { LampStatus } from \"../../model\";\n// Import for the AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * A list component for Lamps.\n * This component is responsible for managing events and passing data to the presentational component.\n * It interfaces with the AppService to load data and toggle lamp status.\n * This component uses the OnPush change detection strategy.\n */\n@Component ({\n  selector: \"app-lamps-list\",\n  standalone: true,\n  imports: [CommonModule, LampButtonComponent],\n  templateUrl: \"./lamps-list.component.html\",\n  styleUrls: [\"./lamps-list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LampsListComponent implements OnInit {\n  /**\n   * Implementation of the OnInit lifecycle hook\n   * Here, the loadData method of the service is called.\n   */\n  ngOnInit () {\n    this.service.loadData ();\n  }\n  \n  /**\n   * Instance of the AppService.\n   * This is used to interact with the backend.\n   */\n  service = inject (AppService);\n\n  /**\n   * An observable of the lamps array.\n   * This is used to keep track of the list of lamps in real time.\n   */\n  lamps$ = this.service.lamps$;\n\n  /**\n   * An observable of the loading status.\n   * This is used to manage the loading state of the component.\n   */\n  loading$ = this.service.loading$;\n\n  /**\n   * Function to track lamps by id.\n   * This helps Angular to optimize the rendering of lists.\n   */\n  trackByLampId: TrackByFunction = (index: number, lamp: LampStatus) => lamp.id;\n  \n  /**\n   * Method to toggle the status of a lamp.\n   * This method makes use of the AppService to toggle the lamp.\n   * @param lamp - The LampStatus instance to toggle\n   */\n  toggleLamp (lamp: LampStatus) {\n    this.service.toggleLamp (lamp);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./lamps-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LampsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivateAreaComponent.html":{"url":"components/PrivateAreaComponent.html","title":"component - PrivateAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivateAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/private-area/private-area.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for PrivateArea.\nThis component represents a private area of the application accessible to authenticated users.\nIt interacts with the AppService to manage the loading state of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-private-area\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n            \n                styleUrls\n                ./private-area.component.css\n            \n\n\n\n            \n                templateUrl\n                ./private-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject (AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/private-area/private-area.component.ts:27\n                        \n                    \n\n            \n                \n                    Instance of the AppService.\nThis is used to interact with the backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/private-area/private-area.component.ts:33\n                        \n                    \n\n            \n                \n                    An observable of the loading status.\nThis is used to manage the loading state of the component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { Component, inject } from \"@angular/core\";\n// Imports for the router directives\nimport { RouterLink, RouterLinkActive, RouterOutlet } from \"@angular/router\";\n// Import for the AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Component for PrivateArea.\n * This component represents a private area of the application accessible to authenticated users.\n * It interacts with the AppService to manage the loading state of the application.\n */\n@Component ({\n  selector: \"app-private-area\",\n  templateUrl: \"./private-area.component.html\",\n  styleUrls: [\"./private-area.component.css\"],\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, RouterLink, RouterLinkActive]\n})\nexport class PrivateAreaComponent {\n  /**\n   * Instance of the AppService.\n   * This is used to interact with the backend.\n   */\n  appService = inject (AppService);\n\n  /**\n   * An observable of the loading status.\n   * This is used to manage the loading state of the component.\n   */\n  loading$ = this.appService.loading$;\n  \n}\n\n    \n\n    \n        \n  \n    \n      \n        Dashboard Lampioni\n      \n      \n        Dashboard Sensori\n      \n      \n        Dashboard Area\n      \n      \n        Aggiungi Lampione\n      \n      \n        Aggiungi Sensore\n      \n      \n        Aggiungi Area\n      \n    \n    \n    \n      \n        Logout\n      \n    \n  \n  \n    \n      \n      \n    \n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./private-area.component.css\n                \n                .loading-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 9999;\n    width: 100%;\n    height: 100%;\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out;\n}\n\n.loading-backdrop.loading {\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    visibility: visible;\n    opacity: 1;\n\n}\n\n\n/* SPINNER */\n.lds-ripple {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n}\n\n.lds-ripple div {\n    position: absolute;\n    border: 4px solid #fff;\n    opacity: 1;\n    border-radius: 50%;\n    animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n}\n\n.lds-ripple div:nth-child(2) {\n    animation-delay: -0.5s;\n}\n\n@keyframes lds-ripple {\n    0% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 0;\n    }\n    4.9% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 0;\n    }\n    5% {\n        top: 36px;\n        left: 36px;\n        width: 0;\n        height: 0;\n        opacity: 1;\n    }\n    100% {\n        top: 0px;\n        left: 0px;\n        width: 72px;\n        height: 72px;\n        opacity: 0;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Dashboard Lampioni                    Dashboard Sensori                    Dashboard Area                    Aggiungi Lampione                    Aggiungi Sensore                    Aggiungi Area                                Logout                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivateAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SensorButtonComponent.html":{"url":"components/SensorButtonComponent.html","title":"component - SensorButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SensorButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sensor-button/sensor-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Sensor Button.\nThis is a presentational component which receives data as an Input and emits events as Output.\nIt's responsible for displaying a single sensor status and emits events when actions are taken on it.\nThis component uses the OnPush change detection strategy.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sensor-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sensor-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sensor-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                last\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSensor\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         SensorStatus\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sensor-button/sensor-button.component.ts:34\n                            \n                        \n                \n                    \n                        Input data of type SensorStatus.\nThis is passed in from a parent component and represents the status of a particular sensor.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSensor\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sensor-button/sensor-button.component.ts:40\n                            \n                        \n                \n                    \n                        Output EventEmitter to be emitted when sensor status is toggled.\nIt emits an event whenever a user interacts with this component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Default value : last\n                    \n                \n                    \n                        \n                                Defined in src/app/components/sensor-button/sensor-button.component.ts:46\n                        \n                    \n\n            \n                \n                    An RxJS operator that emits only the last value (complete) of an observable sequence.\nIt's protected and can be used within the component and its descendants.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\n// Import from RxJS library\nimport { last } from \"rxjs\";\n// Import for the SensorStatus model\nimport { SensorStatus } from \"../../model\";\n\n/**\n * Component for Sensor Button.\n * This is a presentational component which receives data as an Input and emits events as Output.\n * It's responsible for displaying a single sensor status and emits events when actions are taken on it.\n * This component uses the OnPush change detection strategy.\n */\n@Component({\n  selector: 'app-sensor-button',\n  templateUrl: './sensor-button.component.html',\n  styleUrls: ['./sensor-button.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule],\n  standalone: true\n})\nexport class SensorButtonComponent {\n  /**\n   * Property to enable dynamic properties addition to the component\n   */\n  [x: string]: any;\n\n  /**\n   * Input data of type SensorStatus.\n   * This is passed in from a parent component and represents the status of a particular sensor.\n   */\n  @Input() data: SensorStatus;\n\n  /**\n   * Output EventEmitter to be emitted when sensor status is toggled.\n   * It emits an event whenever a user interacts with this component.\n   */\n  @Output() toggleSensor = new EventEmitter();\n\n  /**\n   * An RxJS operator that emits only the last value (complete) of an observable sequence.\n   * It's protected and can be used within the component and its descendants.\n   */\n  protected readonly last = last;\n}\n\n    \n\n    \n        \n  \n    Nome : {{ data.alias }}  Area geografica : {{data.geoPos}}  Portata: {{data.actionRange}}\n  \n  \n    \n      \n        \n      \n        \n    {{data.alias}}\n  \n\n\n    \n\n    \n                \n                    ./sensor-button.component.css\n                \n                button {\n    background-color: transparent;\n    border: none;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 5px;\n}\n\n.button-header {\n    display: block;\n    border-bottom: 1px solid #e5e5e5;\n    text-align: left;\n}\n\nimg {\n    width: 150px;\n    height: 150px;\n}\n.image-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n.Off {\n    background: whitesmoke;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Nome : {{ data.alias }}  Area geografica : {{data.geoPos}}  Portata: {{data.actionRange}}                                        {{data.alias}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SensorButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SensorComponent.html":{"url":"components/SensorComponent.html","title":"component - SensorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SensorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/sensor/sensor.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for Sensor.\nThis component contains a form for adding a new sensor.\nIt interacts with the AppService to add new sensors and navigate back to the root route upon successful addition.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sensor\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./sensor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sensor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appService\n                            \n                            \n                                error$\n                            \n                            \n                                formBuilder\n                            \n                            \n                                formData\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSensor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSensor\n                        \n                    \n                \n            \n            \n                \naddSensor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/sensor/sensor.component.ts:64\n                \n            \n\n\n            \n                \n                    Function to add a new sensor.\nIt retrieves the alias, geoPos, and actionRange values from the form and calls the addSensor$ method of the AppService.\nUpon successful addition, it navigates back to the root route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:29\n                        \n                    \n\n            \n                \n                    Instance of the AppService.\nThis is used to interact with the backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.appService.error$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:57\n                        \n                    \n\n            \n                \n                    An observable of the error status.\nThis is used to manage the error state of the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:41\n                        \n                    \n\n            \n                \n                    Instance of the FormBuilder.\nThis is used to create a reactive form for adding new sensors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required]),\n    geoPos: this.formBuilder.control(\"\", [Validators.required]),\n    actionRange: this.formBuilder.control(\"\", [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:47\n                        \n                    \n\n            \n                \n                    Instance of the FormGroup.\nThis is used to create and manage the form controls.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensor/sensor.component.ts:35\n                        \n                    \n\n            \n                \n                    Instance of the Router.\nThis is used to navigate among routes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\n// Necessary imports from Angular core\nimport { Component, inject } from \"@angular/core\";\n// Imports for the form controls\nimport { FormBuilder, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\n// Import for the Router\nimport { Router, RouterModule } from \"@angular/router\";\n// Import for the AppService\nimport { AppService } from \"../../services/app.service\";\n\n/**\n * Component for Sensor.\n * This component contains a form for adding a new sensor.\n * It interacts with the AppService to add new sensors and navigate back to the root route upon successful addition.\n */\n@Component({\n  selector: \"app-sensor\",\n  templateUrl: \"./sensor.component.html\",\n  styleUrls: [\"./sensor.component.css\"],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule]\n})\nexport class SensorComponent {\n  /**\n   * Instance of the AppService.\n   * This is used to interact with the backend.\n   */\n  appService = inject(AppService);\n\n  /**\n   * Instance of the Router.\n   * This is used to navigate among routes.\n   */\n  router = inject(Router);\n\n  /**\n   * Instance of the FormBuilder.\n   * This is used to create a reactive form for adding new sensors.\n   */\n  formBuilder = inject(FormBuilder);\n\n  /**\n   * Instance of the FormGroup.\n   * This is used to create and manage the form controls.\n   */\n  formData = this.formBuilder.group({\n    alias: this.formBuilder.control(\"\", [Validators.required]),\n    geoPos: this.formBuilder.control(\"\", [Validators.required]),\n    actionRange: this.formBuilder.control(\"\", [Validators.required])\n  });\n\n  /**\n   * An observable of the error status.\n   * This is used to manage the error state of the component.\n   */\n  error$ = this.appService.error$;\n\n  /**\n   * Function to add a new sensor.\n   * It retrieves the alias, geoPos, and actionRange values from the form and calls the addSensor$ method of the AppService.\n   * Upon successful addition, it navigates back to the root route.\n   */\n  addSensor() {\n    const alias = this.formData.get(\"alias\").value;\n    const geoPos = this.formData.get(\"geoPos\").value;\n    const actionRange = this.formData.get(\"actionRange\").value;\n\n    this.appService.addSensor$(alias, geoPos, actionRange)\n      .subscribe((completed) => {\n        if (completed) {\n          this.router.navigate([\"/\"]);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Alias\n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n      \n        \n        Posizione geografica sensore \n        \n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n      \n        \n        Raggio d azione sensore  \n        \n      \n      \n        \n          Il campo è obbligatorio\n        \n      \n    \n    \n    \n      Conferma\n    \n  \n\n\n    \n\n    \n                \n                    ./sensor.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Alias                              Il campo è obbligatorio                                            Posizione geografica sensore                                       Il campo è obbligatorio                                            Raggio d azione sensore                                        Il campo è obbligatorio                                Conferma      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SensorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SensorStatus.html":{"url":"interfaces/SensorStatus.html","title":"interface - SensorStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SensorStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the status of a sensor.\nThe status field can be 'On' or 'Off'.\nThe id field is a unique identifier for the sensor.\nThe alias field is a friendly name for the sensor.\nThe pending field is an optional field that denotes whether a sensor's status change is in progress or not.\nThe geoPos field represents the geographic position of the sensor.\nThe actionRange field indicates the range within which the sensor operates.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionRange\n                                        \n                                \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            geoPos\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The range within which the sensor operates.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The friendly name of the sensor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoPos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The geographic position of the sensor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of the sensor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Denotes whether a sensor's status change is in progress or not.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"On\" | \"Off\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"On\" | \"Off\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current status of the sensor.\nCan be either 'On' or 'Off'.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LampStatus {\n  /**\n   * The current status of the lamp.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the lamp.\n   */\n  id: string;\n  /**\n   * The friendly name of the lamp.\n   */\n  alias: string;\n  /**\n   * (Optional) Denotes whether a lamp's status change is in progress or not.\n   */\n  pending?: boolean;\n}\n\n/**\n * Represents the status of a sensor.\n * The `status` field can be 'On' or 'Off'.\n * The `id` field is a unique identifier for the sensor.\n * The `alias` field is a friendly name for the sensor.\n * The `pending` field is an optional field that denotes whether a sensor's status change is in progress or not.\n * The `geoPos` field represents the geographic position of the sensor.\n * The `actionRange` field indicates the range within which the sensor operates.\n */\nexport interface SensorStatus {\n  /**\n   * The current status of the sensor.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the sensor.\n   */\n  id: string;\n  /**\n   * The friendly name of the sensor.\n   */\n  alias: string;\n  /**\n   * (Optional) Denotes whether a sensor's status change is in progress or not.\n   */\n  pending?: boolean;\n  /**\n   * The geographic position of the sensor.\n   */\n  geoPos: string;\n  /**\n   * The range within which the sensor operates.\n   */\n  actionRange: string;\n}\n\n/**\n * Represents the status of an area.\n * The `status` field can be 'On' or 'Off'.\n * The `id` field is a unique identifier for the area.\n * The `alias` field is a friendly name for the area.\n */\nexport interface AreaStatus {\n  /**\n   * The current status of the area.\n   * Can be either 'On' or 'Off'.\n   */\n  status: \"On\" | \"Off\";\n  /**\n   * The unique identifier of the area.\n   */\n  id: string;\n  /**\n   * The friendly name of the area.\n   */\n  alias: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SensorsListComponent.html":{"url":"components/SensorsListComponent.html","title":"component - SensorsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SensorsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feature/sensors-list/sensors-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sensors-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SensorButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./sensors-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sensors-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                sensors$\n                            \n                            \n                                service\n                            \n                            \n                                trackBySensorId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSensor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/sensors-list/sensors-list.component.ts:42\n                \n            \n\n\n            \n                \n                    Initializes the component and loads sensor data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSensor\n                        \n                    \n                \n            \n            \n                \ntoggleSensor(sensor: SensorStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feature/sensors-list/sensors-list.component.ts:84\n                \n            \n\n\n            \n                \n                    Toggles the status of a sensor by invoking the toggleSensor method of the AppService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sensor\n                                    \n                                                SensorStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sensor object to toggle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.loading$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:68\n                        \n                    \n\n            \n                \n                    Represents the loading state as an observable stream.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.service.sensors$\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:60\n                        \n                    \n\n            \n                \n                    Represents the sensor data as an observable stream.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppService)\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:52\n                        \n                    \n\n            \n                \n                    Injects the AppService to communicate with the backend and manage sensor data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackBySensorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TrackByFunction\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/feature/sensors-list/sensors-list.component.ts:76\n                        \n                    \n\n            \n                \n                    Defines a track by function for the ngFor directive to improve rendering performance.\nUses the sensor's ID as the unique identifier.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { ChangeDetectionStrategy, Component, inject, OnInit, TrackByFunction } from \"@angular/core\";\n\nimport { SensorStatus } from \"../../model\";\nimport { AppService } from \"../../services/app.service\";\nimport { SensorButtonComponent } from \"src/app/components/sensor-button/sensor-button.component\";\n\n@Component({\n  selector: 'app-sensors-list',\n  templateUrl: './sensors-list.component.html',\n  styleUrls: ['./sensors-list.component.css'],\n  standalone: true,\n  imports: [CommonModule, SensorButtonComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SensorsListComponent implements OnInit {\n\n  /**\n   * Initializes the component and loads sensor data.\n   *\n   * @memberof SensorsListComponent\n   */\n  ngOnInit() {\n    this.service.loadDataSensors();\n  }\n\n  /**\n   * Injects the `AppService` to communicate with the backend and manage sensor data.\n   *\n   * @type {AppService}\n   * @memberof SensorsListComponent\n   */\n  service = inject(AppService);\n\n  /**\n   * Represents the sensor data as an observable stream.\n   *\n   * @type {*}\n   * @memberof SensorsListComponent\n   */\n  sensors$ = this.service.sensors$;\n\n  /**\n   * Represents the loading state as an observable stream.\n   *\n   * @type {*}\n   * @memberof SensorsListComponent\n   */\n  loading$ = this.service.loading$;\n\n  /**\n   * Defines a track by function for the ngFor directive to improve rendering performance.\n   * Uses the sensor's ID as the unique identifier.\n   *\n   * @memberof SensorsListComponent\n   */\n  trackBySensorId: TrackByFunction = (index: number, sensor: SensorStatus) => sensor.id;\n\n  /**\n   * Toggles the status of a sensor by invoking the `toggleSensor` method of the `AppService`.\n   *\n   * @param {SensorStatus} sensor The sensor object to toggle.\n   * @memberof SensorsListComponent\n   */\n  toggleSensor(sensor: SensorStatus) {\n    this.service.toggleSensor(sensor);\n  }\n}\n\n    \n\n    \n        \n    \n  \n  \n    \n\n    \n                \n                    ./sensors-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaButtonComponent', 'selector': 'app-area-button'},{'name': 'AreaComponent', 'selector': 'app-area'},{'name': 'AreasListComponent', 'selector': 'app-areas-list'},{'name': 'AuthenticationComponent', 'selector': 'app-authentication'},{'name': 'LampButtonComponent', 'selector': 'app-lamp-button'},{'name': 'LampComponent', 'selector': 'app-lamp'},{'name': 'LampsListComponent', 'selector': 'app-lamps-list'},{'name': 'PrivateAreaComponent', 'selector': 'app-private-area'},{'name': 'SensorButtonComponent', 'selector': 'app-sensor-button'},{'name': 'SensorComponent', 'selector': 'app-sensor'},{'name': 'SensorsListComponent', 'selector': 'app-sensors-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SensorsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Store.html":{"url":"interfaces/Store.html","title":"interface - Store","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the application state store.\nIt contains arrays of lamps, sensors, and areas,\nas well as loading and error flags.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areas\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            firstLoad\n                                        \n                                \n                                \n                                        \n                                            lamps\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            sensors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areas:         AreaStatus[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaStatus[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of area statuses representing the state of areas in the application.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A string representing an error message in case of any errors.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag indicating whether it is the first load of data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lamps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lamps:         LampStatus[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LampStatus[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of lamp statuses representing the state of lamps in the application.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A flag indicating whether data is currently being loaded or fetched.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sensors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sensors:         SensorStatus[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SensorStatus[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of sensor statuses representing the state of sensors in the application.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatusCode } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, delay, map, Observable, of, switchMap, tap } from \"rxjs\";\nimport { LampStatus, SensorStatus, AreaStatus } from \"../model\";\nimport { ApiService } from \"./api.service\";\n\n/**\n * Interface representing the application state store.\n * It contains arrays of lamps, sensors, and areas,\n * as well as loading and error flags.\n */\ninterface Store {\n  /**\n   * An array of lamp statuses representing the state of lamps in the application.\n   */\n  lamps: LampStatus[];\n  /**\n   * An array of sensor statuses representing the state of sensors in the application.\n   */\n  sensors: SensorStatus[];\n  /**\n   * An array of area statuses representing the state of areas in the application.\n   */\n  areas: AreaStatus[];\n  /**\n   * A flag indicating whether data is currently being loaded or fetched.\n   */\n  loading: boolean;\n  /**\n   * A flag indicating whether it is the first load of data.\n   */\n  firstLoad: boolean;\n  /**\n   * A string representing an error message in case of any errors.\n   */\n  error: string;\n}\n\n\n/**\n * Initial state for the application store.\n * Contains empty arrays for lamps, sensors, and areas,\n * and sets the loading and firstLoad flags to false.\n */\nconst initialState: Store = {\n  lamps: [],\n  sensors: [],\n  areas: [],\n  loading: false,\n  firstLoad: true,\n  error: null\n};\n\n/**\n * The main service for managing application state.\n * Handles operations related to lamps, sensors, and areas, including\n * loading data from the API, managing errors, and updating state.\n */\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AppService {\n\n  /**\n   * Inject the ApiService.\n   */\n  api = inject(ApiService);\n\n  /**\n   * Define the application's main state store as a BehaviorSubject.\n   * This is an RxJS Subject that can emit new values to its subscribers\n   * and has the characteristic that it will always return the last value emitted to new subscribers.\n   * Here it's initialized with an initial state.\n   */\n\n  $store = new BehaviorSubject(initialState);\n  /**\n     * Define selectors for different pieces of state.\n     */\n  readonly lamps$ = this.$store.pipe(map(state => state.lamps));\n  readonly sensors$ = this.$store.pipe(map(state => state.sensors));\n  readonly areas$ = this.$store.pipe(map(state => state.areas));\n  readonly error$ = this.$store.pipe(map(state => state.error));\n  readonly loading$ = this.$store.pipe(map(state => state.loading), delay(0));\n  readonly firstLoad$ = this.$store.pipe(map(state => state.firstLoad));\n\n  /**\n   * Load lamp data from the API.\n   * Update the state with the new data, manage any errors,\n   * and stop the loading spinner when complete.\n   */\n  public loadData() {\n    this.startLoading();\n    this.api.getAllLamps$()\n      .subscribe({\n        next: (lamps) => {\n          this.$store.next({\n            ...this.$store.value,\n            lamps,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n  /**\n     * Load sensor data from the API.\n     * Update the state with the new data, manage any errors,\n     * and stop the loading spinner when complete.\n     */\n  public loadDataSensors() {\n    this.startLoading();\n    this.api.getAllSensors$()\n      .subscribe({\n        next: (sensors) => {\n          this.$store.next({\n            ...this.$store.value,\n            sensors,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n  /**\n     * Load area data from the API.\n     * Update the state with the new data, manage any errors,\n     * and stop the loading spinner when complete.\n     */\n  public loadDataAreas() {\n    this.startLoading();\n    this.api.getAllAreas$()\n      .subscribe({\n        next: (areas) => {\n          this.$store.next({\n            ...this.$store.value,\n            areas,\n            firstLoad: false\n          });\n        },\n        error: (error) => {\n          this.manageError(error);\n          this.stopLoading();\n        },\n        complete: () => {\n          this.stopLoading();\n        }\n      });\n  }\n\n\n  /**\n     * Start the loading spinner.\n     */\n  private startLoading() {\n    this.$store.next({\n      ...this.$store.value,\n      loading: true\n    });\n  }\n  /**\n     * Stop the loading spinner.\n     */\n  private stopLoading() {\n    this.$store.next({\n      ...this.$store.value,\n      loading: false\n    });\n  }\n  /**\n     * Update a lamp's pending status.\n     * This is used to show that a lamp's status is being changed.\n     */\n  private setLampPending(lamp: LampStatus, pending: boolean) {\n    this.$store.next({\n      ...this.$store.value,\n      lamps: this.$store.value.lamps.map(l => l.id === lamp.id ? { ...l, pending } : l)\n    });\n  }\n  /**\n     * Toggle a lamp's status.\n     * Call the API to update the lamp's status,\n     * then reload the lamp data to reflect the changes.\n     */\n  public toggleLamp(lamp: LampStatus) {\n    this.setLampPending(lamp, true);\n    this.api.toggleLamp$(lamp.id, lamp.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n  /**\n     * Toggle a sensor's status.\n     * Call the API to update the sensor's status,\n     * then reload the sensor data to reflect the changes.\n     */\n  public toggleSensor(sensor: SensorStatus) {\n    this.setLampPending(sensor, true);\n    this.api.toggleLamp$(sensor.id, sensor.status === \"On\" ? \"Off\" : \"On\")\n      .subscribe({\n        next: () => this.loadData()\n      });\n  }\n\n  /**\n     * Manage errors.\n     * Update the state with an appropriate error message based on the HTTP status code.\n     */\n\n  private manageError(error: any) {\n    if (error.status === HttpStatusCode.NotFound) {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Not found\"\n      });\n    } else {\n      this.$store.next({\n        ...this.$store.value,\n        error: \"Error\"\n      });\n    }\n  }\n  /**\n  * Add a new lamp with the provided alias.\n  * Start the loading spinner, call the API to add the lamp,\n  * then stop the loading spinner and reload the lamp data.\n  * @param alias The alias of the new lamp.\n  * @returns An observable that emits a boolean value indicating whether the lamp addition was successful.\n  */\n  public addLamp$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addLamp$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n   * Add a new sensor with the provided alias, geo position, and action range.\n   * Start the loading spinner, call the API to add the sensor,\n   * then stop the loading spinner and reload the sensor data.\n   * @param alias The alias of the new sensor.\n   * @param geoPos The geographic position of the new sensor.\n   * @param actionRange The action range of the new sensor.\n   * @returns An observable that emits a boolean value indicating whether the sensor addition was successful.\n   */\n\n  public addSensor$(alias: string, geoPos: string, actionRange: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => this.startLoading()),\n        switchMap(() => this.api.addSensor$(alias, geoPos, actionRange)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadData())\n      );\n  }\n  /**\n * Add a new area with the provided alias.\n * Start the loading spinner, call the API to add the area,\n * then stop the loading spinner and reload the area data.\n * @param alias The alias of the new area.\n * @returns An observable that emits a boolean value indicating whether the area addition was successful.\n */\n  public addArea$(alias: string): Observable {\n    return of(true)\n      .pipe(\n        tap(() => {\n          this.startLoading()\n        }),\n        switchMap(() => this.api.addArea$(alias)),\n        map(() => true),\n        catchError(() => of(false)),\n        tap(() => this.loadDataAreas())\n      );\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/area-button/area-button.component.ts\n            \n            component\n            AreaButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/lamp-button/lamp-button.component.ts\n            \n            component\n            LampButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/sensor-button/sensor-button.component.ts\n            \n            component\n            SensorButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/feature/area/area.component.ts\n            \n            component\n            AreaComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/areas-list/areas-list.component.ts\n            \n            component\n            AreasListComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/feature/authentication/authentication.component.ts\n            \n            component\n            AuthenticationComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/feature/lamp/lamp.component.ts\n            \n            component\n            LampComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/lamps-list/lamps-list.component.ts\n            \n            component\n            LampsListComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/private-area/private-area.component.ts\n            \n            component\n            PrivateAreaComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/feature/sensor/sensor.component.ts\n            \n            component\n            SensorComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/feature/sensors-list/sensors-list.component.ts\n            \n            component\n            SensorsListComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            function\n            AuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model.ts\n            \n            interface\n            AreaStatus\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model.ts\n            \n            interface\n            LampStatus\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model.ts\n            \n            interface\n            SensorStatus\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            injectable\n            AppService\n            \n                76 %\n                (16/21)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            interface\n            Store\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                75 %\n                (6/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.3\n        \n            @angular/common : ^16.0.3\n        \n            @angular/compiler : ^16.0.3\n        \n            @angular/core : ^16.0.3\n        \n            @angular/forms : ^16.0.3\n        \n            @angular/platform-browser : ^16.0.3\n        \n            @angular/platform-browser-dynamic : ^16.0.3\n        \n            @angular/router : ^16.0.3\n        \n            bootstrap : ^5.2.3\n        \n            @popperjs/core : ^2.11.8\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthGuard   (src/.../auth.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthGuard\n                        \n                    \n                \n            \n            \n                \nAuthGuard()\n                \n            \n\n\n\n\n            \n                \n                    Custom authentication guard to protect routes based on user authentication status.\nIf the user is not logged in, it redirects to the login page.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHttp\nThis project was generated with Angular CLI version 15.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initialState   (src/.../app.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/app.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Store\n\n                    \n                \n                \n                    \n                        Default value : {\n  lamps: [],\n  sensors: [],\n  areas: [],\n  loading: false,\n  firstLoad: true,\n  error: null\n}\n                    \n                \n\n            \n                \n                    Initial state for the application store.\nContains empty arrays for lamps, sensors, and areas,\nand sets the loading and firstLoad flags to false.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
